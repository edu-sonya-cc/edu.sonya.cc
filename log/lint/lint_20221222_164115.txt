([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	getData(): object;
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\IBrickCore.d.ts[0m:[0m[33m14[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	setData(newData: object): void;
                  [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\IBrickCore.d.ts[0m:[0m[33m15[0m:[0m[33m18[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-window-prefix[0m) For compatibility between the Window context and the Web Workers, calling Web APIs via `window` is disallowed
window.addEventListener('message', function (event) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\report.js[0m:[0m[33m60[0m:[0m[33m0[0m

    [0m[36mhint:[0m Instead, call this API via `self`, `globalThis`, or no extra prefix
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-window-prefix

([0m[31mno-explicit-any[0m) `any` type is not allowed
export declare const searchSources: any[];
                                    [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\data\data.d.ts[0m:[0m[33m99[0m:[0m[33m36[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-array-constructor[0m) Array Constructor is not allowed
export const MONTH_NAME_ARRAY = new Array(
                                [0m[31m^^^^^^^^^^[0m
	'Jan',
[0m[31m^^^^^^^[0m
	'Feb',
[0m[31m^^^^^^^[0m
	'Mar',
[0m[31m^^^^^^^[0m
	'Apr',
[0m[31m^^^^^^^[0m
	'May',
[0m[31m^^^^^^^[0m
	'Jun',
[0m[31m^^^^^^^[0m
	'Jul',
[0m[31m^^^^^^^[0m
	'Aug',
[0m[31m^^^^^^^[0m
	'Spt',
[0m[31m^^^^^^^[0m
	'Oct',
[0m[31m^^^^^^^[0m
	'Nov',
[0m[31m^^^^^^^[0m
	'Dec',
[0m[31m^^^^^^^[0m
);
[0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\dom.js[0m:[0m[33m314[0m:[0m[33m32[0m

    [0m[36mhint:[0m Use array literal notation (e.g. []) or single argument specifying array size only (e.g. new Array(5)
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-array-constructor

([0m[31mno-explicit-any[0m) `any` type is not allowed
export declare const LOCAL_STORAGE_KEY_OF_CURRENT_PAGE: any;
                                                        [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\storage.d.ts[0m:[0m[33m14[0m:[0m[33m56[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	getPageSubKind: () => any;
                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.d.ts[0m:[0m[33m96[0m:[0m[33m23[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	getPageIndex: () => any;
                     [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.d.ts[0m:[0m[33m99[0m:[0m[33m21[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		list: Array<object>,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.d.ts[0m:[0m[33m111[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		fillItem: (itemElement: HTMLDivElement, data: object | null, init?: boolean) => void,
                                                [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.d.ts[0m:[0m[33m113[0m:[0m[33m48[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		list: object[],
        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.d.ts[0m:[0m[33m116[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		fillItem: (itemElement: HTMLDivElement, data: object | null, init?: boolean) => void,
                                                [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.d.ts[0m:[0m[33m120[0m:[0m[33m48[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	getData(): object;
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\IBrickCore.ts[0m:[0m[33m21[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	setData(newData: object): void;
                  [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\IBrickCore.ts[0m:[0m[33m22[0m:[0m[33m18[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-window-prefix[0m) For compatibility between the Window context and the Web Workers, calling Web APIs via `window` is disallowed
window.addEventListener('message', function (event: Event) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\report.ts[0m:[0m[33m78[0m:[0m[33m0[0m

    [0m[36mhint:[0m Instead, call this API via `self`, `globalThis`, or no extra prefix
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-window-prefix

([0m[31mno-var[0m) `var` keyword is not allowed.
export var ActualPage;
       [0m[31m^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\const.js[0m:[0m[33m54[0m:[0m[33m7[0m

    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-var

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
			(itemElement: HTMLDivElement, data: object | null, init?: boolean) => {
                                       [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\treasures.ts[0m:[0m[33m58[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected createTableBodyRow = (item: object): void => {
                                       [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\10.ts[0m:[0m[33m248[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected getUsableList = (): Array<object> => {
                                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\10.ts[0m:[0m[33m297[0m:[0m[33m37[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
			stories.map((item: object, index: number) => {
                      [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\stories.ts[0m:[0m[33m61[0m:[0m[33m22[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
			(itemElement: HTMLDivElement, data: object | null, init?: boolean) => {
                                       [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\stories.ts[0m:[0m[33m65[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-var[0m) `var` keyword is not allowed.
var svgSpace;
[0m[31m^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\svgHelper.js[0m:[0m[33m6[0m:[0m[33m0[0m

    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-var

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	constructor(appendData: object, otherComputedData: object) {
                         [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m12[0m:[0m[33m25[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	constructor(appendData: object, otherComputedData: object) {
                                                    [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m12[0m:[0m[33m52[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected abstract createTableBodyRow(item: object): void;
                                             [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m21[0m:[0m[33m45[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataLevel3 = (newData: any): void => {};
                                             [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m63[0m:[0m[33m45[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherData = (newData: any): void => {
                                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m64[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		list.forEach((item: object) => this.data.list.push(item));
                      [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m70[0m:[0m[33m22[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		data: object,
        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m162[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		data: object,
        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m194[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		data: object,
        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m215[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		data: object,
        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m236[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		data: object,
        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m263[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected appendOperationTd = (tr: HTMLTableRowElement, data: object): void => {
                                                               [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m288[0m:[0m[33m63[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
				const newlist: Array<object> = [];
                         [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m321[0m:[0m[33m25[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
				this.data.list.forEach((item: object) => newlist.push(item));
                                  [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m322[0m:[0m[33m34[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 0:
     [0m[31m^^^^^^^[0m
						if (trIndex === 0) return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// newIndex = trIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// insertElement(tr, trList[trIndex - 1] as HTMLTableRowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const removeItemWhenMoveUp = newlist.splice(trIndex, 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						newlist.splice(trIndex - 1, 0, removeItemWhenMoveUp[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m325[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 1:
     [0m[31m^^^^^^^[0m
						if (trIndex === trCount - 1) return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// newIndex = trIndex + 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// insertElement(trList[trIndex + 1] as HTMLTableRowElement, tr);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const removeItemWhenMoveDown = newlist.splice(trIndex, 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						newlist.splice(trIndex + 1, 0, removeItemWhenMoveDown[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickWithTableBase.ts[0m:[0m[33m332[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	constructor(appendData: object, otherComputedData: object) {
                         [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m12[0m:[0m[33m25[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	constructor(appendData: object, otherComputedData: object) {
                                                    [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m12[0m:[0m[33m52[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m32[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `isLandscape` is never reassigned
				isLandscape,
    [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m33[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m35[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m36[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `pokerWidth` is never reassigned
				pokerWidth,
    [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m38[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `pokerHeight` is never reassigned
				pokerHeight,
    [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m39[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `pageMarginTop` is never reassigned
				pageMarginTop,
    [0m[31m^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m41[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `pageMarginLeft` is never reassigned
				pageMarginLeft,
    [0m[31m^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m44[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m47[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m48[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `fontSize` is never reassigned
				fontSize,
    [0m[31m^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m50[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `backFontSize` is never reassigned
				backFontSize,
    [0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m51[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `pokerKind` is never reassigned
				pokerKind,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m52[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataOfPoker = (_newData: any): void => {};
                                               [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m145[0m:[0m[33m47[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherData = (newData: any): void => {
                                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\pokerBase.ts[0m:[0m[33m348[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-array-constructor[0m) Array Constructor is not allowed
export const MONTH_NAME_ARRAY = new Array(
                                [0m[31m^^^^^^^^^^[0m
	'Jan',
[0m[31m^^^^^^^[0m
	'Feb',
[0m[31m^^^^^^^[0m
	'Mar',
[0m[31m^^^^^^^[0m
	'Apr',
[0m[31m^^^^^^^[0m
	'May',
[0m[31m^^^^^^^[0m
	'Jun',
[0m[31m^^^^^^^[0m
	'Jul',
[0m[31m^^^^^^^[0m
	'Aug',
[0m[31m^^^^^^^[0m
	'Spt',
[0m[31m^^^^^^^[0m
	'Oct',
[0m[31m^^^^^^^[0m
	'Nov',
[0m[31m^^^^^^^[0m
	'Dec',
[0m[31m^^^^^^^[0m
);
[0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\dom.ts[0m:[0m[33m347[0m:[0m[33m32[0m

    [0m[36mhint:[0m Use array literal notation (e.g. []) or single argument specifying array size only (e.g. new Array(5)
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-array-constructor

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
namespace boxSpace {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
	export namespace edu {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
		export namespace sonya {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			export namespace cc {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export enum BoxKind {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>None</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					none = 0,
[0m[31m^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboid = 1,
[0m[31m^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid without top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无顶长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無頂長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidWithoutTop = 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid without bottom</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无底长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無底長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidWithoutBottom = 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSide = 4,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side and without top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧无顶长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側無頂長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSideWithoutTop = 5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side and without bottom</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧无底长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側無底長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSideWithoutBottom = 6,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generation Parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export interface BoxParameter {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>id</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>id</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					id: string;
[0m[31m^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Box Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盒子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					boxKind: BoxKind;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Relevant length, such as length, width and height</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>相关长度，如长宽高</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>相關長度，如長寬高</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					lengths: Array<number>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Contents of all sides</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>各面内容</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>各面內容</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					contents: Array<I18nable | string>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Outside Boundary Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>外边界线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>外邊界線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					outerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Interior Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>内部线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>內部線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					innerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Text Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>文本样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>文字樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					textStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Rotate</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>旋转</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>旋轉</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					rotate: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Move Up</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>上移</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>上移</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					move: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Hide the half cirlce of box top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>隐藏盒顶半圆</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>隱藏盒頂半圓</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					topWithoutHalfCircle: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Other parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>其它参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>其它參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					options: object;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generation Result</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成结果</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成結果</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export interface BoxResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Svg Element Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>svg元素编号</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>svg元素編號</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					id: string;
[0m[31m^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Svg Element</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>svg元素</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>svg元素</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					svg: SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>css</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>样式表</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>樣式表</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					css: string;
[0m[31m^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generator</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成器</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成器</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export class BoxGenerator {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Generate box in batch</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>批量生成盒子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>批量生成盒子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @param createParameters
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <en>Arrays: creating parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>数组：创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>數組：創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @returns
[0m[31m^^^^^^^^^^^^^^^^[0m
					 * <en>Generate results in array format, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成结果，为数组格式，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成結果，為數組格式，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					public batchCreate(createParameters: Array<BoxParameter>): Array<BoxResult> {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						createParameters.forEach((createParameter, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (createParameter.id.length === 0) createParameter.id = `svg_index`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						return createParameters.map((createParameter) => this.create(createParameter));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Generate a single box</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成单个盒子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成單個盒子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @param param0
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					 * <en>Deconstructed creation parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>已解构的创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>已解構的創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @returns
[0m[31m^^^^^^^^^^^^^^^^[0m
					 * <en>Generate results, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成结果，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成結果，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					public create({
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						id,
[0m[31m^^^^^^^^^[0m
						boxKind,
[0m[31m^^^^^^^^^^^^^^[0m
						lengths: LENGTHS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						contents: CONTENTS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerLineStyle: OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						innerLineStyle: INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textStyle: TEXT_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rotate: ROTATE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						move: MOVE,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						topWithoutHalfCircle: TOP_WITHOUT_HALF_CIRCLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						options: OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					}: BoxParameter): BoxResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (id.length === 0) id = 'svg_0';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const FIRST_LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let FIXED_FIRST_LENGTH = FIRST_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let nested = false;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// switch(boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   case BoxKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     FIXED_FIRST_LENGTH = 25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     nested = true;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     break;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//   default:
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//     break;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						// }
[0m[31m^^^^^^^^^^[0m

						type SvgTextInfo = svgSpace.edu.sonya.cc.SvgTextInfo;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const { createSvg, appendText } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const svg = createSvg();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('id', id);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const viewBox = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							left: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							right: 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
							top: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							bottom: 0,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const infos = [] as Array<SvgTextInfo>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// case BoxKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     for(let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//       infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     }
[0m[31m^^^^^^^^^^^^^^^[0m
							//   });
[0m[31m^^^^^^^^^^^^^^^[0m
							//   break;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								});
[0m[31m^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const mmToPxScale = (new DPIHelper()).getMmToPxScale();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								this.drawGraphsOfCuboidBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									svg,
[0m[31m^^^^^^^^^^^^^[0m
									LENGTHS,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									viewBox,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
									boxKind,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									ROTATE,
[0m[31m^^^^^^^^^^^^^^^^[0m
									MOVE,
[0m[31m^^^^^^^^^^^^^^[0m
									TOP_WITHOUT_HALF_CIRCLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								);
[0m[31m^^^^^^^^^^[0m
								this.drawTextsOfCuboiBox(infos, LENGTHS, boxKind);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						infos.forEach(({ content, x, y, rotate }) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							appendText(svg, TEXT_STYLE, content, x, y, rotate, 'left top', null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						const width = `${viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const height = `${viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('width', width);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', height);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${width};height:${height};`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const outerSvg = nested && (FIXED_FIRST_LENGTH !== FIRST_LENGTH) ? this.createSvg(): null;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const outerSvg = createElement('wrap'); // as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.appendChild(svg);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.setAttribute('id', id.concat('_wrapper'));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (FIXED_FIRST_LENGTH !== FIRST_LENGTH) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const scale = FIRST_LENGTH / FIXED_FIRST_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const widthOuterSvg = `${scale * viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const heightOuterSvg = `${scale * viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const transformScale = mmToPxScale * (scale - 1) / 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							outerSvg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'style',
[0m[31m^^^^^^^^^^^^^^^^[0m
								`width:${widthOuterSvg};height:${heightOuterSvg};display:inline-block;`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							svg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'transform',
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
								`translate(${viewBox.right * transformScale}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									viewBox.bottom * transformScale
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}) scale(${scale}, ${scale})`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							svg.setAttribute('transform-origin', 'center');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const css = 'page,wrap{page-break-inside:avoid;}wrap{display:inline-flex;}';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return { id, svg: nested ? outerSvg : svg, css };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					drawGraphsOfCuboidBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						LENGTHS: number[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						boxKind: BoxKind,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						ROTATE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						MOVE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						TOP_WITHOUT_HALF_CIRCLE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const isSameSide = boxKind >= 4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH = LENGTHS[2];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT = LENGTHS[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const OTHER_SIZE = isSameSide ? LENGTHS[3] : 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const MIN_LENGTH = Math.min(LENGTH, WIDTH, HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const LENGTH_PX = LENGTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH_PX = WIDTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT_PX = HEIGHT * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const OTHER_SIZE_PX = OTHER_SIZE * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeight = MIN_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeightPx = duckTongueHeight * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const pasteRegionScale = 0.45;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionHeight = LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionHeightPx = pasteRegionHeight * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const offsetScale = 0.1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const offsetXPx = LENGTH_PX * offsetScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionWidthPx = HEIGHT_PX - offsetXPx * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueWidth = LENGTH * (1 - offsetScale * 2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueWidthPx = duckTongueWidth * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// console.log(LENGTH, WIDTH, HEIGHT, MIN_LENGTH, mmToPxScale, LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const YDifference = (boxKind === BoxKind.cuboidWithoutTop ||
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							? duckTongueHeight + HEIGHT
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							: 0;
[0m[31m^^^^^^^^^^^[0m
						const YDifferencePx = YDifference * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const diameter = duckTongueHeight * 0.8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const radius = diameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const lengthSubtractDiameter = LENGTH - diameter;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const halfLengthSubtractDiameter = lengthSubtractDiameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const halfLengthSubtractDiameterPx = halfLengthSubtractDiameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const radiusPx = radius * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const diameterPx = diameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const smallDiameter = diameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallRadius = smallDiameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallDiameterPx = smallDiameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallRadiusPx = smallRadius * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const pasteRegionHeightSubtractSmallRadiusPx = pasteRegionHeightPx - smallRadiusPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionWidthSubtractSmallDiameterPx = pasteRegionWidthPx - smallDiameterPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueHeightSubtractRadiusPx = duckTongueHeightPx - radiusPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueWidthSubtractDiameterPx = duckTongueWidthPx - diameterPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// console.log(LENGTH, WIDTH, HEIGHT, MIN_LENGTH, mmToPxScale, LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pathStartY = duckTongueHeightPx + HEIGHT_PX - YDifferencePx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const path = document.createElementNS(SVG_NS, 'path');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (boxKind < 4) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'd',
[0m[31m^^^^^^^^^^^^[0m
								`M 0, ${pathStartY} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.concat(
[0m[31m^^^^^^^^^^^^^^^^^[0m
										// https://www.cnblogs.com/LcxSummer/p/12420385.html
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

										boxKind === BoxKind.cuboidWithoutTop
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h ${HEIGHT_PX * 3 + LENGTH_PX * 2} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												TOP_WITHOUT_HALF_CIRCLE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													? ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${HEIGHT_PX + halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`a ${radiusPx} ${radiusPx} 0 1 0 ${diameterPx} 0`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													)
[0m[31m^^^^^^^^^^^^^^[0m
													: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${HEIGHT_PX + LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													),
[0m[31m^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												// `h ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										`v ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										`h -${LENGTH_PX + HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										boxKind === BoxKind.cuboidWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h -${HEIGHT_PX * 2 + LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										' z',
[0m[31m^^^^^^^^^^^^^^^[0m
									),
[0m[31m^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'd',
[0m[31m^^^^^^^^^^^^[0m
								`M 0, ${pathStartY} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.concat(
[0m[31m^^^^^^^^^^^^^^^^^[0m
										// https://www.cnblogs.com/LcxSummer/p/12420385.html
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

										boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h ${HEIGHT_PX * 2.5 + LENGTH_PX * 2} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												TOP_WITHOUT_HALF_CIRCLE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													? ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`a ${radiusPx} ${radiusPx} 0 1 0 ${diameterPx} 0`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													)
[0m[31m^^^^^^^^^^^^^^[0m
													: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${LENGTH_PX + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													),
[0m[31m^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										`v ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										`h -${LENGTH_PX + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h -${HEIGHT_PX * 2 + LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										' z',
[0m[31m^^^^^^^^^^^^^^^[0m
									),
[0m[31m^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let style = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						if (ROTATE) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							style = 'transform:rotate(180deg);';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (MOVE) {
[0m[31m^^^^^^^^^^^^^^^^^[0m
							style += `position:relative;margin-top:-${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								HEIGHT + duckTongueHeight -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								Math.max(0, pasteRegionHeight * 2 - (HEIGHT + duckTongueHeight))
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}mm;`;
[0m[31m^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (style.length) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							svg.setAttribute('style', style);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const X1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						const X2 = X1 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X3 = X2 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X4 = X3 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X5 = X4 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X6 = X5 + (isSameSide ? OTHER_SIZE : HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const Y1 = 0 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y2 = Y1 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y4 = Y2 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y5 = Y4 + WIDTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y7 = Y5 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y8 = Y7 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y3 = Y4 - pasteRegionHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y6 = Y5 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const { appendLine } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (boxKind < 4) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (boxKind !== BoxKind.cuboidWithoutTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X4, X5, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X3, X6, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							if (boxKind !== BoxKind.cuboidCoverOnTheSameSideWithoutTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X2, X3, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X1, X4, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (
[0m[31m^^^^^^^^^^[0m
							boxKind !== BoxKind.cuboidWithoutBottom &&
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							boxKind !== BoxKind.cuboidCoverOnTheSameSideWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						) {
[0m[31m^^^^^^^^^[0m
							appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						viewBox.left = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = X6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox.bottom = Y8 - (duckTongueHeight + HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								viewBox.bottom = Y8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					private drawTextsOfCuboiBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						infos: {
[0m[31m^^^^^^^^^^^^^^[0m
							content: any;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							x: number;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							y: number;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							rotate: number | 'auto' | 'auto-reverse';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}[],
[0m[31m^^^^^^^^^^[0m
						LENGTHS: number[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						boxKind: BoxKind,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const { setSvgTextInfo } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH = LENGTHS[2];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT = LENGTHS[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const MIN_LENGTH = Math.min(LENGTH, WIDTH, HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeight = MIN_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const YDifference = (boxKind === BoxKind.cuboidWithoutTop ||
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							? duckTongueHeight + HEIGHT
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							: 0;
[0m[31m^^^^^^^^^^^[0m

						const X1 = -1 * (HEIGHT * 2 + LENGTH * 1.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X2 = duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X3 = HEIGHT + LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X4 = X1;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						const X5 = -X2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						const X6 = X3;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m

						const Y1 = -1 * (duckTongueHeight + HEIGHT * 0.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y2 = -1 * (HEIGHT * 0.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y3 = duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y4 = -1 * (duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y5 = HEIGHT * 1.5 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y6 = duckTongueHeight + HEIGHT + WIDTH + HEIGHT * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos[0].content = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[0], X1, Y1, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[0], -1 * (HEIGHT + LENGTH * 0.5), Y1, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						setSvgTextInfo(infos[1], X2, Y2, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[2], X3, Y3, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[3], X4, Y4, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[4], X5, Y5, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos[5].content = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[5], X6, Y6, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
	}
[0m[31m^^[0m
}
[0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m9[0m:[0m[33m0[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
	export namespace edu {
        [0m[31m^^^^^^^^^^^^^^^[0m
		export namespace sonya {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			export namespace cc {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export enum BoxKind {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>None</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					none = 0,
[0m[31m^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboid = 1,
[0m[31m^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid without top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无顶长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無頂長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidWithoutTop = 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid without bottom</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无底长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無底長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidWithoutBottom = 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSide = 4,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side and without top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧无顶长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側無頂長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSideWithoutTop = 5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side and without bottom</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧无底长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側無底長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSideWithoutBottom = 6,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generation Parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export interface BoxParameter {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>id</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>id</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					id: string;
[0m[31m^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Box Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盒子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					boxKind: BoxKind;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Relevant length, such as length, width and height</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>相关长度，如长宽高</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>相關長度，如長寬高</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					lengths: Array<number>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Contents of all sides</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>各面内容</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>各面內容</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					contents: Array<I18nable | string>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Outside Boundary Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>外边界线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>外邊界線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					outerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Interior Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>内部线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>內部線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					innerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Text Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>文本样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>文字樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					textStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Rotate</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>旋转</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>旋轉</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					rotate: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Move Up</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>上移</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>上移</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					move: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Hide the half cirlce of box top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>隐藏盒顶半圆</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>隱藏盒頂半圓</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					topWithoutHalfCircle: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Other parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>其它参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>其它參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					options: object;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generation Result</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成结果</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成結果</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export interface BoxResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Svg Element Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>svg元素编号</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>svg元素編號</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					id: string;
[0m[31m^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Svg Element</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>svg元素</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>svg元素</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					svg: SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>css</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>样式表</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>樣式表</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					css: string;
[0m[31m^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generator</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成器</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成器</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export class BoxGenerator {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Generate box in batch</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>批量生成盒子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>批量生成盒子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @param createParameters
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <en>Arrays: creating parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>数组：创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>數組：創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @returns
[0m[31m^^^^^^^^^^^^^^^^[0m
					 * <en>Generate results in array format, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成结果，为数组格式，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成結果，為數組格式，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					public batchCreate(createParameters: Array<BoxParameter>): Array<BoxResult> {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						createParameters.forEach((createParameter, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (createParameter.id.length === 0) createParameter.id = `svg_index`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						return createParameters.map((createParameter) => this.create(createParameter));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Generate a single box</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成单个盒子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成單個盒子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @param param0
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					 * <en>Deconstructed creation parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>已解构的创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>已解構的創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @returns
[0m[31m^^^^^^^^^^^^^^^^[0m
					 * <en>Generate results, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成结果，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成結果，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					public create({
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						id,
[0m[31m^^^^^^^^^[0m
						boxKind,
[0m[31m^^^^^^^^^^^^^^[0m
						lengths: LENGTHS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						contents: CONTENTS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerLineStyle: OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						innerLineStyle: INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textStyle: TEXT_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rotate: ROTATE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						move: MOVE,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						topWithoutHalfCircle: TOP_WITHOUT_HALF_CIRCLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						options: OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					}: BoxParameter): BoxResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (id.length === 0) id = 'svg_0';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const FIRST_LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let FIXED_FIRST_LENGTH = FIRST_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let nested = false;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// switch(boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   case BoxKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     FIXED_FIRST_LENGTH = 25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     nested = true;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     break;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//   default:
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//     break;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						// }
[0m[31m^^^^^^^^^^[0m

						type SvgTextInfo = svgSpace.edu.sonya.cc.SvgTextInfo;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const { createSvg, appendText } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const svg = createSvg();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('id', id);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const viewBox = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							left: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							right: 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
							top: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							bottom: 0,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const infos = [] as Array<SvgTextInfo>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// case BoxKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     for(let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//       infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     }
[0m[31m^^^^^^^^^^^^^^^[0m
							//   });
[0m[31m^^^^^^^^^^^^^^^[0m
							//   break;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								});
[0m[31m^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const mmToPxScale = (new DPIHelper()).getMmToPxScale();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								this.drawGraphsOfCuboidBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									svg,
[0m[31m^^^^^^^^^^^^^[0m
									LENGTHS,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									viewBox,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
									boxKind,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									ROTATE,
[0m[31m^^^^^^^^^^^^^^^^[0m
									MOVE,
[0m[31m^^^^^^^^^^^^^^[0m
									TOP_WITHOUT_HALF_CIRCLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								);
[0m[31m^^^^^^^^^^[0m
								this.drawTextsOfCuboiBox(infos, LENGTHS, boxKind);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						infos.forEach(({ content, x, y, rotate }) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							appendText(svg, TEXT_STYLE, content, x, y, rotate, 'left top', null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						const width = `${viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const height = `${viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('width', width);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', height);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${width};height:${height};`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const outerSvg = nested && (FIXED_FIRST_LENGTH !== FIRST_LENGTH) ? this.createSvg(): null;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const outerSvg = createElement('wrap'); // as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.appendChild(svg);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.setAttribute('id', id.concat('_wrapper'));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (FIXED_FIRST_LENGTH !== FIRST_LENGTH) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const scale = FIRST_LENGTH / FIXED_FIRST_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const widthOuterSvg = `${scale * viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const heightOuterSvg = `${scale * viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const transformScale = mmToPxScale * (scale - 1) / 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							outerSvg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'style',
[0m[31m^^^^^^^^^^^^^^^^[0m
								`width:${widthOuterSvg};height:${heightOuterSvg};display:inline-block;`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							svg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'transform',
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
								`translate(${viewBox.right * transformScale}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									viewBox.bottom * transformScale
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}) scale(${scale}, ${scale})`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							svg.setAttribute('transform-origin', 'center');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const css = 'page,wrap{page-break-inside:avoid;}wrap{display:inline-flex;}';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return { id, svg: nested ? outerSvg : svg, css };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					drawGraphsOfCuboidBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						LENGTHS: number[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						boxKind: BoxKind,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						ROTATE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						MOVE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						TOP_WITHOUT_HALF_CIRCLE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const isSameSide = boxKind >= 4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH = LENGTHS[2];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT = LENGTHS[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const OTHER_SIZE = isSameSide ? LENGTHS[3] : 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const MIN_LENGTH = Math.min(LENGTH, WIDTH, HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const LENGTH_PX = LENGTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH_PX = WIDTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT_PX = HEIGHT * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const OTHER_SIZE_PX = OTHER_SIZE * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeight = MIN_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeightPx = duckTongueHeight * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const pasteRegionScale = 0.45;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionHeight = LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionHeightPx = pasteRegionHeight * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const offsetScale = 0.1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const offsetXPx = LENGTH_PX * offsetScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionWidthPx = HEIGHT_PX - offsetXPx * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueWidth = LENGTH * (1 - offsetScale * 2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueWidthPx = duckTongueWidth * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// console.log(LENGTH, WIDTH, HEIGHT, MIN_LENGTH, mmToPxScale, LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const YDifference = (boxKind === BoxKind.cuboidWithoutTop ||
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							? duckTongueHeight + HEIGHT
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							: 0;
[0m[31m^^^^^^^^^^^[0m
						const YDifferencePx = YDifference * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const diameter = duckTongueHeight * 0.8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const radius = diameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const lengthSubtractDiameter = LENGTH - diameter;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const halfLengthSubtractDiameter = lengthSubtractDiameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const halfLengthSubtractDiameterPx = halfLengthSubtractDiameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const radiusPx = radius * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const diameterPx = diameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const smallDiameter = diameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallRadius = smallDiameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallDiameterPx = smallDiameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallRadiusPx = smallRadius * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const pasteRegionHeightSubtractSmallRadiusPx = pasteRegionHeightPx - smallRadiusPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionWidthSubtractSmallDiameterPx = pasteRegionWidthPx - smallDiameterPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueHeightSubtractRadiusPx = duckTongueHeightPx - radiusPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueWidthSubtractDiameterPx = duckTongueWidthPx - diameterPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// console.log(LENGTH, WIDTH, HEIGHT, MIN_LENGTH, mmToPxScale, LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pathStartY = duckTongueHeightPx + HEIGHT_PX - YDifferencePx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const path = document.createElementNS(SVG_NS, 'path');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (boxKind < 4) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'd',
[0m[31m^^^^^^^^^^^^[0m
								`M 0, ${pathStartY} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.concat(
[0m[31m^^^^^^^^^^^^^^^^^[0m
										// https://www.cnblogs.com/LcxSummer/p/12420385.html
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

										boxKind === BoxKind.cuboidWithoutTop
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h ${HEIGHT_PX * 3 + LENGTH_PX * 2} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												TOP_WITHOUT_HALF_CIRCLE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													? ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${HEIGHT_PX + halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`a ${radiusPx} ${radiusPx} 0 1 0 ${diameterPx} 0`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													)
[0m[31m^^^^^^^^^^^^^^[0m
													: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${HEIGHT_PX + LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													),
[0m[31m^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												// `h ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										`v ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										`h -${LENGTH_PX + HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										boxKind === BoxKind.cuboidWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h -${HEIGHT_PX * 2 + LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										' z',
[0m[31m^^^^^^^^^^^^^^^[0m
									),
[0m[31m^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'd',
[0m[31m^^^^^^^^^^^^[0m
								`M 0, ${pathStartY} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.concat(
[0m[31m^^^^^^^^^^^^^^^^^[0m
										// https://www.cnblogs.com/LcxSummer/p/12420385.html
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

										boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h ${HEIGHT_PX * 2.5 + LENGTH_PX * 2} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												TOP_WITHOUT_HALF_CIRCLE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													? ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`a ${radiusPx} ${radiusPx} 0 1 0 ${diameterPx} 0`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													)
[0m[31m^^^^^^^^^^^^^^[0m
													: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${LENGTH_PX + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													),
[0m[31m^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										`v ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										`h -${LENGTH_PX + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h -${HEIGHT_PX * 2 + LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										' z',
[0m[31m^^^^^^^^^^^^^^^[0m
									),
[0m[31m^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let style = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						if (ROTATE) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							style = 'transform:rotate(180deg);';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (MOVE) {
[0m[31m^^^^^^^^^^^^^^^^^[0m
							style += `position:relative;margin-top:-${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								HEIGHT + duckTongueHeight -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								Math.max(0, pasteRegionHeight * 2 - (HEIGHT + duckTongueHeight))
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}mm;`;
[0m[31m^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (style.length) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							svg.setAttribute('style', style);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const X1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						const X2 = X1 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X3 = X2 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X4 = X3 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X5 = X4 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X6 = X5 + (isSameSide ? OTHER_SIZE : HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const Y1 = 0 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y2 = Y1 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y4 = Y2 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y5 = Y4 + WIDTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y7 = Y5 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y8 = Y7 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y3 = Y4 - pasteRegionHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y6 = Y5 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const { appendLine } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (boxKind < 4) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (boxKind !== BoxKind.cuboidWithoutTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X4, X5, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X3, X6, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							if (boxKind !== BoxKind.cuboidCoverOnTheSameSideWithoutTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X2, X3, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X1, X4, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (
[0m[31m^^^^^^^^^^[0m
							boxKind !== BoxKind.cuboidWithoutBottom &&
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							boxKind !== BoxKind.cuboidCoverOnTheSameSideWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						) {
[0m[31m^^^^^^^^^[0m
							appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						viewBox.left = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = X6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox.bottom = Y8 - (duckTongueHeight + HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								viewBox.bottom = Y8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					private drawTextsOfCuboiBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						infos: {
[0m[31m^^^^^^^^^^^^^^[0m
							content: any;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							x: number;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							y: number;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							rotate: number | 'auto' | 'auto-reverse';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}[],
[0m[31m^^^^^^^^^^[0m
						LENGTHS: number[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						boxKind: BoxKind,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const { setSvgTextInfo } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH = LENGTHS[2];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT = LENGTHS[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const MIN_LENGTH = Math.min(LENGTH, WIDTH, HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeight = MIN_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const YDifference = (boxKind === BoxKind.cuboidWithoutTop ||
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							? duckTongueHeight + HEIGHT
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							: 0;
[0m[31m^^^^^^^^^^^[0m

						const X1 = -1 * (HEIGHT * 2 + LENGTH * 1.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X2 = duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X3 = HEIGHT + LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X4 = X1;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						const X5 = -X2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						const X6 = X3;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m

						const Y1 = -1 * (duckTongueHeight + HEIGHT * 0.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y2 = -1 * (HEIGHT * 0.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y3 = duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y4 = -1 * (duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y5 = HEIGHT * 1.5 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y6 = duckTongueHeight + HEIGHT + WIDTH + HEIGHT * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos[0].content = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[0], X1, Y1, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[0], -1 * (HEIGHT + LENGTH * 0.5), Y1, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						setSvgTextInfo(infos[1], X2, Y2, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[2], X3, Y3, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[3], X4, Y4, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[4], X5, Y5, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos[5].content = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[5], X6, Y6, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
	}
[0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m10[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
		export namespace sonya {
         [0m[31m^^^^^^^^^^^^^^^^^[0m
			export namespace cc {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export enum BoxKind {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>None</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					none = 0,
[0m[31m^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboid = 1,
[0m[31m^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid without top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无顶长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無頂長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidWithoutTop = 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid without bottom</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无底长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無底長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidWithoutBottom = 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSide = 4,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side and without top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧无顶长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側無頂長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSideWithoutTop = 5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side and without bottom</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧无底长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側無底長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSideWithoutBottom = 6,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generation Parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export interface BoxParameter {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>id</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>id</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					id: string;
[0m[31m^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Box Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盒子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					boxKind: BoxKind;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Relevant length, such as length, width and height</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>相关长度，如长宽高</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>相關長度，如長寬高</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					lengths: Array<number>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Contents of all sides</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>各面内容</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>各面內容</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					contents: Array<I18nable | string>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Outside Boundary Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>外边界线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>外邊界線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					outerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Interior Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>内部线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>內部線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					innerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Text Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>文本样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>文字樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					textStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Rotate</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>旋转</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>旋轉</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					rotate: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Move Up</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>上移</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>上移</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					move: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Hide the half cirlce of box top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>隐藏盒顶半圆</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>隱藏盒頂半圓</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					topWithoutHalfCircle: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Other parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>其它参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>其它參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					options: object;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generation Result</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成结果</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成結果</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export interface BoxResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Svg Element Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>svg元素编号</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>svg元素編號</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					id: string;
[0m[31m^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Svg Element</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>svg元素</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>svg元素</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					svg: SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>css</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>样式表</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>樣式表</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					css: string;
[0m[31m^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generator</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成器</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成器</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export class BoxGenerator {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Generate box in batch</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>批量生成盒子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>批量生成盒子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @param createParameters
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <en>Arrays: creating parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>数组：创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>數組：創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @returns
[0m[31m^^^^^^^^^^^^^^^^[0m
					 * <en>Generate results in array format, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成结果，为数组格式，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成結果，為數組格式，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					public batchCreate(createParameters: Array<BoxParameter>): Array<BoxResult> {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						createParameters.forEach((createParameter, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (createParameter.id.length === 0) createParameter.id = `svg_index`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						return createParameters.map((createParameter) => this.create(createParameter));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Generate a single box</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成单个盒子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成單個盒子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @param param0
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					 * <en>Deconstructed creation parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>已解构的创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>已解構的創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @returns
[0m[31m^^^^^^^^^^^^^^^^[0m
					 * <en>Generate results, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成结果，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成結果，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					public create({
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						id,
[0m[31m^^^^^^^^^[0m
						boxKind,
[0m[31m^^^^^^^^^^^^^^[0m
						lengths: LENGTHS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						contents: CONTENTS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerLineStyle: OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						innerLineStyle: INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textStyle: TEXT_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rotate: ROTATE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						move: MOVE,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						topWithoutHalfCircle: TOP_WITHOUT_HALF_CIRCLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						options: OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					}: BoxParameter): BoxResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (id.length === 0) id = 'svg_0';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const FIRST_LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let FIXED_FIRST_LENGTH = FIRST_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let nested = false;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// switch(boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   case BoxKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     FIXED_FIRST_LENGTH = 25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     nested = true;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     break;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//   default:
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//     break;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						// }
[0m[31m^^^^^^^^^^[0m

						type SvgTextInfo = svgSpace.edu.sonya.cc.SvgTextInfo;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const { createSvg, appendText } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const svg = createSvg();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('id', id);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const viewBox = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							left: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							right: 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
							top: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							bottom: 0,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const infos = [] as Array<SvgTextInfo>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// case BoxKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     for(let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//       infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     }
[0m[31m^^^^^^^^^^^^^^^[0m
							//   });
[0m[31m^^^^^^^^^^^^^^^[0m
							//   break;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								});
[0m[31m^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const mmToPxScale = (new DPIHelper()).getMmToPxScale();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								this.drawGraphsOfCuboidBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									svg,
[0m[31m^^^^^^^^^^^^^[0m
									LENGTHS,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									viewBox,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
									boxKind,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									ROTATE,
[0m[31m^^^^^^^^^^^^^^^^[0m
									MOVE,
[0m[31m^^^^^^^^^^^^^^[0m
									TOP_WITHOUT_HALF_CIRCLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								);
[0m[31m^^^^^^^^^^[0m
								this.drawTextsOfCuboiBox(infos, LENGTHS, boxKind);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						infos.forEach(({ content, x, y, rotate }) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							appendText(svg, TEXT_STYLE, content, x, y, rotate, 'left top', null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						const width = `${viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const height = `${viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('width', width);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', height);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${width};height:${height};`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const outerSvg = nested && (FIXED_FIRST_LENGTH !== FIRST_LENGTH) ? this.createSvg(): null;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const outerSvg = createElement('wrap'); // as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.appendChild(svg);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.setAttribute('id', id.concat('_wrapper'));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (FIXED_FIRST_LENGTH !== FIRST_LENGTH) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const scale = FIRST_LENGTH / FIXED_FIRST_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const widthOuterSvg = `${scale * viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const heightOuterSvg = `${scale * viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const transformScale = mmToPxScale * (scale - 1) / 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							outerSvg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'style',
[0m[31m^^^^^^^^^^^^^^^^[0m
								`width:${widthOuterSvg};height:${heightOuterSvg};display:inline-block;`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							svg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'transform',
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
								`translate(${viewBox.right * transformScale}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									viewBox.bottom * transformScale
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}) scale(${scale}, ${scale})`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							svg.setAttribute('transform-origin', 'center');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const css = 'page,wrap{page-break-inside:avoid;}wrap{display:inline-flex;}';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return { id, svg: nested ? outerSvg : svg, css };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					drawGraphsOfCuboidBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						LENGTHS: number[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						boxKind: BoxKind,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						ROTATE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						MOVE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						TOP_WITHOUT_HALF_CIRCLE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const isSameSide = boxKind >= 4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH = LENGTHS[2];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT = LENGTHS[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const OTHER_SIZE = isSameSide ? LENGTHS[3] : 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const MIN_LENGTH = Math.min(LENGTH, WIDTH, HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const LENGTH_PX = LENGTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH_PX = WIDTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT_PX = HEIGHT * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const OTHER_SIZE_PX = OTHER_SIZE * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeight = MIN_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeightPx = duckTongueHeight * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const pasteRegionScale = 0.45;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionHeight = LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionHeightPx = pasteRegionHeight * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const offsetScale = 0.1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const offsetXPx = LENGTH_PX * offsetScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionWidthPx = HEIGHT_PX - offsetXPx * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueWidth = LENGTH * (1 - offsetScale * 2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueWidthPx = duckTongueWidth * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// console.log(LENGTH, WIDTH, HEIGHT, MIN_LENGTH, mmToPxScale, LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const YDifference = (boxKind === BoxKind.cuboidWithoutTop ||
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							? duckTongueHeight + HEIGHT
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							: 0;
[0m[31m^^^^^^^^^^^[0m
						const YDifferencePx = YDifference * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const diameter = duckTongueHeight * 0.8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const radius = diameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const lengthSubtractDiameter = LENGTH - diameter;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const halfLengthSubtractDiameter = lengthSubtractDiameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const halfLengthSubtractDiameterPx = halfLengthSubtractDiameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const radiusPx = radius * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const diameterPx = diameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const smallDiameter = diameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallRadius = smallDiameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallDiameterPx = smallDiameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallRadiusPx = smallRadius * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const pasteRegionHeightSubtractSmallRadiusPx = pasteRegionHeightPx - smallRadiusPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionWidthSubtractSmallDiameterPx = pasteRegionWidthPx - smallDiameterPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueHeightSubtractRadiusPx = duckTongueHeightPx - radiusPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueWidthSubtractDiameterPx = duckTongueWidthPx - diameterPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// console.log(LENGTH, WIDTH, HEIGHT, MIN_LENGTH, mmToPxScale, LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pathStartY = duckTongueHeightPx + HEIGHT_PX - YDifferencePx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const path = document.createElementNS(SVG_NS, 'path');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (boxKind < 4) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'd',
[0m[31m^^^^^^^^^^^^[0m
								`M 0, ${pathStartY} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.concat(
[0m[31m^^^^^^^^^^^^^^^^^[0m
										// https://www.cnblogs.com/LcxSummer/p/12420385.html
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

										boxKind === BoxKind.cuboidWithoutTop
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h ${HEIGHT_PX * 3 + LENGTH_PX * 2} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												TOP_WITHOUT_HALF_CIRCLE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													? ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${HEIGHT_PX + halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`a ${radiusPx} ${radiusPx} 0 1 0 ${diameterPx} 0`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													)
[0m[31m^^^^^^^^^^^^^^[0m
													: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${HEIGHT_PX + LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													),
[0m[31m^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												// `h ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										`v ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										`h -${LENGTH_PX + HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										boxKind === BoxKind.cuboidWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h -${HEIGHT_PX * 2 + LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										' z',
[0m[31m^^^^^^^^^^^^^^^[0m
									),
[0m[31m^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'd',
[0m[31m^^^^^^^^^^^^[0m
								`M 0, ${pathStartY} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.concat(
[0m[31m^^^^^^^^^^^^^^^^^[0m
										// https://www.cnblogs.com/LcxSummer/p/12420385.html
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

										boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h ${HEIGHT_PX * 2.5 + LENGTH_PX * 2} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												TOP_WITHOUT_HALF_CIRCLE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													? ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`a ${radiusPx} ${radiusPx} 0 1 0 ${diameterPx} 0`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													)
[0m[31m^^^^^^^^^^^^^^[0m
													: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${LENGTH_PX + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													),
[0m[31m^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										`v ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										`h -${LENGTH_PX + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h -${HEIGHT_PX * 2 + LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										' z',
[0m[31m^^^^^^^^^^^^^^^[0m
									),
[0m[31m^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let style = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						if (ROTATE) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							style = 'transform:rotate(180deg);';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (MOVE) {
[0m[31m^^^^^^^^^^^^^^^^^[0m
							style += `position:relative;margin-top:-${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								HEIGHT + duckTongueHeight -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								Math.max(0, pasteRegionHeight * 2 - (HEIGHT + duckTongueHeight))
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}mm;`;
[0m[31m^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (style.length) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							svg.setAttribute('style', style);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const X1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						const X2 = X1 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X3 = X2 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X4 = X3 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X5 = X4 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X6 = X5 + (isSameSide ? OTHER_SIZE : HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const Y1 = 0 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y2 = Y1 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y4 = Y2 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y5 = Y4 + WIDTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y7 = Y5 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y8 = Y7 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y3 = Y4 - pasteRegionHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y6 = Y5 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const { appendLine } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (boxKind < 4) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (boxKind !== BoxKind.cuboidWithoutTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X4, X5, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X3, X6, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							if (boxKind !== BoxKind.cuboidCoverOnTheSameSideWithoutTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X2, X3, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X1, X4, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (
[0m[31m^^^^^^^^^^[0m
							boxKind !== BoxKind.cuboidWithoutBottom &&
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							boxKind !== BoxKind.cuboidCoverOnTheSameSideWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						) {
[0m[31m^^^^^^^^^[0m
							appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						viewBox.left = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = X6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox.bottom = Y8 - (duckTongueHeight + HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								viewBox.bottom = Y8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					private drawTextsOfCuboiBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						infos: {
[0m[31m^^^^^^^^^^^^^^[0m
							content: any;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							x: number;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							y: number;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							rotate: number | 'auto' | 'auto-reverse';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}[],
[0m[31m^^^^^^^^^^[0m
						LENGTHS: number[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						boxKind: BoxKind,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const { setSvgTextInfo } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH = LENGTHS[2];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT = LENGTHS[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const MIN_LENGTH = Math.min(LENGTH, WIDTH, HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeight = MIN_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const YDifference = (boxKind === BoxKind.cuboidWithoutTop ||
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							? duckTongueHeight + HEIGHT
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							: 0;
[0m[31m^^^^^^^^^^^[0m

						const X1 = -1 * (HEIGHT * 2 + LENGTH * 1.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X2 = duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X3 = HEIGHT + LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X4 = X1;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						const X5 = -X2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						const X6 = X3;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m

						const Y1 = -1 * (duckTongueHeight + HEIGHT * 0.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y2 = -1 * (HEIGHT * 0.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y3 = duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y4 = -1 * (duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y5 = HEIGHT * 1.5 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y6 = duckTongueHeight + HEIGHT + WIDTH + HEIGHT * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos[0].content = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[0], X1, Y1, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[0], -1 * (HEIGHT + LENGTH * 0.5), Y1, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						setSvgTextInfo(infos[1], X2, Y2, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[2], X3, Y3, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[3], X4, Y4, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[4], X5, Y5, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos[5].content = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[5], X6, Y6, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m11[0m:[0m[33m9[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
			export namespace cc {
          [0m[31m^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export enum BoxKind {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>None</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					none = 0,
[0m[31m^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboid = 1,
[0m[31m^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid without top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无顶长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無頂長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidWithoutTop = 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid without bottom</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>无底长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>無底長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidWithoutBottom = 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSide = 4,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side and without top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧无顶长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側無頂長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSideWithoutTop = 5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Cuboid which cover on the same side and without bottom</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盖子同侧无底长方体</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>蓋子同側無底長方體</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					cuboidCoverOnTheSameSideWithoutBottom = 6,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generation Parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export interface BoxParameter {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>id</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>id</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					id: string;
[0m[31m^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Box Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>盒子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					boxKind: BoxKind;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Relevant length, such as length, width and height</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>相关长度，如长宽高</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>相關長度，如長寬高</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					lengths: Array<number>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Contents of all sides</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>各面内容</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>各面內容</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					contents: Array<I18nable | string>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Outside Boundary Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>外边界线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>外邊界線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					outerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Interior Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>内部线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>內部線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					innerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Text Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>文本样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>文字樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					textStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Rotate</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>旋转</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>旋轉</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					rotate: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Move Up</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>上移</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>上移</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					move: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Hide the half cirlce of box top</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>隐藏盒顶半圆</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>隱藏盒頂半圓</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					topWithoutHalfCircle: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Other parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>其它参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>其它參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					options: object;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generation Result</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成结果</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成結果</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export interface BoxResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Svg Element Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>svg元素编号</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>svg元素編號</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					id: string;
[0m[31m^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Svg Element</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>svg元素</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>svg元素</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					svg: SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>css</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>样式表</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>樣式表</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					css: string;
[0m[31m^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Box Generator</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>盒子生成器</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>盒子生成器</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				export class BoxGenerator {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					/**
[0m[31m^^^^^^^^[0m
					 * <en>Generate box in batch</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>批量生成盒子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>批量生成盒子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @param createParameters
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <en>Arrays: creating parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>数组：创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>數組：創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @returns
[0m[31m^^^^^^^^^^^^^^^^[0m
					 * <en>Generate results in array format, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成结果，为数组格式，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成結果，為數組格式，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					public batchCreate(createParameters: Array<BoxParameter>): Array<BoxResult> {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						createParameters.forEach((createParameter, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (createParameter.id.length === 0) createParameter.id = `svg_index`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						return createParameters.map((createParameter) => this.create(createParameter));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					/**
[0m[31m^^^^^^^^[0m
					 * <en>Generate a single box</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成单个盒子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成單個盒子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @param param0
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					 * <en>Deconstructed creation parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>已解构的创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>已解構的創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * @returns
[0m[31m^^^^^^^^^^^^^^^^[0m
					 * <en>Generate results, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_cn>生成结果，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 * <zh_tw>生成結果，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					 */
[0m[31m^^^^^^^^[0m
					public create({
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						id,
[0m[31m^^^^^^^^^[0m
						boxKind,
[0m[31m^^^^^^^^^^^^^^[0m
						lengths: LENGTHS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						contents: CONTENTS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerLineStyle: OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						innerLineStyle: INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textStyle: TEXT_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rotate: ROTATE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						move: MOVE,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						topWithoutHalfCircle: TOP_WITHOUT_HALF_CIRCLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						options: OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					}: BoxParameter): BoxResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (id.length === 0) id = 'svg_0';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const FIRST_LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let FIXED_FIRST_LENGTH = FIRST_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let nested = false;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// switch(boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   case BoxKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     FIXED_FIRST_LENGTH = 25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     nested = true;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     break;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//   default:
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//     break;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						// }
[0m[31m^^^^^^^^^^[0m

						type SvgTextInfo = svgSpace.edu.sonya.cc.SvgTextInfo;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const { createSvg, appendText } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const svg = createSvg();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('id', id);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const viewBox = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							left: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							right: 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
							top: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							bottom: 0,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const infos = [] as Array<SvgTextInfo>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// case BoxKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     for(let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//       infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     }
[0m[31m^^^^^^^^^^^^^^^[0m
							//   });
[0m[31m^^^^^^^^^^^^^^^[0m
							//   break;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								});
[0m[31m^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const mmToPxScale = (new DPIHelper()).getMmToPxScale();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								this.drawGraphsOfCuboidBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									svg,
[0m[31m^^^^^^^^^^^^^[0m
									LENGTHS,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									viewBox,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
									boxKind,
[0m[31m^^^^^^^^^^^^^^^^^[0m
									ROTATE,
[0m[31m^^^^^^^^^^^^^^^^[0m
									MOVE,
[0m[31m^^^^^^^^^^^^^^[0m
									TOP_WITHOUT_HALF_CIRCLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								);
[0m[31m^^^^^^^^^^[0m
								this.drawTextsOfCuboiBox(infos, LENGTHS, boxKind);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						infos.forEach(({ content, x, y, rotate }) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							appendText(svg, TEXT_STYLE, content, x, y, rotate, 'left top', null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						const width = `${viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const height = `${viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('width', width);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', height);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${width};height:${height};`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const outerSvg = nested && (FIXED_FIRST_LENGTH !== FIRST_LENGTH) ? this.createSvg(): null;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const outerSvg = createElement('wrap'); // as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.appendChild(svg);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.setAttribute('id', id.concat('_wrapper'));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (FIXED_FIRST_LENGTH !== FIRST_LENGTH) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const scale = FIRST_LENGTH / FIXED_FIRST_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const widthOuterSvg = `${scale * viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const heightOuterSvg = `${scale * viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const transformScale = mmToPxScale * (scale - 1) / 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							outerSvg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'style',
[0m[31m^^^^^^^^^^^^^^^^[0m
								`width:${widthOuterSvg};height:${heightOuterSvg};display:inline-block;`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							svg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'transform',
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
								`translate(${viewBox.right * transformScale}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									viewBox.bottom * transformScale
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}) scale(${scale}, ${scale})`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							svg.setAttribute('transform-origin', 'center');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const css = 'page,wrap{page-break-inside:avoid;}wrap{display:inline-flex;}';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return { id, svg: nested ? outerSvg : svg, css };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					drawGraphsOfCuboidBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						LENGTHS: number[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						boxKind: BoxKind,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						ROTATE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						MOVE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						TOP_WITHOUT_HALF_CIRCLE: boolean,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const isSameSide = boxKind >= 4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH = LENGTHS[2];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT = LENGTHS[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const OTHER_SIZE = isSameSide ? LENGTHS[3] : 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const MIN_LENGTH = Math.min(LENGTH, WIDTH, HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const LENGTH_PX = LENGTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH_PX = WIDTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT_PX = HEIGHT * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const OTHER_SIZE_PX = OTHER_SIZE * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeight = MIN_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeightPx = duckTongueHeight * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const pasteRegionScale = 0.45;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionHeight = LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionHeightPx = pasteRegionHeight * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const offsetScale = 0.1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const offsetXPx = LENGTH_PX * offsetScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionWidthPx = HEIGHT_PX - offsetXPx * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueWidth = LENGTH * (1 - offsetScale * 2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueWidthPx = duckTongueWidth * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// console.log(LENGTH, WIDTH, HEIGHT, MIN_LENGTH, mmToPxScale, LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const YDifference = (boxKind === BoxKind.cuboidWithoutTop ||
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							? duckTongueHeight + HEIGHT
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							: 0;
[0m[31m^^^^^^^^^^^[0m
						const YDifferencePx = YDifference * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const diameter = duckTongueHeight * 0.8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const radius = diameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const lengthSubtractDiameter = LENGTH - diameter;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const halfLengthSubtractDiameter = lengthSubtractDiameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const halfLengthSubtractDiameterPx = halfLengthSubtractDiameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const radiusPx = radius * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const diameterPx = diameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const smallDiameter = diameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallRadius = smallDiameter * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallDiameterPx = smallDiameter * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const smallRadiusPx = smallRadius * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const pasteRegionHeightSubtractSmallRadiusPx = pasteRegionHeightPx - smallRadiusPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pasteRegionWidthSubtractSmallDiameterPx = pasteRegionWidthPx - smallDiameterPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueHeightSubtractRadiusPx = duckTongueHeightPx - radiusPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueWidthSubtractDiameterPx = duckTongueWidthPx - diameterPx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// console.log(LENGTH, WIDTH, HEIGHT, MIN_LENGTH, mmToPxScale, LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pathStartY = duckTongueHeightPx + HEIGHT_PX - YDifferencePx;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const path = document.createElementNS(SVG_NS, 'path');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (boxKind < 4) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'd',
[0m[31m^^^^^^^^^^^^[0m
								`M 0, ${pathStartY} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.concat(
[0m[31m^^^^^^^^^^^^^^^^^[0m
										// https://www.cnblogs.com/LcxSummer/p/12420385.html
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

										boxKind === BoxKind.cuboidWithoutTop
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h ${HEIGHT_PX * 3 + LENGTH_PX * 2} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												TOP_WITHOUT_HALF_CIRCLE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													? ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${HEIGHT_PX + halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`a ${radiusPx} ${radiusPx} 0 1 0 ${diameterPx} 0`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													)
[0m[31m^^^^^^^^^^^^^^[0m
													: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${HEIGHT_PX + LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													),
[0m[31m^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												// `h ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										`v ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										`h -${LENGTH_PX + HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										boxKind === BoxKind.cuboidWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h -${HEIGHT_PX * 2 + LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										' z',
[0m[31m^^^^^^^^^^^^^^^[0m
									),
[0m[31m^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								'd',
[0m[31m^^^^^^^^^^^^[0m
								`M 0, ${pathStartY} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.concat(
[0m[31m^^^^^^^^^^^^^^^^^[0m
										// https://www.cnblogs.com/LcxSummer/p/12420385.html
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

										boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h ${HEIGHT_PX * 2.5 + LENGTH_PX * 2} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h ${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l ${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												TOP_WITHOUT_HALF_CIRCLE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													? ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`a ${radiusPx} ${radiusPx} 0 1 0 ${diameterPx} 0`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${halfLengthSubtractDiameterPx + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													)
[0m[31m^^^^^^^^^^^^^^[0m
													: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
														`h ${LENGTH_PX + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
													),
[0m[31m^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										`v ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										`h -${LENGTH_PX + OTHER_SIZE_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
										boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											? `h -${HEIGHT_PX * 2 + LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											: ''.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${duckTongueWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`v -${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`h -${pasteRegionWidthPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
												`l -${offsetXPx}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
											),
[0m[31m^^^^^^^^^^^^^[0m
										' z',
[0m[31m^^^^^^^^^^^^^^^[0m
									),
[0m[31m^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let style = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						if (ROTATE) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							style = 'transform:rotate(180deg);';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (MOVE) {
[0m[31m^^^^^^^^^^^^^^^^^[0m
							style += `position:relative;margin-top:-${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								HEIGHT + duckTongueHeight -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								Math.max(0, pasteRegionHeight * 2 - (HEIGHT + duckTongueHeight))
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}mm;`;
[0m[31m^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (style.length) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							svg.setAttribute('style', style);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const X1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						const X2 = X1 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X3 = X2 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X4 = X3 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X5 = X4 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X6 = X5 + (isSameSide ? OTHER_SIZE : HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const Y1 = 0 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y2 = Y1 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y4 = Y2 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y5 = Y4 + WIDTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y7 = Y5 + HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y8 = Y7 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y3 = Y4 - pasteRegionHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y6 = Y5 + duckTongueHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const { appendLine } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (boxKind < 4) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (boxKind !== BoxKind.cuboidWithoutTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X4, X5, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X3, X6, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							if (boxKind !== BoxKind.cuboidCoverOnTheSameSideWithoutTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X2, X3, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								appendLine(svg, INNER_LINE_STYLE, X1, X4, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (
[0m[31m^^^^^^^^^^[0m
							boxKind !== BoxKind.cuboidWithoutBottom &&
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							boxKind !== BoxKind.cuboidCoverOnTheSameSideWithoutBottom
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						) {
[0m[31m^^^^^^^^^[0m
							appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						viewBox.left = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = X6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox.bottom = Y8 - (duckTongueHeight + HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								viewBox.bottom = Y8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					private drawTextsOfCuboiBox(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						infos: {
[0m[31m^^^^^^^^^^^^^^[0m
							content: any;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							x: number;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							y: number;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							rotate: number | 'auto' | 'auto-reverse';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}[],
[0m[31m^^^^^^^^^^[0m
						LENGTHS: number[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						boxKind: BoxKind,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const { setSvgTextInfo } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LENGTH = LENGTHS[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const WIDTH = LENGTHS[2];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT = LENGTHS[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const MIN_LENGTH = Math.min(LENGTH, WIDTH, HEIGHT);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const duckTongueHeight = MIN_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const YDifference = (boxKind === BoxKind.cuboidWithoutTop ||
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								boxKind === BoxKind.cuboidCoverOnTheSameSideWithoutTop)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							? duckTongueHeight + HEIGHT
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							: 0;
[0m[31m^^^^^^^^^^^[0m

						const X1 = -1 * (HEIGHT * 2 + LENGTH * 1.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X2 = duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X3 = HEIGHT + LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const X4 = X1;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						const X5 = -X2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						const X6 = X3;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m

						const Y1 = -1 * (duckTongueHeight + HEIGHT * 0.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y2 = -1 * (HEIGHT * 0.5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y3 = duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y4 = -1 * (duckTongueHeight + HEIGHT + WIDTH * 0.5 - YDifference);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y5 = HEIGHT * 1.5 + LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const Y6 = duckTongueHeight + HEIGHT + WIDTH + HEIGHT * 0.5 - YDifference;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos[0].content = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[0], X1, Y1, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[0], -1 * (HEIGHT + LENGTH * 0.5), Y1, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						setSvgTextInfo(infos[1], X2, Y2, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[2], X3, Y3, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[3], X4, Y4, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						setSvgTextInfo(infos[4], X5, Y5, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						switch (boxKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutBottom:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos[5].content = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSideWithoutTop:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboid:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							case BoxKind.cuboidCoverOnTheSameSide:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								setSvgTextInfo(infos[5], X6, Y6, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
							default:
[0m[31m^^^^^^^^^^^^^^^[0m
								break;
[0m[31m^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m12[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
					options: object;
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m144[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `FIXED_FIRST_LENGTH` is never reassigned
						let FIXED_FIRST_LENGTH = FIRST_LENGTH;
          [0m[31m^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m235[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `nested` is never reassigned
						let nested = false;
          [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m236[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
						OPTIONS: object,
               [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m344[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
							content: any;
                [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\box.ts[0m:[0m[33m587[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataLevel3 = (newData: any): void => {
                                             [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\boxBase.ts[0m:[0m[33m28[0m:[0m[33m45[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mprefer-const[0m) `wrapElement` is never reassigned
		let wrapElement: HTMLDivElement;
      [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\boxBase.ts[0m:[0m[33m50[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataOfBox = (newData: any): void => {};
                                            [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\boxBase.ts[0m:[0m[33m71[0m:[0m[33m44[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected getUsableList = (): Array<object> => {
                                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\boxBase.ts[0m:[0m[33m162[0m:[0m[33m37[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const summaryElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m172[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const summaryElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m172[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const summaryElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m172[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const summaryElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m172[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const summaryElementInTextAndImage = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m172[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return -1;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (prev.isTop && !next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return 1;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyDateElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storySummaryElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreStoriesElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m201[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return -1;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (prev.isTop && !next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return 1;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyDateElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storySummaryElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreStoriesElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m201[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return -1;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (prev.isTop && !next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return 1;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyDateElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storySummaryElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreStoriesElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m201[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return -1;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (prev.isTop && !next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return 1;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyDateElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storySummaryElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreStoriesElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m201[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return -1;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (prev.isTop && !next.isTop) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return 1;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyDateElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storySummaryElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const moreStoriesElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m201[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const leftArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const wrap = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const imgElement = createElement('img');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const name = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const urlWrapper = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const url = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						const rightArrowElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m264[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-inner-declarations[0m) Move function declaration to function root
						function gotoPage(pageIndex) {
      [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (pageIndex < 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (currentPage === pageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return;
[0m[31m^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const wrap = aElement.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imgElement = wrap.children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const nameElement = wrap.children[1];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const urlElement = wrap.children[2].children[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = flippableCardsElement.children[TEACHER_COUNT_PER_PAGE - i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\home.js[0m:[0m[33m311[0m:[0m[33m6[0m

    [0m[36mhint:[0m Move the declaration up into the correct scope
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inner-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 'share':
   [0m[31m^^^^^^^^^^^^^[0m
				// const url = encodeURI(window.location.href);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				// const wechatShareImageSrcPostfix = url.indexOf('&') === -1 ? '': url.split('&').slice(1).map((keyValue: string) => keyValue.split('=')[1]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const wechatShareImageSrc = `${SITE_IMAGE_PATH}${ACTUAL_PAGE_NAME}/${PAGE_ID}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				this.wechatShareElement.setAttribute('src', wechatShareImageSrc);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				this.wechatShareElement.setAttribute('alt', wechatShareImageSrc);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				showInlineFlex(this.shareAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\brick.js[0m:[0m[33m269[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 'saveConfigToLocal':
   [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				// core.saveConfigToLocal();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				// https://blog.csdn.net/qq_38431572/article/details/102687955
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const blob = new Blob([JSON.stringify(core.getData())], { type: 'application/json' });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const configFilename = `edu.sonya.cc_brick_${PAGE_ID}_${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					convertDateToYYYYMMDD_hhmmss(new Date())
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}.config`;
[0m[31m^^^^^^^^^^^^^^[0m
				if ('msSaveOrOpenBlob' in navigator) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					window.navigator.msSaveOrOpenBlob(blob, configFilename);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				} else {
[0m[31m^^^^^^^^^^^^[0m
					const url = window.URL.createObjectURL(blob);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const link = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					link.href = url;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					link.setAttribute('download', configFilename);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					link.click();
[0m[31m^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\brick.js[0m:[0m[33m297[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 'saveConfigToLocal':
   [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				// core.saveConfigToLocal();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				// https://blog.csdn.net/qq_38431572/article/details/102687955
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const blob = new Blob([JSON.stringify(core.getData())], { type: 'application/json' });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const configFilename = `edu.sonya.cc_brick_${PAGE_ID}_${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					convertDateToYYYYMMDD_hhmmss(new Date())
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}.config`;
[0m[31m^^^^^^^^^^^^^^[0m
				if ('msSaveOrOpenBlob' in navigator) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					window.navigator.msSaveOrOpenBlob(blob, configFilename);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				} else {
[0m[31m^^^^^^^^^^^^[0m
					const url = window.URL.createObjectURL(blob);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const link = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					link.href = url;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					link.setAttribute('download', configFilename);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					link.click();
[0m[31m^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\actualPage\brick.js[0m:[0m[33m297[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const summaryElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m181[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const summaryElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m181[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const summaryElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m181[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const summaryElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m181[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesTextAndImage':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const imageElementInTextAndImage = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const textWrapElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const imageUrlInTextAndImage = `${SITE_IMAGE_PATH}1home/${image}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.src = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						imageElementInTextAndImage.alt = imageUrlInTextAndImage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (sectionIndex % 2 === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(textWrapElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							sectionWrapElement.appendChild(imageElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						textWrapElementInTextAndImage.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const summaryElementInTextAndImage = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						summaryElementInTextAndImage.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(summaryElementInTextAndImage);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						textWrapElementInTextAndImage.appendChild(moreElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						imageElementInTextAndImage.onclick = textWrapElementInTextAndImage.onclick = (
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							event,
[0m[31m^^^^^^^^^^^^^[0m
						) => {
[0m[31m^^^^^^^^^^^^[0m
							window.location.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m181[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						type StoryType = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							isTop: Boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							date: Date;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							version: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							title: {
[0m[31m^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							summary: {
[0m[31m^^^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item: StoryType, index: number) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}) as Array<{ index: number } & StoryType>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) return -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (prev.isTop && !next.isTop) return 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyTitleElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyDateElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storySummaryElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							storyWrapElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreStoriesElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m217[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						type StoryType = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							isTop: Boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							date: Date;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							version: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							title: {
[0m[31m^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							summary: {
[0m[31m^^^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item: StoryType, index: number) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}) as Array<{ index: number } & StoryType>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) return -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (prev.isTop && !next.isTop) return 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyTitleElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyDateElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storySummaryElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							storyWrapElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreStoriesElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m217[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						type StoryType = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							isTop: Boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							date: Date;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							version: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							title: {
[0m[31m^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							summary: {
[0m[31m^^^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item: StoryType, index: number) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}) as Array<{ index: number } & StoryType>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) return -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (prev.isTop && !next.isTop) return 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyTitleElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyDateElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storySummaryElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							storyWrapElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreStoriesElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m217[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						type StoryType = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							isTop: Boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							date: Date;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							version: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							title: {
[0m[31m^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							summary: {
[0m[31m^^^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item: StoryType, index: number) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}) as Array<{ index: number } & StoryType>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) return -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (prev.isTop && !next.isTop) return 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyTitleElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyDateElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storySummaryElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							storyWrapElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreStoriesElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m217[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'leftAndRightSidesList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftAreaOfLeftAndRightSidesListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftAreaOfLeftAndRightSidesListWrapElement.className = 'leftAndRightSidesListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(leftAreaOfLeftAndRightSidesListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const leftAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaElement.setAttribute('class', 'leftAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(leftAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						// const rightAreaElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// rightAreaElement.setAttribute('class', 'rightAreaOfLeftAndRightSidesList');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// leftAreaOfLeftAndRightSidesListWrapElement.appendChild(rightAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const storiesPageSize = PageSize.homePage.stories;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						type StoryType = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							isTop: Boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							date: Date;
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							version: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							title: {
[0m[31m^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							summary: {
[0m[31m^^^^^^^^^^^^^^^^^[0m
								en: String;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
								zh_cn: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								zh_tw: String;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						};
[0m[31m^^^^^^^^[0m
						const storiesOfFirstPage = stories.map((item: StoryType, index: number) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return { index, ...item };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}) as Array<{ index: number } & StoryType>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						storiesOfFirstPage.sort((prev, next) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (!prev.isTop && next.isTop) return -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (prev.isTop && !next.isTop) return 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							return (prev.date === next.date) ? 0 : (prev.date === next.date ? -1 : 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m

						for (let i = 0; i < storiesPageSize; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyWrapElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.className = 'homePageStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// ((i % 2 === 0) ? leftAreaElement : rightAreaElement).appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftAreaOfLeftAndRightSidesListWrapElement.appendChild(storyWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const { isTop, date, version, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { index, date, title, summary } = storiesOfFirstPage[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(index , date , title , summary, storiesOfFirstPage[i]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const storyTitleAndTimeElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.className = 'homePageStoryTitleAndTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storyTitleAndTimeElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyTitleElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.className = 'homePageStoryTitle';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleElement.innerHTML = getI18nInnerHTML(title);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyTitleElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storyDateElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.className = 'homePageStoryTime';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const chineseDate = global.getChineseDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// storyDateElement.innerHTML = `<en>${global.getEnglishDate(date)}</en><zh_cn>${chineseDate}</zh_cn><zh_tw>${chineseDate}</zh_tw>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyDateElement.innerHTML = getI18nInnerHTMLFromDate(date);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyTitleAndTimeElement.appendChild(storyDateElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const storySummaryElement = createElement('div') as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.className = 'homePageStorySummary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storySummaryElement.innerHTML = getI18nInnerHTML(summary);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							storyWrapElement.appendChild(storySummaryElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							storyWrapElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								window.location.href = `?go=story&id=${index}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const moreStoriesWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.id = 'homePageMoreStoryWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(moreStoriesWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const moreStoriesElement = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.href = moreLink;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.className = 'moreButton primary';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesElement.innerHTML = MORE_BUTTON_HTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						moreStoriesWrapElement.appendChild(moreStoriesElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m217[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mban-types[0m) The corresponding lower-case primitive should be used
							isTop: Boolean;
              [0m[31m^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m234[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `boolean` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) The corresponding lower-case primitive should be used
							version: String;
                [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m236[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `string` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) The corresponding lower-case primitive should be used
								en: String;
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m238[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `string` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) The corresponding lower-case primitive should be used
								zh_cn: String;
               [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m239[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use `string` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) The corresponding lower-case primitive should be used
								zh_tw: String;
               [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m240[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use `string` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) The corresponding lower-case primitive should be used
								en: String;
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m243[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `string` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) The corresponding lower-case primitive should be used
								zh_cn: String;
               [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m244[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use `string` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) The corresponding lower-case primitive should be used
								zh_tw: String;
               [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m245[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use `string` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					case 'flippableCardList':
     [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(sectionSubjectElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardListWrapElement = createElement('div');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.className = 'flippableCardListWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						sectionWrapElement.appendChild(flippableCardListWrapElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const leftArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(leftArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.innerHTML = '&lt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						leftArrowElement.setAttribute('id', 'flippableCardListLeftArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const flippableCardsElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(flippableCardsElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardsElement.setAttribute('id', 'flippableCards');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const TEACHER_IMAGE_POSTFIX = `${SITE_IMAGE_PATH}1home/teachers/`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						for (let i = 0; i < TEACHER_COUNT_PER_PAGE; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const aElement = createElement('a');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.className = 'homePageTeacherA';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							setAttributesOfA(aElement, 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							flippableCardsElement.appendChild(aElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// aElement.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const wrap = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.className = 'homePageTeacherWrap';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							aElement.appendChild(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const imgElement = createElement('img') as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							imgElement.className = 'homePageTeacherImage';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const name = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							name.className = 'homePageTeacherName';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(name);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const urlWrapper = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.className = 'homePageTeacherUrlWrapper';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							wrap.appendChild(urlWrapper);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const url = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							url.className = 'homePageTeacherUrl';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							urlWrapper.appendChild(url);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const rightArrowElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						flippableCardListWrapElement.appendChild(rightArrowElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.innerHTML = '&gt;';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						rightArrowElement.setAttribute('id', 'flippableCardListRightArrow');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const teacherCount = teachers.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherPageCount = Math.ceil(teacherCount / TEACHER_COUNT_PER_PAGE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const maxTeacherPageIndex = teacherPageCount - 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const teacherCountOfLastPage = teacherCount -
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							TEACHER_COUNT_PER_PAGE * maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let currentPage = -1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						function gotoPage(pageIndex: number) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (teacherPageCount < 2) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
							rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							};
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						gotoPage(0);
[0m[31m^^^^^^^^^^^^^^^^^^[0m

						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m305[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-inner-declarations[0m) Move function declaration to function root
						function gotoPage(pageIndex: number) {
      [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (pageIndex > maxTeacherPageIndex) pageIndex = maxTeacherPageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							else if (pageIndex < 0) pageIndex = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (currentPage === pageIndex) return;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							const teacherCountOfCurrentPage = pageIndex < maxTeacherPageIndex
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? TEACHER_COUNT_PER_PAGE
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: teacherCountOfLastPage;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const indexOffset = TEACHER_COUNT_PER_PAGE * pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							for (let i = 0; i < teacherCountOfCurrentPage; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[i] as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const teacher = teachers[indexOffset + i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const { name, link, i18n } = teacher;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								aElement.setAttribute('href', link);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const wrap = aElement.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								showFlex(wrap);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

								const imgElement = wrap.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const imageUrl = `${TEACHER_IMAGE_POSTFIX}${name}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.src = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								imgElement.alt = imageUrl;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const nameElement = wrap.children[1] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								nameElement.innerHTML = getI18nInnerHTML(i18n);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								const urlElement = (wrap.children[2] as HTMLSpanElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[0] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								urlElement.innerHTML = link;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							for (let i = TEACHER_COUNT_PER_PAGE - teacherCountOfCurrentPage; i > 0; --i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								const aElement = (flippableCardsElement as HTMLElement)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									.children[TEACHER_COUNT_PER_PAGE - i] as HTMLElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								aElement.setAttribute('href', 'javascript:void(0);');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

								// const imgElement = aElement.children[0] as HTMLImageElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// hide(imgElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								hide(aElement.children[0] as HTMLElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							currentPage = pageIndex;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							if (pageIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (leftArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								leftArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m

							if (pageIndex === maxTeacherPageIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.setAttribute('disabled', '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							} else if (rightArrowElement.hasAttribute('disabled')) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								rightArrowElement.removeAttribute('disabled');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\home.ts[0m:[0m[33m365[0m:[0m[33m6[0m

    [0m[36mhint:[0m Move the declaration up into the correct scope
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inner-declarations

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	private bindDataToItemElement = (itemElement: HTMLDivElement, data: object): void => {
                                                                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\bricks.ts[0m:[0m[33m60[0m:[0m[33m69[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	private fillItem = (itemElement: HTMLDivElement, data: object | null, init?: boolean) => {
                                                        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\bricks.ts[0m:[0m[33m99[0m:[0m[33m56[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
				item: any,
          [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\bricks.ts[0m:[0m[33m146[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
			bricks.forEach((item: any) => list.push(item));
                         [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\bricks.ts[0m:[0m[33m149[0m:[0m[33m25[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
			bricks.map((item: object, index: number) => {
                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\bricks.ts[0m:[0m[33m394[0m:[0m[33m21[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m78[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m81[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m82[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m90[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m91[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `pokerKind` is never reassigned
				pokerKind,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m95[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COUNT` is never reassigned
				count: COUNT,
           [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m99[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m203[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m206[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m207[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m215[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m216[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COVER` is never reassigned
				backCover: COVER,
               [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m222[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COUNT` is never reassigned
				count: COUNT,
           [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m223[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `title` is never reassigned
		let title = { en: '', zh_cn: '', zh_tw: '' };
      [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\3.ts[0m:[0m[33m265[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-explicit-any[0m) `any` type is not allowed
export declare const searchSources: any[];
                                    [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\data.d.ts[0m:[0m[33m99[0m:[0m[33m36[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m110[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m113[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m114[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m122[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m123[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `tensCenterTextShowed` is never reassigned
				tensCenterTextShowed,
    [0m[31m^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m128[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COUNT` is never reassigned
				count: COUNT,
           [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m131[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CHARS` is never reassigned
				chars: CHARS,
           [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m132[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CENTER_TEXTS` is never reassigned
				centerTexts: CENTER_TEXTS,
                 [0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m134[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COLORS` is never reassigned
				colors: COLORS,
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m135[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m191[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m194[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m195[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m203[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m204[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COUNT` is never reassigned
				count: COUNT,
           [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m211[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `BACK_COVERS` is never reassigned
				backCovers: BACK_COVERS,
                [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m213[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `title` is never reassigned
		let title = { en, zh_cn, zh_tw };
      [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m374[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m507[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m507[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m507[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataOfPoker = (newData: any): void => {
                                              [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m579[0m:[0m[33m46[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mprefer-const[0m) `wrapElement` is never reassigned
		let wrapElement = this.getWrapElement({
      [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m595[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `notSameBackCover` is never reassigned
		let notSameBackCover = getI18nInnerHTML({
      [0m[31m^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\7.ts[0m:[0m[33m756[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
			options: object;
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\diceBase.ts[0m:[0m[33m74[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected getUsableList = (): Array<object> => {
                                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\diceBase.ts[0m:[0m[33m110[0m:[0m[33m37[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected createTableBodyRow = (dice: object): void => {
                                       [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\diceBase.ts[0m:[0m[33m663[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
			options: object;
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\diceBase.ts[0m:[0m[33m681[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m112[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m115[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m116[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m124[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m125[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `useSameBackCover` is never reassigned
				useSameBackCover,
    [0m[31m^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m130[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `count` is never reassigned
				count,
    [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m134[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `chars` is never reassigned
				chars,
    [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m136[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `charsNotSameBackCover` is never reassigned
				charsNotSameBackCover,
    [0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m137[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `countNotSameBackCover` is never reassigned
				countNotSameBackCover,
    [0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m138[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m218[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m221[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m222[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m230[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m231[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `useSameBackCover` is never reassigned
				useSameBackCover,
    [0m[31m^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m237[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COVER` is never reassigned
				backCover: COVER,
               [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m240[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `count` is never reassigned
				count,
    [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m241[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `countNotSameBackCover` is never reassigned
				countNotSameBackCover,
    [0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m246[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `backCoversWhenNotSame` is never reassigned
				backCoversWhenNotSame,
    [0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m247[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `title` is never reassigned
		let title = { en, zh_cn, zh_tw };
      [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m339[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m455[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m455[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m455[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataOfPoker = (newData: any): void => {
                                              [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m513[0m:[0m[33m46[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mprefer-const[0m) `wrapElement` is never reassigned
		let wrapElement = this.getWrapElement({
      [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m527[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `notSameBackCover` is never reassigned
		let notSameBackCover = getI18nInnerHTML({
      [0m[31m^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\5.ts[0m:[0m[33m685[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	getData(): object;
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\IBrickCore.d.ts[0m:[0m[33m9[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	setData(newData: object): void;
                  [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\IBrickCore.d.ts[0m:[0m[33m10[0m:[0m[33m18[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					default:
     [0m[31m^^^^^^^^[0m
						const onclickFunction = window[onclick];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aElement.onclick = onclickFunction;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// console.log(aElement.onclick);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.js[0m:[0m[33m345[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					default:
     [0m[31m^^^^^^^^[0m
						const onclickFunction = window[onclick];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						menu.onclick = onclickFunction;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.js[0m:[0m[33m430[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			default:
   [0m[31m^^^^^^^^[0m
				showBlock(paginationElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				leftArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				rightArrowElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				pageNumbersWrapElement.innerHTML = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				if (pageCount < 10) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					for (let i = 0; i < pageCount; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pageNumberElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						pageNumberElement.innerHTML = (i + 1).toString();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						pageNumbersWrapElement.appendChild(pageNumberElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				} else {
[0m[31m^^^^^^^^^^^^[0m
					for (let i = 0; i < 5; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pageNumberElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						pageNumberElement.innerHTML = (i + 1).toString();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						pageNumbersWrapElement.appendChild(pageNumberElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
					const ellipsisElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ellipsisElement.innerHTML = '...';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					pageNumbersWrapElement.appendChild(ellipsisElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const lastPageNumberElement = createElement('span');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					lastPageNumberElement.innerHTML = pageCount.toString();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					pageNumbersWrapElement.appendChild(lastPageNumberElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				const pageNumberElementCount = pageNumbersWrapElement.children.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				for (let i = 0; i < pageNumberElementCount; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pageNumberElement = pageNumbersWrapElement.children[i];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					pageNumberElement.onclick = (event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const element = event.target;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const innerHTML = element.innerHTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (innerHTML === '...') {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							gotoPage(parseInt(element.getAttribute(PAGE_PROPERTY), 0) - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							gotoPage(parseInt(innerHTML, 0) - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\js\pcGlobal.js[0m:[0m[33m605[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
namespace svgSpace {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
	export namespace edu {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
		export namespace sonya {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			export namespace cc {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				export type ViewBoxType = { left: number; right: number; top: number; bottom: number };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export type RotateType = 'auto' | 'auto-reverse' | number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export type SvgTextInfo = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					content: I18nable | string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x: number;
[0m[31m^^^^^^^^^^^^^^^[0m
					y: number;
[0m[31m^^^^^^^^^^^^^^^[0m
					rotate: RotateType;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				export type DivOrSvgElementWithSize = (HTMLDivElement | SVGElement) & {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					widthMm: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					heightMm: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				export type WrapElementWithInfo = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					element: DivOrSvgElementWithSize;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					alone?: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					linkToPreview?: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m

				// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export class SvgHelper {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					public static createSvg = (): SVGElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const svg = document.createElementNS(SVG_NS, 'svg') as SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('version', '1.1');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('xmlns', SVG_NS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('xmlns:xlink', SVG_XLINKNS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return svg;
[0m[31m^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
					public static createSvgPath = (): SVGPathElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return document.createElementNS(SVG_NS, 'path');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m

					public static appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						x1: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						x2: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						y1: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						y2: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const line = document.createElementNS(SVG_NS, 'line') as SVGLineElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('x1', `${x1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('x2', `${x2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('y1', `${y1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('y2', `${y2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						line.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.appendChild(line);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendCircle(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						cx: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						cy: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						radius: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const circle = document.createElementNS(SVG_NS, 'circle') as SVGCircleElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('cx', `${cx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('cy', `${cy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('r', `${radius}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('fill', '#ffffff');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, cx - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, cx + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, cy - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, cy + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						circle.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.appendChild(circle);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendTspan(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text: SVGTextElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						CHAR: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						dx: string,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						dy: string,
[0m[31m^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const tspan = document.createElementNS(SVG_NS, 'tspan') as SVGTSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('dx', `${dx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('dy', `${dy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute('dx', `${dx}`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute('dy', `${dy}`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'style',
[0m[31m^^^^^^^^^^^^^^^[0m
							STYLE.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
								'dominant-baseline:middle;text-anchor:middle;',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CHAR === '6' || CHAR === '9' ? 'text-decoration:underline;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CHAR === 'ü' ? 'opacity:0.85;font-size:0.9em;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m

						tspan.innerHTML = CHAR;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.appendChild(tspan);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendText(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						CONTENT: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						x: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						y: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						transformOrigin: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						maybeNumber: boolean = false,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const g = document.createElementNS(SVG_NS, 'g') as SVGGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('style', 'display:flex;justify-content:center;align-items:center;overflow:hidden;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (rotate) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							g.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								'style',
[0m[31m^^^^^^^^^^^^^^^^[0m
								`transform: rotate(${rotate}deg);transform-origin:${transformOrigin};`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						svg.appendChild(g);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const text = document.createElementNS(SVG_NS, 'text') as SVGTextElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('style', 'dominant-baseline:middle;text-anchor:middle;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('dx', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('dy', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (CONTENT.indexOf('<en>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const lang = getCurrentLang();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const startTag = `<${lang}>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const endTag = `</${lang}>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (CONTENT.indexOf(startTag) > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CONTENT = CONTENT.split(startTag)[1].split(endTag)[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						// if(CONTENT.indexOf('<') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   CONTENT = CONTENT.replace(/<br \/>/gi, '<br/>').replace(/<br\/>/gi, '<br>').replace(/\\n/g, '<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   if (CONTENT.indexOf('<br>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const fontSize = STYLE.indexOf('font-size:') > -1 ? STYLE.split('font-size:')[1].split(';')[0] : '2mm';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const unit = fontSize.replace(/[0-9.]/gi, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const dyNumber = parseFloat(fontSize.replace(unit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // console.log(fontSize, unit, dyNumber);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const segs = CONTENT.split('<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // let maxLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // segs.forEach((seg)=>{ maxLength = Math.max(maxLength, seg.length); });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     //     SvgHelper.appendTspan(text, '', seg, `${(seg.length - maxLength) * 0.5}em`, index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // });
[0m[31m^^^^^^^^^^^^^^^^^^^[0m

						//     let lastLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         // SvgHelper.appendTspan(text, '', seg, index ? `-${(seg.length + lastLength) * 0.5}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         SvgHelper.appendTspan(text, '', seg, index ? `-${lastLength}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         lastLength = seg.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     });
[0m[31m^^^^^^^^^^^^^^^^[0m
						//   } else {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//     text.innerHTML = CONTENT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   }
[0m[31m^^^^^^^^^^^^[0m
						// } else {
[0m[31m^^^^^^^^^^^^^^^^^[0m
						//   CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     SvgHelper.appendTspan(text, '', char, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   });
[0m[31m^^^^^^^^^^^^^^[0m
						// }
[0m[31m^^^^^^^^^^[0m

						CONTENT = CONTENT.replace(/<br \/>/gi, '<br/>').replace(/<br\/>/gi, '<br>').replace(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							/\\n/gi,
[0m[31m^^^^^^^^^^^^^^^[0m
							'<br>',
[0m[31m^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						if (CONTENT.indexOf('<br>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontSize = STYLE.indexOf('font-size:') > -1
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? STYLE.split('font-size:')[1].split(';')[0]
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: '2mm';
[0m[31m^^^^^^^^^^^^^^^^[0m
							const unit = fontSize.replace(/[0-9.]/gi, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const dyNumber = parseFloat(fontSize.replace(unit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(fontSize, unit, dyNumber);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const segs = CONTENT.split('<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// let maxLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// segs.forEach((seg)=>{ maxLength = Math.max(maxLength, seg.length); });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     // SvgHelper.appendTspan(text, '', seg, index ? `-${seg.length}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     SvgHelper.appendTspan(text, '', seg, `${(seg.length - maxLength) * 0.5}em`, index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// });
[0m[31m^^^^^^^^^^^^^[0m

							let lastLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							segs.forEach((seg, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// SvgHelper.appendTspan(text, '', seg, index ? `-${(seg.length + lastLength) * 0.5}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								SvgHelper.appendTspan(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									text,
[0m[31m^^^^^^^^^^^^^^[0m
									'',
[0m[31m^^^^^^^^^^^^[0m
									seg,
[0m[31m^^^^^^^^^^^^^[0m
									index ? `-${lastLength}em` : '0',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									index ? dyOffset : '0',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								);
[0m[31m^^^^^^^^^^[0m
								lastLength = seg.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							if (maybeNumber) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									SvgHelper.appendTspan(text, '', char, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								});
[0m[31m^^^^^^^^^^^[0m
							} else {
[0m[31m^^^^^^^^^^^^^^^[0m
								SvgHelper.appendTspan(text, '', CONTENT, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						g.appendChild(text);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							// left/top/right/bottom/width/height
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const clientRects = text.getClientRects();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { left: x1, right: x2, top: y1, bottom: y2 } = (clientRects.length
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? clientRects.item(0)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: text.getBoundingClientRect()) as DOMRect;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						text.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static setSvgTextInfo(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						info: SvgTextInfo,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						y: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						info.x = x;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						info.y = y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						info.rotate = rotate;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendOuterPath(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						WIDTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_COLOR: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						svg.setAttribute('width', `${WIDTH}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', `${HEIGHT}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${WIDTH}mm;height:${HEIGHT}mm;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const WIDTH_PX = mmToPxScale * WIDTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT_PX = mmToPxScale * HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const path = svgSpace.edu.sonya.cc.SvgHelper.createSvgPath();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('stroke', OUTER_LINE_COLOR);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'd',
[0m[31m^^^^^^^^^^^[0m
							`M 0, 0 `
[0m[31m^^^^^^^^^^^^^^^^[0m
								.concat(
[0m[31m^^^^^^^^^^^^^^^^[0m
									`h ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									`h -${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									' z',
[0m[31m^^^^^^^^^^^^^^[0m
								),
[0m[31m^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendOuterLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						WIDTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						svg.setAttribute('width', `${WIDTH}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', `${HEIGHT}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${WIDTH}mm;height:${HEIGHT}mm;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const { appendLine } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, WIDTH, 0, 0, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, WIDTH, HEIGHT, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, 0, 0, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, WIDTH, WIDTH, 0, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static getTextStyleFontSizePatchCss(NUMBER: number, TEXT_STYLE: string) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (NUMBER > 99 && TEXT_STYLE.indexOf('font-size:') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontSizeSeg = TEXT_STYLE.split('font-size:')[1].split(';')[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontUnit = fontSizeSeg.replace(/[0-9\.\-]/g, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontValue = parseFloat(fontSizeSeg.replace(fontUnit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return `font-size:${fontValue * 2 / NUMBER.toString().length}${fontUnit};`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						return '';
[0m[31m^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
	}
[0m[31m^^[0m
}
[0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\svgHelper.ts[0m:[0m[33m7[0m:[0m[33m0[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
	export namespace edu {
        [0m[31m^^^^^^^^^^^^^^^[0m
		export namespace sonya {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			export namespace cc {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				export type ViewBoxType = { left: number; right: number; top: number; bottom: number };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export type RotateType = 'auto' | 'auto-reverse' | number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export type SvgTextInfo = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					content: I18nable | string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x: number;
[0m[31m^^^^^^^^^^^^^^^[0m
					y: number;
[0m[31m^^^^^^^^^^^^^^^[0m
					rotate: RotateType;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				export type DivOrSvgElementWithSize = (HTMLDivElement | SVGElement) & {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					widthMm: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					heightMm: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				export type WrapElementWithInfo = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					element: DivOrSvgElementWithSize;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					alone?: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					linkToPreview?: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m

				// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export class SvgHelper {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					public static createSvg = (): SVGElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const svg = document.createElementNS(SVG_NS, 'svg') as SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('version', '1.1');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('xmlns', SVG_NS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('xmlns:xlink', SVG_XLINKNS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return svg;
[0m[31m^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
					public static createSvgPath = (): SVGPathElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return document.createElementNS(SVG_NS, 'path');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m

					public static appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						x1: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						x2: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						y1: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						y2: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const line = document.createElementNS(SVG_NS, 'line') as SVGLineElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('x1', `${x1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('x2', `${x2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('y1', `${y1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('y2', `${y2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						line.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.appendChild(line);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendCircle(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						cx: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						cy: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						radius: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const circle = document.createElementNS(SVG_NS, 'circle') as SVGCircleElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('cx', `${cx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('cy', `${cy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('r', `${radius}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('fill', '#ffffff');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, cx - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, cx + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, cy - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, cy + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						circle.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.appendChild(circle);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendTspan(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text: SVGTextElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						CHAR: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						dx: string,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						dy: string,
[0m[31m^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const tspan = document.createElementNS(SVG_NS, 'tspan') as SVGTSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('dx', `${dx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('dy', `${dy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute('dx', `${dx}`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute('dy', `${dy}`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'style',
[0m[31m^^^^^^^^^^^^^^^[0m
							STYLE.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
								'dominant-baseline:middle;text-anchor:middle;',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CHAR === '6' || CHAR === '9' ? 'text-decoration:underline;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CHAR === 'ü' ? 'opacity:0.85;font-size:0.9em;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m

						tspan.innerHTML = CHAR;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.appendChild(tspan);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendText(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						CONTENT: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						x: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						y: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						transformOrigin: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						maybeNumber: boolean = false,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const g = document.createElementNS(SVG_NS, 'g') as SVGGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('style', 'display:flex;justify-content:center;align-items:center;overflow:hidden;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (rotate) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							g.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								'style',
[0m[31m^^^^^^^^^^^^^^^^[0m
								`transform: rotate(${rotate}deg);transform-origin:${transformOrigin};`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						svg.appendChild(g);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const text = document.createElementNS(SVG_NS, 'text') as SVGTextElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('style', 'dominant-baseline:middle;text-anchor:middle;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('dx', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('dy', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (CONTENT.indexOf('<en>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const lang = getCurrentLang();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const startTag = `<${lang}>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const endTag = `</${lang}>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (CONTENT.indexOf(startTag) > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CONTENT = CONTENT.split(startTag)[1].split(endTag)[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						// if(CONTENT.indexOf('<') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   CONTENT = CONTENT.replace(/<br \/>/gi, '<br/>').replace(/<br\/>/gi, '<br>').replace(/\\n/g, '<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   if (CONTENT.indexOf('<br>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const fontSize = STYLE.indexOf('font-size:') > -1 ? STYLE.split('font-size:')[1].split(';')[0] : '2mm';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const unit = fontSize.replace(/[0-9.]/gi, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const dyNumber = parseFloat(fontSize.replace(unit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // console.log(fontSize, unit, dyNumber);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const segs = CONTENT.split('<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // let maxLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // segs.forEach((seg)=>{ maxLength = Math.max(maxLength, seg.length); });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     //     SvgHelper.appendTspan(text, '', seg, `${(seg.length - maxLength) * 0.5}em`, index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // });
[0m[31m^^^^^^^^^^^^^^^^^^^[0m

						//     let lastLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         // SvgHelper.appendTspan(text, '', seg, index ? `-${(seg.length + lastLength) * 0.5}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         SvgHelper.appendTspan(text, '', seg, index ? `-${lastLength}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         lastLength = seg.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     });
[0m[31m^^^^^^^^^^^^^^^^[0m
						//   } else {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//     text.innerHTML = CONTENT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   }
[0m[31m^^^^^^^^^^^^[0m
						// } else {
[0m[31m^^^^^^^^^^^^^^^^^[0m
						//   CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     SvgHelper.appendTspan(text, '', char, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   });
[0m[31m^^^^^^^^^^^^^^[0m
						// }
[0m[31m^^^^^^^^^^[0m

						CONTENT = CONTENT.replace(/<br \/>/gi, '<br/>').replace(/<br\/>/gi, '<br>').replace(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							/\\n/gi,
[0m[31m^^^^^^^^^^^^^^^[0m
							'<br>',
[0m[31m^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						if (CONTENT.indexOf('<br>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontSize = STYLE.indexOf('font-size:') > -1
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? STYLE.split('font-size:')[1].split(';')[0]
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: '2mm';
[0m[31m^^^^^^^^^^^^^^^^[0m
							const unit = fontSize.replace(/[0-9.]/gi, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const dyNumber = parseFloat(fontSize.replace(unit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(fontSize, unit, dyNumber);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const segs = CONTENT.split('<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// let maxLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// segs.forEach((seg)=>{ maxLength = Math.max(maxLength, seg.length); });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     // SvgHelper.appendTspan(text, '', seg, index ? `-${seg.length}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     SvgHelper.appendTspan(text, '', seg, `${(seg.length - maxLength) * 0.5}em`, index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// });
[0m[31m^^^^^^^^^^^^^[0m

							let lastLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							segs.forEach((seg, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// SvgHelper.appendTspan(text, '', seg, index ? `-${(seg.length + lastLength) * 0.5}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								SvgHelper.appendTspan(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									text,
[0m[31m^^^^^^^^^^^^^^[0m
									'',
[0m[31m^^^^^^^^^^^^[0m
									seg,
[0m[31m^^^^^^^^^^^^^[0m
									index ? `-${lastLength}em` : '0',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									index ? dyOffset : '0',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								);
[0m[31m^^^^^^^^^^[0m
								lastLength = seg.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							if (maybeNumber) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									SvgHelper.appendTspan(text, '', char, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								});
[0m[31m^^^^^^^^^^^[0m
							} else {
[0m[31m^^^^^^^^^^^^^^^[0m
								SvgHelper.appendTspan(text, '', CONTENT, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						g.appendChild(text);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							// left/top/right/bottom/width/height
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const clientRects = text.getClientRects();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { left: x1, right: x2, top: y1, bottom: y2 } = (clientRects.length
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? clientRects.item(0)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: text.getBoundingClientRect()) as DOMRect;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						text.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static setSvgTextInfo(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						info: SvgTextInfo,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						y: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						info.x = x;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						info.y = y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						info.rotate = rotate;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendOuterPath(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						WIDTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_COLOR: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						svg.setAttribute('width', `${WIDTH}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', `${HEIGHT}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${WIDTH}mm;height:${HEIGHT}mm;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const WIDTH_PX = mmToPxScale * WIDTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT_PX = mmToPxScale * HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const path = svgSpace.edu.sonya.cc.SvgHelper.createSvgPath();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('stroke', OUTER_LINE_COLOR);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'd',
[0m[31m^^^^^^^^^^^[0m
							`M 0, 0 `
[0m[31m^^^^^^^^^^^^^^^^[0m
								.concat(
[0m[31m^^^^^^^^^^^^^^^^[0m
									`h ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									`h -${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									' z',
[0m[31m^^^^^^^^^^^^^^[0m
								),
[0m[31m^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendOuterLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						WIDTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						svg.setAttribute('width', `${WIDTH}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', `${HEIGHT}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${WIDTH}mm;height:${HEIGHT}mm;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const { appendLine } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, WIDTH, 0, 0, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, WIDTH, HEIGHT, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, 0, 0, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, WIDTH, WIDTH, 0, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static getTextStyleFontSizePatchCss(NUMBER: number, TEXT_STYLE: string) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (NUMBER > 99 && TEXT_STYLE.indexOf('font-size:') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontSizeSeg = TEXT_STYLE.split('font-size:')[1].split(';')[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontUnit = fontSizeSeg.replace(/[0-9\.\-]/g, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontValue = parseFloat(fontSizeSeg.replace(fontUnit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return `font-size:${fontValue * 2 / NUMBER.toString().length}${fontUnit};`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						return '';
[0m[31m^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
	}
[0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\svgHelper.ts[0m:[0m[33m8[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
		export namespace sonya {
         [0m[31m^^^^^^^^^^^^^^^^^[0m
			export namespace cc {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				export type ViewBoxType = { left: number; right: number; top: number; bottom: number };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export type RotateType = 'auto' | 'auto-reverse' | number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export type SvgTextInfo = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					content: I18nable | string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x: number;
[0m[31m^^^^^^^^^^^^^^^[0m
					y: number;
[0m[31m^^^^^^^^^^^^^^^[0m
					rotate: RotateType;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				export type DivOrSvgElementWithSize = (HTMLDivElement | SVGElement) & {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					widthMm: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					heightMm: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				export type WrapElementWithInfo = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					element: DivOrSvgElementWithSize;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					alone?: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					linkToPreview?: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m

				// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export class SvgHelper {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					public static createSvg = (): SVGElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const svg = document.createElementNS(SVG_NS, 'svg') as SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('version', '1.1');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('xmlns', SVG_NS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('xmlns:xlink', SVG_XLINKNS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return svg;
[0m[31m^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
					public static createSvgPath = (): SVGPathElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return document.createElementNS(SVG_NS, 'path');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m

					public static appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						x1: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						x2: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						y1: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						y2: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const line = document.createElementNS(SVG_NS, 'line') as SVGLineElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('x1', `${x1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('x2', `${x2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('y1', `${y1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('y2', `${y2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						line.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.appendChild(line);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendCircle(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						cx: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						cy: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						radius: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const circle = document.createElementNS(SVG_NS, 'circle') as SVGCircleElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('cx', `${cx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('cy', `${cy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('r', `${radius}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('fill', '#ffffff');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, cx - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, cx + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, cy - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, cy + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						circle.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.appendChild(circle);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendTspan(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text: SVGTextElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						CHAR: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						dx: string,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						dy: string,
[0m[31m^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const tspan = document.createElementNS(SVG_NS, 'tspan') as SVGTSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('dx', `${dx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('dy', `${dy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute('dx', `${dx}`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute('dy', `${dy}`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'style',
[0m[31m^^^^^^^^^^^^^^^[0m
							STYLE.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
								'dominant-baseline:middle;text-anchor:middle;',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CHAR === '6' || CHAR === '9' ? 'text-decoration:underline;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CHAR === 'ü' ? 'opacity:0.85;font-size:0.9em;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m

						tspan.innerHTML = CHAR;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.appendChild(tspan);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendText(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						CONTENT: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						x: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						y: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						transformOrigin: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						maybeNumber: boolean = false,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const g = document.createElementNS(SVG_NS, 'g') as SVGGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('style', 'display:flex;justify-content:center;align-items:center;overflow:hidden;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (rotate) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							g.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								'style',
[0m[31m^^^^^^^^^^^^^^^^[0m
								`transform: rotate(${rotate}deg);transform-origin:${transformOrigin};`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						svg.appendChild(g);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const text = document.createElementNS(SVG_NS, 'text') as SVGTextElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('style', 'dominant-baseline:middle;text-anchor:middle;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('dx', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('dy', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (CONTENT.indexOf('<en>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const lang = getCurrentLang();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const startTag = `<${lang}>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const endTag = `</${lang}>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (CONTENT.indexOf(startTag) > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CONTENT = CONTENT.split(startTag)[1].split(endTag)[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						// if(CONTENT.indexOf('<') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   CONTENT = CONTENT.replace(/<br \/>/gi, '<br/>').replace(/<br\/>/gi, '<br>').replace(/\\n/g, '<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   if (CONTENT.indexOf('<br>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const fontSize = STYLE.indexOf('font-size:') > -1 ? STYLE.split('font-size:')[1].split(';')[0] : '2mm';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const unit = fontSize.replace(/[0-9.]/gi, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const dyNumber = parseFloat(fontSize.replace(unit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // console.log(fontSize, unit, dyNumber);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const segs = CONTENT.split('<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // let maxLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // segs.forEach((seg)=>{ maxLength = Math.max(maxLength, seg.length); });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     //     SvgHelper.appendTspan(text, '', seg, `${(seg.length - maxLength) * 0.5}em`, index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // });
[0m[31m^^^^^^^^^^^^^^^^^^^[0m

						//     let lastLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         // SvgHelper.appendTspan(text, '', seg, index ? `-${(seg.length + lastLength) * 0.5}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         SvgHelper.appendTspan(text, '', seg, index ? `-${lastLength}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         lastLength = seg.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     });
[0m[31m^^^^^^^^^^^^^^^^[0m
						//   } else {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//     text.innerHTML = CONTENT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   }
[0m[31m^^^^^^^^^^^^[0m
						// } else {
[0m[31m^^^^^^^^^^^^^^^^^[0m
						//   CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     SvgHelper.appendTspan(text, '', char, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   });
[0m[31m^^^^^^^^^^^^^^[0m
						// }
[0m[31m^^^^^^^^^^[0m

						CONTENT = CONTENT.replace(/<br \/>/gi, '<br/>').replace(/<br\/>/gi, '<br>').replace(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							/\\n/gi,
[0m[31m^^^^^^^^^^^^^^^[0m
							'<br>',
[0m[31m^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						if (CONTENT.indexOf('<br>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontSize = STYLE.indexOf('font-size:') > -1
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? STYLE.split('font-size:')[1].split(';')[0]
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: '2mm';
[0m[31m^^^^^^^^^^^^^^^^[0m
							const unit = fontSize.replace(/[0-9.]/gi, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const dyNumber = parseFloat(fontSize.replace(unit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(fontSize, unit, dyNumber);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const segs = CONTENT.split('<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// let maxLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// segs.forEach((seg)=>{ maxLength = Math.max(maxLength, seg.length); });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     // SvgHelper.appendTspan(text, '', seg, index ? `-${seg.length}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     SvgHelper.appendTspan(text, '', seg, `${(seg.length - maxLength) * 0.5}em`, index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// });
[0m[31m^^^^^^^^^^^^^[0m

							let lastLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							segs.forEach((seg, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// SvgHelper.appendTspan(text, '', seg, index ? `-${(seg.length + lastLength) * 0.5}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								SvgHelper.appendTspan(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									text,
[0m[31m^^^^^^^^^^^^^^[0m
									'',
[0m[31m^^^^^^^^^^^^[0m
									seg,
[0m[31m^^^^^^^^^^^^^[0m
									index ? `-${lastLength}em` : '0',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									index ? dyOffset : '0',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								);
[0m[31m^^^^^^^^^^[0m
								lastLength = seg.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							if (maybeNumber) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									SvgHelper.appendTspan(text, '', char, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								});
[0m[31m^^^^^^^^^^^[0m
							} else {
[0m[31m^^^^^^^^^^^^^^^[0m
								SvgHelper.appendTspan(text, '', CONTENT, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						g.appendChild(text);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							// left/top/right/bottom/width/height
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const clientRects = text.getClientRects();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { left: x1, right: x2, top: y1, bottom: y2 } = (clientRects.length
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? clientRects.item(0)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: text.getBoundingClientRect()) as DOMRect;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						text.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static setSvgTextInfo(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						info: SvgTextInfo,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						y: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						info.x = x;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						info.y = y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						info.rotate = rotate;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendOuterPath(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						WIDTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_COLOR: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						svg.setAttribute('width', `${WIDTH}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', `${HEIGHT}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${WIDTH}mm;height:${HEIGHT}mm;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const WIDTH_PX = mmToPxScale * WIDTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT_PX = mmToPxScale * HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const path = svgSpace.edu.sonya.cc.SvgHelper.createSvgPath();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('stroke', OUTER_LINE_COLOR);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'd',
[0m[31m^^^^^^^^^^^[0m
							`M 0, 0 `
[0m[31m^^^^^^^^^^^^^^^^[0m
								.concat(
[0m[31m^^^^^^^^^^^^^^^^[0m
									`h ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									`h -${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									' z',
[0m[31m^^^^^^^^^^^^^^[0m
								),
[0m[31m^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendOuterLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						WIDTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						svg.setAttribute('width', `${WIDTH}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', `${HEIGHT}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${WIDTH}mm;height:${HEIGHT}mm;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const { appendLine } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, WIDTH, 0, 0, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, WIDTH, HEIGHT, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, 0, 0, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, WIDTH, WIDTH, 0, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static getTextStyleFontSizePatchCss(NUMBER: number, TEXT_STYLE: string) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (NUMBER > 99 && TEXT_STYLE.indexOf('font-size:') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontSizeSeg = TEXT_STYLE.split('font-size:')[1].split(';')[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontUnit = fontSizeSeg.replace(/[0-9\.\-]/g, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontValue = parseFloat(fontSizeSeg.replace(fontUnit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return `font-size:${fontValue * 2 / NUMBER.toString().length}${fontUnit};`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						return '';
[0m[31m^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\svgHelper.ts[0m:[0m[33m9[0m:[0m[33m9[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
			export namespace cc {
          [0m[31m^^^^^^^^^^^^^^[0m
				export type ViewBoxType = { left: number; right: number; top: number; bottom: number };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export type RotateType = 'auto' | 'auto-reverse' | number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export type SvgTextInfo = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					content: I18nable | string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x: number;
[0m[31m^^^^^^^^^^^^^^^[0m
					y: number;
[0m[31m^^^^^^^^^^^^^^^[0m
					rotate: RotateType;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				export type DivOrSvgElementWithSize = (HTMLDivElement | SVGElement) & {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					widthMm: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					heightMm: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				export type WrapElementWithInfo = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					element: DivOrSvgElementWithSize;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					alone?: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					linkToPreview?: boolean;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m

				// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				export class SvgHelper {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					public static createSvg = (): SVGElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const svg = document.createElementNS(SVG_NS, 'svg') as SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('version', '1.1');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('xmlns', SVG_NS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('xmlns:xlink', SVG_XLINKNS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return svg;
[0m[31m^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
					public static createSvgPath = (): SVGPathElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						return document.createElementNS(SVG_NS, 'path');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m

					public static appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						x1: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						x2: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						y1: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						y2: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const line = document.createElementNS(SVG_NS, 'line') as SVGLineElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('x1', `${x1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('x2', `${x2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('y1', `${y1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						line.setAttribute('y2', `${y2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						line.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.appendChild(line);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendCircle(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						cx: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						cy: number,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						radius: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const circle = document.createElementNS(SVG_NS, 'circle') as SVGCircleElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('cx', `${cx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('cy', `${cy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('r', `${radius}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						circle.setAttribute('fill', '#ffffff');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, cx - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, cx + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, cy - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, cy + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						circle.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.appendChild(circle);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendTspan(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text: SVGTextElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						CHAR: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						dx: string,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						dy: string,
[0m[31m^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const tspan = document.createElementNS(SVG_NS, 'tspan') as SVGTSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('dx', `${dx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('dy', `${dy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute('dx', `${dx}`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute('dy', `${dy}`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// tspan.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						tspan.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'style',
[0m[31m^^^^^^^^^^^^^^^[0m
							STYLE.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
								'dominant-baseline:middle;text-anchor:middle;',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CHAR === '6' || CHAR === '9' ? 'text-decoration:underline;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CHAR === 'ü' ? 'opacity:0.85;font-size:0.9em;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m

						tspan.innerHTML = CHAR;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.appendChild(tspan);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendText(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						CONTENT: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						x: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						y: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						transformOrigin: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						maybeNumber: boolean = false,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						const g = document.createElementNS(SVG_NS, 'g') as SVGGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// g.setAttribute('style', 'display:flex;justify-content:center;align-items:center;overflow:hidden;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (rotate) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							g.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
								'style',
[0m[31m^^^^^^^^^^^^^^^^[0m
								`transform: rotate(${rotate}deg);transform-origin:${transformOrigin};`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						svg.appendChild(g);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const text = document.createElementNS(SVG_NS, 'text') as SVGTextElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.setAttribute('style', 'dominant-baseline:middle;text-anchor:middle;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('dx', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('dy', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// text.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (CONTENT.indexOf('<en>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const lang = getCurrentLang();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const startTag = `<${lang}>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const endTag = `</${lang}>`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							if (CONTENT.indexOf(startTag) > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CONTENT = CONTENT.split(startTag)[1].split(endTag)[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						// if(CONTENT.indexOf('<') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   CONTENT = CONTENT.replace(/<br \/>/gi, '<br/>').replace(/<br\/>/gi, '<br>').replace(/\\n/g, '<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   if (CONTENT.indexOf('<br>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const fontSize = STYLE.indexOf('font-size:') > -1 ? STYLE.split('font-size:')[1].split(';')[0] : '2mm';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const unit = fontSize.replace(/[0-9.]/gi, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const dyNumber = parseFloat(fontSize.replace(unit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // console.log(fontSize, unit, dyNumber);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const segs = CONTENT.split('<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // let maxLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // segs.forEach((seg)=>{ maxLength = Math.max(maxLength, seg.length); });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     //     SvgHelper.appendTspan(text, '', seg, `${(seg.length - maxLength) * 0.5}em`, index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     // });
[0m[31m^^^^^^^^^^^^^^^^^^^[0m

						//     let lastLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         // SvgHelper.appendTspan(text, '', seg, index ? `-${(seg.length + lastLength) * 0.5}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         SvgHelper.appendTspan(text, '', seg, index ? `-${lastLength}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//         lastLength = seg.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     });
[0m[31m^^^^^^^^^^^^^^^^[0m
						//   } else {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						//     text.innerHTML = CONTENT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   }
[0m[31m^^^^^^^^^^^^[0m
						// } else {
[0m[31m^^^^^^^^^^^^^^^^^[0m
						//   CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//     SvgHelper.appendTspan(text, '', char, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   });
[0m[31m^^^^^^^^^^^^^^[0m
						// }
[0m[31m^^^^^^^^^^[0m

						CONTENT = CONTENT.replace(/<br \/>/gi, '<br/>').replace(/<br\/>/gi, '<br>').replace(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							/\\n/gi,
[0m[31m^^^^^^^^^^^^^^^[0m
							'<br>',
[0m[31m^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						if (CONTENT.indexOf('<br>') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontSize = STYLE.indexOf('font-size:') > -1
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? STYLE.split('font-size:')[1].split(';')[0]
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: '2mm';
[0m[31m^^^^^^^^^^^^^^^^[0m
							const unit = fontSize.replace(/[0-9.]/gi, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const dyNumber = parseFloat(fontSize.replace(unit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// console.log(fontSize, unit, dyNumber);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const segs = CONTENT.split('<br>');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// let maxLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// segs.forEach((seg)=>{ maxLength = Math.max(maxLength, seg.length); });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// segs.forEach((seg, index)=>{
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     // SvgHelper.appendTspan(text, '', seg, index ? `-${seg.length}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//     SvgHelper.appendTspan(text, '', seg, `${(seg.length - maxLength) * 0.5}em`, index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							// });
[0m[31m^^^^^^^^^^^^^[0m

							let lastLength = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const dyOffset = `${dyNumber}${unit}`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							segs.forEach((seg, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// SvgHelper.appendTspan(text, '', seg, index ? `-${(seg.length + lastLength) * 0.5}em` : '0', index ? dyOffset : '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								SvgHelper.appendTspan(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									text,
[0m[31m^^^^^^^^^^^^^^[0m
									'',
[0m[31m^^^^^^^^^^^^[0m
									seg,
[0m[31m^^^^^^^^^^^^^[0m
									index ? `-${lastLength}em` : '0',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									index ? dyOffset : '0',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								);
[0m[31m^^^^^^^^^^[0m
								lastLength = seg.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							if (maybeNumber) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									SvgHelper.appendTspan(text, '', char, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								});
[0m[31m^^^^^^^^^^^[0m
							} else {
[0m[31m^^^^^^^^^^^^^^^[0m
								SvgHelper.appendTspan(text, '', CONTENT, '0', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}
[0m[31m^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						g.appendChild(text);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							// left/top/right/bottom/width/height
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const clientRects = text.getClientRects();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const { left: x1, right: x2, top: y1, bottom: y2 } = (clientRects.length
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								? clientRects.item(0)
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								: text.getBoundingClientRect()) as DOMRect;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						text.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static setSvgTextInfo(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						info: SvgTextInfo,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						y: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
						rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						info.x = x;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						info.y = y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						info.rotate = rotate;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendOuterPath(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						WIDTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_COLOR: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						svg.setAttribute('width', `${WIDTH}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', `${HEIGHT}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${WIDTH}mm;height:${HEIGHT}mm;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const WIDTH_PX = mmToPxScale * WIDTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const HEIGHT_PX = mmToPxScale * HEIGHT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const path = svgSpace.edu.sonya.cc.SvgHelper.createSvgPath();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute('stroke', OUTER_LINE_COLOR);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'd',
[0m[31m^^^^^^^^^^^[0m
							`M 0, 0 `
[0m[31m^^^^^^^^^^^^^^^^[0m
								.concat(
[0m[31m^^^^^^^^^^^^^^^^[0m
									`h ${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									`v ${HEIGHT_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									`h -${WIDTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									' z',
[0m[31m^^^^^^^^^^^^^^[0m
								),
[0m[31m^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static appendOuterLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						WIDTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					) {
[0m[31m^^^^^^^^[0m
						svg.setAttribute('width', `${WIDTH}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						svg.setAttribute('height', `${HEIGHT}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// svg.setAttribute('style', `width:${WIDTH}mm;height:${HEIGHT}mm;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const { appendLine } = svgSpace.edu.sonya.cc.SvgHelper;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, WIDTH, 0, 0, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, WIDTH, HEIGHT, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, 0, 0, 0, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						appendLine(svg, OUTER_LINE_STYLE, WIDTH, WIDTH, 0, HEIGHT, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					public static getTextStyleFontSizePatchCss(NUMBER: number, TEXT_STYLE: string) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (NUMBER > 99 && TEXT_STYLE.indexOf('font-size:') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontSizeSeg = TEXT_STYLE.split('font-size:')[1].split(';')[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontUnit = fontSizeSeg.replace(/[0-9\.\-]/g, '');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							const fontValue = parseFloat(fontSizeSeg.replace(fontUnit, ''));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							return `font-size:${fontValue * 2 / NUMBER.toString().length}${fontUnit};`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
						return '';
[0m[31m^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\svgHelper.ts[0m:[0m[33m10[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-inferrable-types[0m) inferrable types are not allowed
						maybeNumber: boolean = false,
      [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\svgHelper.ts[0m:[0m[33m134[0m:[0m[33m6[0m

    [0m[36mhint:[0m Remove the type, it is easily inferrable
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inferrable-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
export declare const LOCAL_STORAGE_KEY_OF_CURRENT_PAGE: any;
                                                        [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\storage.d.ts[0m:[0m[33m12[0m:[0m[33m56[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	getPageSubKind: () => any;
                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\pcGlobal.d.ts[0m:[0m[33m96[0m:[0m[33m23[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	getPageIndex: () => any;
                     [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\pcGlobal.d.ts[0m:[0m[33m99[0m:[0m[33m21[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		list: Array<object>,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\pcGlobal.d.ts[0m:[0m[33m111[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		fillItem: (itemElement: HTMLDivElement, data: object | null, init?: boolean) => void,
                                                [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\pcGlobal.d.ts[0m:[0m[33m113[0m:[0m[33m48[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		list: object[],
        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\pcGlobal.d.ts[0m:[0m[33m116[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		fillItem: (itemElement: HTMLDivElement, data: object | null, init?: boolean) => void,
                                                [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\types\pcGlobal.d.ts[0m:[0m[33m120[0m:[0m[33m48[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
}) as Array<any>).concat(treasures.map((treasure) => {
            [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\data\data.ts[0m:[0m[33m673[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	otherParameters: object;
                  [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\6.ts[0m:[0m[33m96[0m:[0m[33m18[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
		sealingStyle: any,
                [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\6.ts[0m:[0m[33m314[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
		sealingStyle: any,
                [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\6.ts[0m:[0m[33m477[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected getUsableList = (): Array<object> => {
                                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\6.ts[0m:[0m[33m660[0m:[0m[33m37[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected createTableBodyRow = (item: object): void => {
                                       [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\6.ts[0m:[0m[33m768[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherData = (newData: any): void => {};
                                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickBase.ts[0m:[0m[33m17[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		appendData: object,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickBase.ts[0m:[0m[33m28[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		otherComputedData: object,
                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickBase.ts[0m:[0m[33m29[0m:[0m[33m21[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	public getData = (): object => {
                      [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickBase.ts[0m:[0m[33m601[0m:[0m[33m22[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	public setData = (newData: object): void => {
                            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickBase.ts[0m:[0m[33m604[0m:[0m[33m28[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateData = (newData: any): void => {
                                  [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickBase.ts[0m:[0m[33m616[0m:[0m[33m34[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-inferrable-types[0m) inferrable types are not allowed
		pageClass: string = '',
  [0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\brickBase.ts[0m:[0m[33m670[0m:[0m[33m2[0m

    [0m[36mhint:[0m Remove the type, it is easily inferrable
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inferrable-types

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m137[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m140[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m141[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m149[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m150[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `centerTextShowed` is never reassigned
				centerTextShowed,
    [0m[31m^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m155[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COUNT` is never reassigned
				count: COUNT,
           [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m160[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CHARS` is never reassigned
				chars: CHARS,
           [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m161[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CENTER_TEXTS` is never reassigned
				centerTexts: CENTER_TEXTS,
                 [0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m163[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COLORS` is never reassigned
				colors: COLORS,
            [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m164[0m:[0m[33m12[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `IS_CENTERS` is never reassigned
				isCenters: IS_CENTERS,
               [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m165[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `paperSize` is never reassigned
				paperSize,
    [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m230[0m:[0m[33m4[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_X` is never reassigned
				maxX: MAX_X,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m233[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `MAX_Y` is never reassigned
				maxY: MAX_Y,
          [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m234[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_WIDTH` is never reassigned
				pokerWidth: CARD_WIDTH,
                [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m242[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CARD_HEIGHT` is never reassigned
				pokerHeight: CARD_HEIGHT,
                 [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m243[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `COUNT` is never reassigned
				count: COUNT,
           [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m252[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `BACK_COVERS` is never reassigned
				backCovers: BACK_COVERS,
                [0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m254[0m:[0m[33m16[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `title` is never reassigned
		let title = { en, zh_cn, zh_tw };
      [0m[31m^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m436[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m554[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m554[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 1:
   [0m[31m^^^^^^^[0m
				const enFirstItem = enArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_cnFirstItem = zh_cnArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const zh_twFirstItem = zh_twArray[0];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				backCover = getI18nInnerHTML({
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					en: enBackCover.concat('<br /><br />', enFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_cn: zh_cnBackCover.concat('<br /><br />', zh_cnFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					zh_tw: zh_twBackCover.concat('<br /><br />', zh_twFirstItem),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				});
[0m[31m^^^^^^^[0m

				title.en += '_'.concat(enFullArray[0]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_cn += '_'.concat(zh_cnFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				title.zh_tw += '_'.concat(zh_twFirstItem);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m554[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataOfPoker = (newData: any): void => {
                                              [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m631[0m:[0m[33m46[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mprefer-const[0m) `notSameBackCover` is never reassigned
		let notSameBackCover = getI18nInnerHTML({
      [0m[31m^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\8.ts[0m:[0m[33m985[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					default:
     [0m[31m^^^^^^^^[0m
						const onclickFunction = (window as unknown as OnclickFunctionMap)[onclick as string];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aElement.onclick = onclickFunction;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// console.log(aElement.onclick);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\pcGlobal.ts[0m:[0m[33m390[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
			(menu as unknown as { i18n: object }).i18n = titles;
                               [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\pcGlobal.ts[0m:[0m[33m423[0m:[0m[33m31[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-case-declarations[0m) Unexpected declaration in case
					default:
     [0m[31m^^^^^^^^[0m
						const onclickFunction = (window as unknown as OnclickFunctionMap)[onclick as string];
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						menu.onclick = onclickFunction;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						break;
[0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\pcGlobal.ts[0m:[0m[33m485[0m:[0m[33m5[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		list: Array<object>,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\pcGlobal.ts[0m:[0m[33m502[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		fillItem: (itemElement: HTMLDivElement, data: object | null, init?: boolean) => void,
                                                [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\pcGlobal.ts[0m:[0m[33m504[0m:[0m[33m48[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		list: object[],
        [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\pcGlobal.ts[0m:[0m[33m546[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		fillItem: (itemElement: HTMLDivElement, data: object | null, init?: boolean) => void,
                                                [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\pcGlobal.ts[0m:[0m[33m553[0m:[0m[33m48[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			default:
   [0m[31m^^^^^^^^[0m
				showBlock(paginationElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				leftArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					gotoPage(currentPage - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m
				rightArrowElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					gotoPage(currentPage + 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m

				pageNumbersWrapElement.innerHTML = '';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				if (pageCount < 10) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					for (let i = 0; i < pageCount; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pageNumberElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						pageNumberElement.innerHTML = (i + 1).toString();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						pageNumbersWrapElement.appendChild(pageNumberElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				} else {
[0m[31m^^^^^^^^^^^^[0m
					for (let i = 0; i < 5; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const pageNumberElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						pageNumberElement.innerHTML = (i + 1).toString();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						pageNumbersWrapElement.appendChild(pageNumberElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const ellipsisElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ellipsisElement.innerHTML = '...';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					pageNumbersWrapElement.appendChild(ellipsisElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const lastPageNumberElement = createElement('span') as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					lastPageNumberElement.innerHTML = pageCount.toString();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					pageNumbersWrapElement.appendChild(lastPageNumberElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				const pageNumberElementCount = pageNumbersWrapElement.children.length;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				for (let i = 0; i < pageNumberElementCount; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pageNumberElement = pageNumbersWrapElement.children[i] as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					pageNumberElement.onclick = (event: Event) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const element = event.target as HTMLSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const innerHTML = element.innerHTML;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (innerHTML === '...') {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							gotoPage(parseInt(element.getAttribute(PAGE_PROPERTY) as string, 0) - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							gotoPage(parseInt(innerHTML, 0) - 1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						return stopEventBubble(event);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\pcGlobal.ts[0m:[0m[33m689[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 'share':
   [0m[31m^^^^^^^^^^^^^[0m
				// const url = encodeURI(window.location.href);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				// const wechatShareImageSrcPostfix = url.indexOf('&') === -1 ? '': url.split('&').slice(1).map((keyValue: string) => keyValue.split('=')[1]);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const wechatShareImageSrc = `${SITE_IMAGE_PATH}${ACTUAL_PAGE_NAME}/${PAGE_ID}.png`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				this.wechatShareElement.setAttribute('src', wechatShareImageSrc);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				this.wechatShareElement.setAttribute('alt', wechatShareImageSrc);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				showInlineFlex(this.shareAreaElement);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\brick.ts[0m:[0m[33m320[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 'saveConfigToLocal':
   [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				// core.saveConfigToLocal();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				// https://blog.csdn.net/qq_38431572/article/details/102687955
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const blob = new Blob([JSON.stringify(core.getData())], { type: 'application/json' });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const configFilename = `edu.sonya.cc_brick_${PAGE_ID}_${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					convertDateToYYYYMMDD_hhmmss(new Date())
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}.config`;
[0m[31m^^^^^^^^^^^^^^[0m

				if ('msSaveOrOpenBlob' in navigator) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					(window.navigator as unknown as {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						msSaveOrOpenBlob: (blob: Blob, configName: string) => void;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}).msSaveOrOpenBlob(blob, configFilename);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				} else {
[0m[31m^^^^^^^^^^^^[0m
					const url = window.URL.createObjectURL(blob);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const link = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					link.href = url;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					link.setAttribute('download', configFilename);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					link.click();
[0m[31m^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\brick.ts[0m:[0m[33m352[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
			case 'saveConfigToLocal':
   [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				// core.saveConfigToLocal();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				// https://blog.csdn.net/qq_38431572/article/details/102687955
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const blob = new Blob([JSON.stringify(core.getData())], { type: 'application/json' });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				const configFilename = `edu.sonya.cc_brick_${PAGE_ID}_${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					convertDateToYYYYMMDD_hhmmss(new Date())
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}.config`;
[0m[31m^^^^^^^^^^^^^^[0m

				if ('msSaveOrOpenBlob' in navigator) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					(window.navigator as unknown as {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						msSaveOrOpenBlob: (blob: Blob, configName: string) => void;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}).msSaveOrOpenBlob(blob, configFilename);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				} else {
[0m[31m^^^^^^^^^^^^[0m
					const url = window.URL.createObjectURL(blob);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const link = createElement('a') as HTMLAnchorElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					link.href = url;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					link.setAttribute('download', configFilename);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					link.click();
[0m[31m^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				break;
[0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\brick.ts[0m:[0m[33m352[0m:[0m[33m3[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-window-prefix[0m) For compatibility between the Window context and the Web Workers, calling Web APIs via `window` is disallowed
					(window.navigator as unknown as {
      [0m[31m^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\brick.ts[0m:[0m[33m362[0m:[0m[33m6[0m

    [0m[36mhint:[0m Instead, call this API via `self`, `globalThis`, or no extra prefix
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-window-prefix

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		const loadConfigFromLocalCallback = (newData: object) => {
                                                [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\actualPage\brick.ts[0m:[0m[33m425[0m:[0m[33m48[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-case-declarations[0m) Unexpected declaration in case
				default:
    [0m[31m^^^^^^^^[0m
					let fixedRowCount = 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (item.kind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case 'hollowOut':
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						case 'hollowOutWithHole':
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							fixedRowCount = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							fixedRowCount = 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const rowCount = item.rowCount;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					for (let i = 0; i < rowCount; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// elementList.push({ element: this.getElement({ ...item, rowCount: fixedRowCount }, mmToPxScale, MAX_X, MAX_Y) });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						elementList.push(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.getElement({ ...item, rowCount: fixedRowCount }, mmToPxScale, MAX_X, MAX_Y),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
					break;
[0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\11.ts[0m:[0m[33m160[0m:[0m[33m4[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mno-case-declarations[0m) Unexpected declaration in case
				default:
    [0m[31m^^^^^^^^[0m
					let fixedRowCount = 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (item.kind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case 'hollowOut':
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						case 'hollowOutWithHole':
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							fixedRowCount = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							fixedRowCount = 1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const rowCount = item.rowCount;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					for (let i = 0; i < rowCount; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// elementList.push({ element: this.getElement({ ...item, rowCount: fixedRowCount }, mmToPxScale, MAX_X, MAX_Y) });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						elementList.push(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.getElement({ ...item, rowCount: fixedRowCount }, mmToPxScale, MAX_X, MAX_Y),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
					break;
[0m[31m^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\11.ts[0m:[0m[33m160[0m:[0m[33m4[0m

    [0m[36mhint:[0m Wrap switch case and default blocks in brackets
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-case-declarations

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected createTableBodyRow = (item: object): void => {
                                       [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\11.ts[0m:[0m[33m1384[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected getUsableList = (): Array<object> => {
                                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\11.ts[0m:[0m[33m1440[0m:[0m[33m37[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `remainingColCount` is never reassigned
			let remainingColCount = COL_COUNT - lastPage.mainWrapperColCount;
       [0m[31m^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\12.ts[0m:[0m[33m645[0m:[0m[33m7[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `fixedMaxNumber` is never reassigned
		let fixedMaxNumber = maxNumber === 9 ? 10 : maxNumber;
      [0m[31m^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\12.ts[0m:[0m[33m809[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `subWrapperRemainRow` is never reassigned
					let subWrapperRemainRow = ROW_COUNT - firstItem.digit;
         [0m[31m^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\12.ts[0m:[0m[33m871[0m:[0m[33m9[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected createTableBodyRow = (item: object): void => {
                                       [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\12.ts[0m:[0m[33m1354[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected getUsableList = (): Array<object> => {
                                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\12.ts[0m:[0m[33m1401[0m:[0m[33m37[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
		createSvgPath: any,
                 [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\12.ts[0m:[0m[33m1486[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
namespace edu {
[0m[31m^^^^^^^^^^^^^^^[0m
	export namespace sonya {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
		export namespace cc {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export enum DiceKind {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>None</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>无</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>無</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				none = 0,
[0m[31m^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>4-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>4面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>4面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				four = 1,
[0m[31m^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>6-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>6面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>6面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				six = 2,
[0m[31m^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>8-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>8面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>8面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				eight = 4,
[0m[31m^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>12-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>12面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>12面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twelve = 8,
[0m[31m^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>20-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>20面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>20面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twenty = 16,
[0m[31m^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>24-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>24面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>24面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twentyFour = 32,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Count of Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型数量</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型數量</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export const DiceKindCount = 8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Default Value of Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型默认值</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型默認值</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export const DefaultDiceKind = 63;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generation Parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export interface DiceParameter {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>id</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>id</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				id: string;
[0m[31m^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>骰子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				diceKind: DiceKind;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Side Length</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>边长</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>邊長</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				sideLength: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Contents of all sides</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>各面内容</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>各面內容</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				contents: Array<I18nable | string>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Outside Boundary Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>外边界线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>外邊界線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				outerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Interior Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>内部线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>內部線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				innerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Text Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>文本样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>文字樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				textStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Other parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>其它参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>其它參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				options: object;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			type ViewBoxType = { left: number; right: number; top: number; bottom: number };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			type RotateType = 'auto' | 'auto-reverse' | number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			type SvgTextInfo = { content: I18nable | string; x: number; y: number; rotate: RotateType };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generation Result</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成结果</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成結果</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export interface DiceResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Svg Element Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>svg元素编号</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>svg元素編號</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				id: string;
[0m[31m^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Svg Element</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>svg元素</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>svg元素</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				svg: SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>css</en>
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>样式表</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>樣式表</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				css: string;
[0m[31m^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generator</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成器</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成器</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export class DiceGenerator {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Generate dice in batch</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>批量生成骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>批量生成骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @param createParameters
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <en>Arrays: creating parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>数组：创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>數組：創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @returns
[0m[31m^^^^^^^^^^^^^^^[0m
				 * <en>Generate results in array format, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成结果，为数组格式，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成結果，為數組格式，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				public batchCreate(createParameters: Array<DiceParameter>): Array<DiceResult> {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					createParameters.forEach((createParameter, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (createParameter.id.length === 0) createParameter.id = `svg_index`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					});
[0m[31m^^^^^^^^[0m

					return createParameters.map((createParameter) => this.create(createParameter));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Generate a single dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成单个骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成單個骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @param param0
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
				 * <en>Deconstructed creation parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>已解构的创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>已解構的創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @returns
[0m[31m^^^^^^^^^^^^^^^[0m
				 * <en>Generate results, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成结果，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成結果，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				public create({
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					id,
[0m[31m^^^^^^^^[0m
					diceKind,
[0m[31m^^^^^^^^^^^^^^[0m
					sideLength: SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					contents: CONTENTS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerLineStyle: OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					innerLineStyle: INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					textStyle: TEXT_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					options: OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
				}: DiceParameter): DiceResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (id.length === 0) id = 'svg_0';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let FIXED_SIDE_LENGTH = SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let nested = false;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							FIXED_SIDE_LENGTH = 25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							nested = true;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const svg = this.createSvg();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('id', id);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const viewBox = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						left: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						right: 0,
[0m[31m^^^^^^^^^^^^^^^[0m
						top: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						bottom: 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
					const infos = [] as Array<SvgTextInfo>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								for (let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}
[0m[31m^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						// case DiceKind.six:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.eight:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twelve:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twenty:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const mmToPxScale = (new DPIHelper()).getMmToPxScale();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfFourSidedDice(infos, FIXED_SIDE_LENGTH, CONTENTS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.six:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfSixSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.eight:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfEightSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twelve:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwelveSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twenty:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwentySidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwentyFourSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
					infos.forEach(({ content, x, y, rotate }) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendText(svg, TEXT_STYLE, content, x, y, rotate, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					});
[0m[31m^^^^^^^^[0m

					const width = `${viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const height = `${viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('width', width);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('height', height);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// svg.setAttribute('style', `width:${width};height:${height};`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// const outerSvg = nested && (FIXED_SIDE_LENGTH !== SIDE_LENGTH) ? this.createSvg(): null;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const outerSvg = createElement('wrap'); // as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerSvg.appendChild(svg);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerSvg.setAttribute('id', id.concat('_wrapper'));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (FIXED_SIDE_LENGTH !== SIDE_LENGTH) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const scale = SIDE_LENGTH / FIXED_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const widthOuterSvg = `${scale * viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const heightOuterSvg = `${scale * viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const transformScale = mmToPxScale * (scale - 1) / 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'style',
[0m[31m^^^^^^^^^^^^^^^[0m
							`width:${widthOuterSvg};height:${heightOuterSvg};display:inline-block;`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							'transform',
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							`translate(${viewBox.right * transformScale}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox.bottom * transformScale
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}) scale(${scale}, ${scale})`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.setAttribute('transform-origin', 'center');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const css = 'page,wrap{page-break-inside:avoid;}wrap{display:inline-flex;}';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return { id, svg: nested ? outerSvg : svg, css };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private createSvg = (): SVGElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const svg = document.createElementNS(SVG_NS, 'svg') as SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('version', '1.1');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('xmlns', SVG_NS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('xmlns:xlink', SVG_XLINKNS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return svg;
[0m[31m^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m

				drawGraphsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const HEIGHT_OF_ONE = SIDE_LENGTH * 1.732 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HEIGHT_OF_TWO = HEIGHT_OF_ONE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部横线
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH * 0.5, x2 = x1 + SIDE_LENGTH, y1 = HEIGHT_OF_ONE, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = x1 + SIDE_LENGTH, y1 += HEIGHT_OF_ONE, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部左下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH, x2 = SIDE_LENGTH * 0.5, y1 = 0, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 += SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x2 += SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 += HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部右下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH * 0.5, x2 = SIDE_LENGTH, y1 = HEIGHT_OF_ONE, y2 = HEIGHT_OF_TWO;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const EXTNED_SCALE = 0.15;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const EXTNED_LENGTH = EXTNED_SCALE * SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = EXTNED_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_Y = EXTNED_LENGTH * Math.cos(30 / 180 * Math.PI);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 外部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = SIDE_LENGTH * 0.5, y1 = HEIGHT_OF_TWO, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 -= OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH * 1 - EXTNED_LENGTH, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5, y1 = y2, y2 += HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH * 2 + OFFSET_X, y1 = y2, y2 = HEIGHT_OF_TWO - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH, y1 = y2, y2 -= 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = OFFSET_X, y1 = y2, y2 -= 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = 0, y1 = y2, y2 = HEIGHT_OF_TWO;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					CONTENTS: any[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 12 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 25.0 / 25, SIDE_LENGTH * 18.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 21.0 / 25, SIDE_LENGTH * 9.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 31.0 / 25, SIDE_LENGTH * 11.5 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 40.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 19.0 / 25, SIDE_LENGTH * 33.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 31.5 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 40.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.5 / 25, SIDE_LENGTH * 32.0 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[8], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 30.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[9], SIDE_LENGTH * 27.0 / 25, SIDE_LENGTH * 22.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[10], SIDE_LENGTH * 9.5 / 25, SIDE_LENGTH * 31.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[11], SIDE_LENGTH * 42.0 / 25, SIDE_LENGTH * 33.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (CONTENTS.join(',') === 'ˉ,ˊ,ˇ,ˋ') {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[0], SIDE_LENGTH * 24.5 / 25, SIDE_LENGTH * 22.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[1], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 13.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[2], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 15.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 44.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[4], SIDE_LENGTH * 18.5 / 25, SIDE_LENGTH * 36.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 34.0 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 44.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.0 / 25, SIDE_LENGTH * 35.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[8], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 33.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[9], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 25.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[10], SIDE_LENGTH * 8.0 / 25, SIDE_LENGTH * 35.0 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[11], SIDE_LENGTH * 42.0 / 25, SIDE_LENGTH * 36.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					} else {
[0m[31m^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[0], SIDE_LENGTH * 24.5 / 25, SIDE_LENGTH * 19.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[1], SIDE_LENGTH * 21.0 / 25, SIDE_LENGTH * 10.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[2], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 12.5 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 41.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[4], SIDE_LENGTH * 18.5 / 25, SIDE_LENGTH * 34.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 32.5 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 41.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.5 / 25, SIDE_LENGTH * 32.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[8], SIDE_LENGTH * 19.5 / 25, SIDE_LENGTH * 31.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[9], SIDE_LENGTH * 26.5 / 25, SIDE_LENGTH * 23.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[10], SIDE_LENGTH * 8.5 / 25, SIDE_LENGTH * 32.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[11], SIDE_LENGTH * 41.0 / 25, SIDE_LENGTH * 34.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawGraphsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const SIDE_LENGTH_PX = SIDE_LENGTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const duckTongueHeightPx = SIDE_LENGTH_PX * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const duckTongueHeight = SIDE_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionScale = 0.75;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionHeightPx = SIDE_LENGTH_PX * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionHeight = SIDE_LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const offsetScale = 0.1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const offsetX = SIDE_LENGTH_PX * offsetScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionWidth = SIDE_LENGTH_PX - offsetX * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					console.log(SIDE_LENGTH, mmToPxScale, SIDE_LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const path = document.createElementNS(SVG_NS, 'path') as SVGPathElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						'd',
[0m[31m^^^^^^^^^^[0m
						`M 0, ${duckTongueHeightPx + SIDE_LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							.concat(
[0m[31m^^^^^^^^^^^^^^^[0m
								`h ${SIDE_LENGTH_PX * 2} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v -${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// `h ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${SIDE_LENGTH_PX * 2} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v -${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								' z',
[0m[31m^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let X1 = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						X2 = SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X3 = SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X4 = SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X5 = SIDE_LENGTH * 4,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X6 = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let Y1 = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						Y2 = duckTongueHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y4 = Y2 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y5 = Y4 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y7 = Y5 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y8 = Y7 + duckTongueHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y3 = Y4 - pasteRegionHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y6 = Y5 + pasteRegionHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 内部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X3, X4, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X2, X5, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.appendLine(svg, INNER_LINE_STYLE, X4, X5, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X3, X6, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.left = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.top = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.right = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = SIDE_LENGTH * 3 + SIDE_LENGTH * duckTongueScale * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				private drawTextsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// // font-size: 5mm;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 61.0 / 25, SIDE_LENGTH * 75.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 113.5 / 25, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 36.0 / 25, SIDE_LENGTH * 52.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 61.0 / 25, SIDE_LENGTH * 52.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 72.5 / 25, SIDE_LENGTH * 40.0 / 25, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 36.0 / 25, SIDE_LENGTH * 77.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 77.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 62.5 / 25, SIDE_LENGTH * 100.0 / 25, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 52.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 62.5 / 25, SIDE_LENGTH * 52.5 / 25, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 77.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private drawGraphsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const HEIGHT_OF_ONE = SIDE_LENGTH * 1.732 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HEIGHT_OF_TWO = HEIGHT_OF_ONE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const BOTTOM = HEIGHT_OF_ONE * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部横线
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						0,
[0m[31m^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					// 内部左下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						BOTTOM,
[0m[31m^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					// 内部右下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						0,
[0m[31m^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					const EXTNED_SCALE = 0.15;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const EXTNED_LENGTH = EXTNED_SCALE * SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = EXTNED_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_Y = EXTNED_LENGTH * Math.cos(30 / 180 * Math.PI);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 外部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = OFFSET_X, y1 = HEIGHT_OF_ONE, y2 = HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH - OFFSET_X, y1 = y2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH, y1 = y2, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5 - OFFSET_X, y1 = y2, y2 = HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH + EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2,
[0m[31m^^^^^^^^^^^^^[0m
						x2 += SIDE_LENGTH * 0.5 - EXTNED_LENGTH + OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 = y2,
[0m[31m^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2,
[0m[31m^^^^^^^^^^^^^[0m
						x2 += EXTNED_LENGTH - SIDE_LENGTH * 0.5 - OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 = y2,
[0m[31m^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH * 0.5, y1 = y2, y2 -= HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH - OFFSET_X * 2, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X + SIDE_LENGTH * 0.5, y1 = y2, y2 -= OFFSET_Y + HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.right = SIDE_LENGTH * 3.5 + EXTNED_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = BOTTOM;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private drawTextsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 8 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 78.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 25.5 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 50.0 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 28.5 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 39.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 41.5 / 25, SIDE_LENGTH * 17.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 78.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 25.5 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 50.0 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 28.5 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 39.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 41.5 / 25, SIDE_LENGTH * 17.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawGraphsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const QUARTER_SIDE_LENGTH = SIDE_LENGTH * 0.25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const RADIUS = SIDE_LENGTH * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const ANGLE18 = Math.PI * 18 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE36 = Math.PI * 36 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE54 = Math.PI * 54 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE72 = Math.PI * 72 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18 = Math.sin(ANGLE18);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36 = Math.sin(ANGLE36);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54 = Math.sin(ANGLE54);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72 = Math.sin(ANGLE72);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const HALF_SIDE_LENGTH = SIDE_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const LONG_SIDE_LENGTH = SIDE_LENGTH * 0.5 / SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HALF_LONG_SIDE_LENGTH = LONG_SIDE_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN72_MULTIPLY_LONG_SIDE_LENGTH = LONG_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SECOND_GROUP_OFFSET = SIDE_LENGTH * 2 + LONG_SIDE_LENGTH +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const TOP = SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					for (let groupIndex = 0; groupIndex < 2; ++groupIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LEFT = (groupIndex === 0 ? 0 : SECOND_GROUP_OFFSET) +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let A1x = 0, A1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A2x = 0, A2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A3x = 0, A3y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A4x = 0, A4y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A5x = 0, A5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B1x = 0, B1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B2x = 0, B2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B5x = 0, B5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C1x = 0, C1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C2x = 0, C2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C5x = 0, C5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D1x = 0, D1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D2x = 0, D2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D5x = 0, D5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E1x = 0, E1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E2x = 0, E2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E5x = 0, E5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F1x = 0, F1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F2x = 0, F2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F5x = 0, F5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A1x = LEFT + SIN18 * (SIDE_LENGTH + SIN18_MULTIPLY_SIDE_LENGTH * 2) +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2x = A1x + SIN54_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5x = A1x - SIN54_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3x = A2x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4x = A5x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B1x = A5x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B2x = A5x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5x = A1x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							C1x = A2x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C5x = A2x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C2x = A1x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D1x = A3x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D2x = A3x + HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5x = A2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E1x = A4x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E2x = A4x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5x = A3x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1x = A4x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F5x = A4x - HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F2x = A5x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							A1y = TOP + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2y = A1y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							A3y = A2y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B1y = TOP;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B2y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B5y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C1y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C5y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C2y = B5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							D1y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							D2y = A3y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E2y = A4y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5y = E2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E1y = E2y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1y = A4y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F2y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F5y = D2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							A1x = LEFT + LONG_SIDE_LENGTH + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2x = A1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3x = A1x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5x = A1x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4x = A5x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B1x = A5x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B2x = A1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5x = A5x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							C2x = A2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C1x = A1x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C5x = A1x + HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D2x = A3x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D1x = D2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5x = D1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E2x = A3x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E1x = E2x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5x = E1x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1x = A5x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F2x = A5x - HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F5x = A4x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							A1y = TOP + SIN72_MULTIPLY_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2y = A1y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3y = A1y + SIN72_MULTIPLY_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							A5y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B1y = TOP;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B2y = A5y - SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5y = B2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C1y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C2y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C5y = A1y - SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D5y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							D1y = D5y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D2y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E1y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E2y = D5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E5y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							F1y = C1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F2y = C5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F5y = A4y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const LINE_STYLE = groupIndex === 0 ? INNER_LINE_STYLE : OUTER_LINE_STYLE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, A1x, A2x, A1y, A2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, A3x, A2y, A3y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, A4x, A3y, A4y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, A5x, A4y, A5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, A1x, A5y, A1y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, A1x, B2x, A1y, B2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A1x, C5x, A1y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, C2x, A2y, C2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, D5x, A2y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, D2x, A3y, D2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, E5x, A3y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, E2x, A4y, E2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, F5x, A4y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, F2x, A5y, F2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, B5x, A5y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, B1x, B2x, B1y, B2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, B1x, B5x, B1y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, C1x, C2x, C1y, C2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, C1x, C5x, C1y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, D1x, D2x, D1y, D2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, D1x, D5x, D1y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, E1x, E2x, E1y, E2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, E1x, E5x, E1y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, F1x, F2x, F1y, F2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, F1x, F5x, F1y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let B6x = 0, B6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B7x = 0, B7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B8x = 0, B8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B9x = 0, B9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let C6x = 0, C6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C7x = 0, C7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C8x = 0, C8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C9x = 0, C9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let D6x = 0, D6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D7x = 0, D7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D8x = 0, D8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D9x = 0, D9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let E6x = 0, E6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E7x = 0, E7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E8x = 0, E8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E9x = 0, E9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let F6x = 0, F6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F7x = 0, F7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F8x = 0, F8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F9x = 0, F9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN18_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN36_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN54_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN72_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B6x = B5x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B6y = B5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B7x = B1x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C8x = C1x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B7y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C8y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B8x = B1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B9x = B2x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C6x = C5x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C7x = C1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B8y = B1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B9y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C6y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C7y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C9x = C2x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C9y = C2y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// 无D6和D7
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							D8x = D1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D8y = D1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D9x = D2x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D9y = D2y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E6x = E5x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E6y = E5y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E7x = E1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E8x = E1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E7y = E1y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E8y = E7y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E9x = E2x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E9y = E2y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F6x = F5x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F6y = F5y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F7x = F1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F7y = F1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F8x = F1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F8y = F1y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F9x = F2x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F9y = F2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							// } else {
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							//   B6x = B5x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B6y = B5y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   B7x = B1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B8x = B1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B7y = B1y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B8y = B7y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   B9x = B2x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B9y = B2y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C6x = C5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C6y = C5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C7x = C1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C7y = C1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C8x = C1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C8y = C1y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C9x = C2x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C9y = C2y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D6x = D5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D6y = D5y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D7x = D1x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D7y = D1y - 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D8x = D1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D8y = D1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D9x = D2x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D9y = D2y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E6x = E5x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E6y = E5y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E7x = E1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E7y = E1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E8x = E1x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E8y = E1y + 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E9x = E2x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E9y = E2y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   // F6x = F5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   // F6y = F5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   // F7x = F1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   // F7y = F1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   F8x = F1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   F8y = F1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   F9x = F2x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   F9y = F2y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B5x, B6x, B5y, B6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B1x, B7x, B1y, B7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B1x, B8x, B1y, B8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B2x, B9x, B2y, B9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, C5x, C6x, C5y, C6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C1x, C7x, C1y, C7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C1x, C8x, C1y, C8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C2x, C9x, C2y, C9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D1x, D8x, D1y, D8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, D2x, D9x, D2y, D9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, E5x, E6x, E5y, E6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E1x, E7x, E1y, E7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E1x, E8x, E1y, E8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E2x, E9x, E2y, E9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F5x, F6x, F5y, F6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F1x, F7x, F1y, F7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F1x, F8x, F1y, F8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F2x, F9x, F2y, F9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, B6x, B7x, B6y, B7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B8x, B9x, B8y, B9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C6x, C7x, C6y, C7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C8x, C9x, C8y, C9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D6x, D7x, D6y, D7y, viewBox); //
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D8x, D9x, D8y, D9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E6x, E7x, E6y, E7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E8x, E9x, E8y, E9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F6x, F7x, F6y, F7y, viewBox); //
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F8x, F9x, F8y, F9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, B2x, C5x, B2y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C2x, D5x, C2y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, D2x, E5x, D2y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E2x, F5x, E2y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F2x, B5x, F2y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if ((OPTIONS as unknown as { withHole: boolean }).withHole) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC1x = (A1x + A2x + A3x + A4x + A5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC1y = (A1y + A2y + A3y + A4y + A5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC2x = (A1x + A5x + B1x + B2x + B5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC2y = (A1y + A5y + B1y + B2y + B5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC3x = (A1x + A2x + C1x + C2x + C5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC3y = (A1y + A2y + C1y + C2y + C5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC4x = (A2x + A3x + D1x + D2x + D5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC4y = (A2y + A3y + D1y + D2y + D5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC5x = (A3x + A4x + E1x + E2x + E5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC5y = (A3y + A4y + E1y + E2y + E5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC6x = (A4x + A5x + F1x + F2x + F5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC6y = (A4y + A5y + F1y + F2y + F5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendCircle(svg, INNER_LINE_STYLE, CC1x, CC1y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC2x, CC2y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC3x, CC3y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC4x, CC4y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC5x, CC5y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC6x, CC6y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 12 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 58.5 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 130.0 / 25, SIDE_LENGTH * 90.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 170.0 / 25, SIDE_LENGTH * 90.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 118.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 185.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 150.5 / 25, SIDE_LENGTH * 25.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 157.5 / 25, SIDE_LENGTH * 30.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 125.0 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 190.0 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 136.5 / 25, SIDE_LENGTH * 90.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 177.0 / 25, SIDE_LENGTH * 90.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 52.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				drawGraphsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const pasteRegionScale = 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegion = SIDE_LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionPx = pasteRegion * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const ANGLE60 = Math.PI * 60 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN60 = Math.sin(ANGLE60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const COS60 = Math.cos(ANGLE60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const OneX = SIDE_LENGTH * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OneY = SIDE_LENGTH * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionShortBiasX = pasteRegion * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasY = pasteRegion * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionLongBias = SIDE_LENGTH * (1 - pasteRegionScale);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasX = pasteRegionLongBias * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasY = pasteRegionLongBias * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const TwoY = OneY * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ThreeY = OneY * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let FIVE_SIDE = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = pasteRegionLongBiasX + pasteRegion, x2 = x1 + FIVE_SIDE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x1 - OneX, x2 = x1 + FIVE_SIDE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 += OneY, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 -= OneX, x2 = x1 - OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = TwoY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					for (let i = 0; i < 5; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					x1 = pasteRegionShortBiasX, x2 = x1 + OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = TwoY, y2 = ThreeY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 += OneX, x2 += OneX * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = y1 + TwoY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 -= OneX;
[0m[31m^^^^^^^^^^^^^^^^[0m
					y1 = 0;
[0m[31m^^^^^^^^^^^^[0m
					for (let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					x1 += SIDE_LENGTH, x2 += OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y2 = TwoY;
[0m[31m^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 += SIDE_LENGTH, x2 += OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y2 = OneY;
[0m[31m^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const OneXPx = OneX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OneYPx = OneY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasXPx = pasteRegionShortBiasX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasYPx = pasteRegionShortBiasY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionLongBiasXPx = pasteRegionLongBiasX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasYPx = pasteRegionLongBiasY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const path = document.createElementNS(SVG_NS, 'path') as SVGPathElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						'd',
[0m[31m^^^^^^^^^^[0m
						`M 0, ${OneYPx + pasteRegionLongBiasYPx} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							.concat(
[0m[31m^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx + OneXPx * 2}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									pasteRegionShortBiasYPx + OneYPx * 2
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}`,
[0m[31m^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								' z',
[0m[31m^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.right = SIDE_LENGTH * 5 + OneX + pasteRegion;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = OneY * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				drawTextsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 20 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 52.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 77.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 102.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 127.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 15.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 40.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 65.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 90.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 90.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[12], SIDE_LENGTH * 65.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[13], SIDE_LENGTH * 40.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[14], SIDE_LENGTH * 15.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[15], SIDE_LENGTH * 127.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[16], SIDE_LENGTH * 102.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[17], SIDE_LENGTH * 77.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[18], SIDE_LENGTH * 52.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[19], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				getSinByAngle(angle) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return Math.sin(angle * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				getCosByAngle(angle) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return Math.cos(angle * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				// fixContent(content)  { return content.toString().replace(/([69])/gi, '<font style="text-decoration:underline;">$1</font>'); }
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				drawGraphsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const ANGLE = 48.275;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const { getSinByAngle, getCosByAngle } = this;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const TEXT_OFFSET_SCALE = 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const BIGER_ANGLE = 180 - ANGLE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SMALL_ANGLE_COS = Math.cos(ANGLE * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HALF_LONG_SIDE_LENGTH = 50 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SHORT_SIDE_LENGTH = HALF_LONG_SIDE_LENGTH / SMALL_ANGLE_COS;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let ax = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						ay = 0,
[0m[31m^^^^^^^^^^^^^[0m
						bx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						by = 0,
[0m[31m^^^^^^^^^^^^^[0m
						cx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						cy = 0,
[0m[31m^^^^^^^^^^^^^[0m
						dx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						dy = 0,
[0m[31m^^^^^^^^^^^^^[0m
						ex = 0,
[0m[31m^^^^^^^^^^^^^[0m
						ey = 0,
[0m[31m^^^^^^^^^^^^^[0m
						fx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						fy = 0;
[0m[31m^^^^^^^^^^^^^[0m
					let aax = 0,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						aay = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						bbx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						bby = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ddx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ddy = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						eex = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						eey = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ffx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ffy = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						fffx = 0,
[0m[31m^^^^^^^^^^^^^^^[0m
						fffy = 0;
[0m[31m^^^^^^^^^^^^^^^[0m

					let content_offset_top = -3, content_offset_left = -2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					content_offset_top *= 1.5, content_offset_left *= 1.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = -23.0805019730301175;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 080501973030115 1.7763568394002505e-14mm
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 08050197303012 -1.0658141036401503e-14mm
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const X_VALUE = 150;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// const ax1 = 150, ay1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax1 = X_VALUE + OFFSET_X, ay1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx1 = ax1 + 50, by1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const cx1 = ax1 + HALF_LONG_SIDE_LENGTH, cy1 = SHORT_SIDE_LENGTH * getSinByAngle(ANGLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd1 = BIGER_ANGLE - ANGLE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx1 = cx1 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						dy1 = cy1 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce1 = 180 - BIGER_ANGLE - angle_cd1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex1 = cx1 + SHORT_SIDE_LENGTH * getCosByAngle(angle_ce1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ey1 = cy1 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ce1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf1 = BIGER_ANGLE - angle_ce1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx1 = cx1 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fy1 = cy1 - SHORT_SIDE_LENGTH * getSinByAngle(angle_cf1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_x1 = X_VALUE + dx1 - cx1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_y1 = 0 + dy1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax1 = X_VALUE + (c_mirror_ad_x1 - X_VALUE) * 0.3 + OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay1 = 0 + (c_mirror_ad_y1 - 0) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx1 = 0, bby1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx1 = dx1 + (c_mirror_ad_x1 - dx1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy1 = dy1 + (c_mirror_ad_y1 - dy1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx1 = bx1 + (cx1 - bx1) * 0.3, ffy1 = 0 + (cy1 - 0) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_x1 = ex1 + fx1 - cx1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_y1 = ey1 + fy1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex1 = ex1 + (c_mirror_ef_x1 - ex1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey1 = ey1 + (c_mirror_ef_y1 - ey1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fffx1 = fx1 + (c_mirror_ef_x1 - fx1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fffy1 = fy1 + (c_mirror_ef_y1 - fy1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax1,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay1,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by1,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy1,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy1,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex1,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey1,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy1;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax1,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bbx = bbx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bby = bby1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						fffx = fffx1,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						fffy = fffy1;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, ddx, aay, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, eex, fffx, eey, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, fffx, fy, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx4 = dx1 + ex1 - cx1, cy4 = dy1 + ey1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax4 = ex1, ay4 = ey1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx4 = dx1, dy4 = dy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd4 = Math.atan((cy4 - dy4) / (cx4 - dx4)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce4 = BIGER_ANGLE - angle_cd4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf4 = BIGER_ANGLE - (90 - angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca4 = BIGER_ANGLE - (90 - angle_cd4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb4 = BIGER_ANGLE - (90 - angle_ca4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex4 = cx4 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ey4 = cy4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx4 = cx4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy4 = cy4 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx4 = cx4 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by4 = cy4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx4 = bx4 + (cx4 - bx4) * 0.3, ffy4 = by4 + (cy4 - by4) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax4,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay4,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by4,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy4,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy4,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex4,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey4,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy4;
[0m[31m^^^^^^^^^^^^^^^[0m
					ffx = ffx4, ffy = ffy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx5 = ax4 + bx4 - cx4, cy5 = ay4 + by4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx5 = ax4, dy5 = ay4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex5 = bx4, ey5 = by4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd5 = Math.atan((cy5 - dy5) / (cx5 - dx5)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce5 = BIGER_ANGLE - angle_cd5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf5 = BIGER_ANGLE - (90 - angle_ce5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca5 = BIGER_ANGLE - (90 - angle_cd5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb5 = BIGER_ANGLE - (90 - angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax5 = cx5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay5 = cy5 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx5 = cx5 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by5 = cy5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx5 = cx5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy5 = cy5 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx5 = bx5 + (cx5 - bx5) * 0.3, ffy5 = by5 + (cy5 - by5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ab_x5 = ax5 + bx5 - cx5, c_mirror_ab_y5 = ay5 + by5 - cy5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax5 = ax5 + (c_mirror_ab_x5 - ax5) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay5 = ay5 + (c_mirror_ab_y5 - ay5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx5 = bx5 + (c_mirror_ab_x5 - bx5) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						bby5 = by5 + (c_mirror_ab_y5 - by5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax5,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay5,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by5,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy5,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy5,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex5,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey5,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy5;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax5, aay = aay5, bbx = bbx5, bby = bby5, ffx = ffx5, ffy = ffy5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, bbx, by, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, bbx, aay, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx6 = ex4 + fx4 - cx4, cy6 = ey4 + fy4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx6 = fx4, dy6 = fy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex6 = ex4, ey6 = ey4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd6 = Math.atan((cy6 - dy6) / (dx6 - cx6)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce6 = Math.atan((cy6 - ey6) / (cx6 - ex6)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca6 = BIGER_ANGLE - angle_cd6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf6 = BIGER_ANGLE - angle_ce6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb6 = BIGER_ANGLE - (90 - angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax6 = cx6 + SHORT_SIDE_LENGTH * getCosByAngle(angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay6 = cy6 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx6 = cx6 - SHORT_SIDE_LENGTH * getSinByAngle(angle_cb6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by6 = cy6 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx6 = cx6 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cf6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy6 = cy6 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx6 = bx6 + (cx6 - bx6) * 0.3, ffy6 = by6 + (cy6 - by6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_x6 = ax6 + dx6 - cx6, c_mirror_ad_y6 = ay6 + dy6 - cy6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax6 = ax6 + (c_mirror_ad_x6 - ax6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay6 = ay6 + (c_mirror_ad_y6 - ay6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx6 = dx6 + (c_mirror_ad_x6 - dx6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy6 = dy6 + (c_mirror_ad_y6 - dy6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_x6 = ex6 + fx6 - cx6, c_mirror_ef_y6 = ey6 + fy6 - cy6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex6 = ex6 + (c_mirror_ef_x6 - ex6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey6 = ey6 + (c_mirror_ef_y6 - ey6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fffx6 = fx6 + (c_mirror_ef_x6 - fx6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fffy6 = fy6 + (c_mirror_ef_y6 - fy6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax6,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay6,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by6,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy6,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy6,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex6,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey6,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy6;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax6,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						fffx = fffx6,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						fffy = fffy6;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, ddx, aay, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, eex, fffx, eey, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, fffx, fy, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx3 = dx4 + ex4 - cx4, cy3 = dy4 + ey4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx3 = dx4, fy3 = dy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex3 = ex4, ey3 = ey4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf3 = Math.atan((cy3 - fy3) / (fx3 - cx3)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce3 = BIGER_ANGLE - angle_cf3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd3 = 180 - BIGER_ANGLE - angle_ce3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca3 = BIGER_ANGLE - angle_cd3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb3 = BIGER_ANGLE - (90 - angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax3 = cx3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay3 = cy3 - SHORT_SIDE_LENGTH * getSinByAngle(angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx3 = cx3 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by3 = cy3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cb3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx3 = cx3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dy3 = cy3 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx3 = bx3 + (cx3 - bx3) * 0.3, ffy3 = by3 + (cy3 - by3) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax3,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay3,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by3,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy3,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy3,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex3,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey3,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy3;
[0m[31m^^^^^^^^^^^^^^^[0m
					ffx = ffx3, ffy = ffy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx2 = ax3 + dx3 - cx3, cy2 = ay3 + dy3 - cy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx2 = ax3, fy2 = ay3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex2 = dx3, ey2 = dy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf2 = Math.atan((cy2 - fy2) / (fx2 - cx2)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce2 = BIGER_ANGLE - angle_cf2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd2 = 180 - BIGER_ANGLE - angle_ce2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca2 = BIGER_ANGLE - angle_cd2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb2 = BIGER_ANGLE - (90 - angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax2 = cx2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay2 = cy2 - SHORT_SIDE_LENGTH * getSinByAngle(angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx2 = cx2 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by2 = cy2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cb2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx2 = cx2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dy2 = cy2 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx2 = bx2 + (cx2 - bx2) * 0.3, ffy2 = by2 + (cy2 - by2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ab_x2 = ax2 + bx2 - cx2, c_mirror_ab_y2 = ay2 + by2 - cy2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax2 = ax2 + (c_mirror_ab_x2 - ax2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay2 = ay2 + (c_mirror_ab_y2 - ay2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx2 = bx2 + (c_mirror_ab_x2 - bx2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						bby2 = by2 + (c_mirror_ab_y2 - by2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_de_x2 = dx2 + ex2 - cx2, c_mirror_de_y2 = dy2 + ey2 - cy2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx2 = dx2 + (c_mirror_de_x2 - dx2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy2 = dy2 + (c_mirror_de_y2 - dy2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex2 = ex2 + (c_mirror_de_x2 - ex2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey2 = ey2 + (c_mirror_de_y2 - ey2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax2,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay2,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by2,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy2,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy2,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex2,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey2,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy2;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax2,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bbx = bbx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bby = bby2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy2;
[0m[31m^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, bbx, by, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, bbx, aay, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ddx, eex, ddy, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 36.5 / 25, SIDE_LENGTH * 100.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 125.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 84.0 / 25, SIDE_LENGTH * 132.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 194.0 / 25, SIDE_LENGTH * 132.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 132.5 / 25, SIDE_LENGTH * 140.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 175.0 / 25, 83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 147.5 / 25, 166.9);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 115.0 / 25, 193.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[8], SIDE_LENGTH * 162.0 / 25, SIDE_LENGTH * 40.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[9], SIDE_LENGTH * 97.5 / 25, SIDE_LENGTH * 66.0 / 25, 206.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[10], SIDE_LENGTH * 140.0 / 25, SIDE_LENGTH * 82.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[11], SIDE_LENGTH * 122.5 / 25, SIDE_LENGTH * 15.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[12], SIDE_LENGTH * 111.0 / 25, SIDE_LENGTH * 127.5 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[13], SIDE_LENGTH * 110.0 / 25, SIDE_LENGTH * 195.0 / 25, 263.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[14], SIDE_LENGTH * 80.0 / 25, SIDE_LENGTH * 160.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[15], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 150.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[16], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 80.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[17], SIDE_LENGTH * 157.5 / 25, SIDE_LENGTH * 91.0 / 25, 26.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[18], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 71.0 / 25, 109.65);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[19], SIDE_LENGTH * 145.0 / 25, SIDE_LENGTH * 30.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[20], SIDE_LENGTH * 167.5 / 25, SIDE_LENGTH * 71.0 / 25, 122.75);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[21], SIDE_LENGTH * 69.0 / 25, SIDE_LENGTH * 65.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[22], SIDE_LENGTH * 218.0 / 25, SIDE_LENGTH * 92.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[23], SIDE_LENGTH * 105.0 / 25, SIDE_LENGTH * 92.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 2022-11-18
[0m[31m^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 36.5 / 25, SIDE_LENGTH * 100.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 125.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 70.0 / 25, SIDE_LENGTH * 120.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 180.0 / 25, SIDE_LENGTH * 120.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 120.0 / 25, SIDE_LENGTH * 128.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 82.5 / 25, SIDE_LENGTH * 188.0 / 25, 83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 147.5 / 25, 166.9);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 110.0 / 25, 193.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 139.0 / 25, SIDE_LENGTH * 44.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 97.5 / 25, SIDE_LENGTH * 58.0 / 25, 206.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 125.0 / 25, SIDE_LENGTH * 70.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 114.0 / 25, SIDE_LENGTH * 27.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[12], SIDE_LENGTH * 102.0 / 25, SIDE_LENGTH * 138.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						infos[13],
[0m[31m^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 102.0 / 25,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 183.0 / 25,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						263.45,
[0m[31m^^^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.setSvgTextInfo(infos[14], SIDE_LENGTH * 80.0 / 25, SIDE_LENGTH * 160.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[15], SIDE_LENGTH * 126.0 / 25, SIDE_LENGTH * 154.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[16], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 78.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[17], SIDE_LENGTH * 137.0 / 25, SIDE_LENGTH * 95.0 / 25, 26.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[18], SIDE_LENGTH * 110.0 / 25, SIDE_LENGTH * 84.0 / 25, 109.65);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[19], SIDE_LENGTH * 130.0 / 25, SIDE_LENGTH * 16.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[20], SIDE_LENGTH * 160.0 / 25, SIDE_LENGTH * 80.0 / 25, 122.75);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[21], SIDE_LENGTH * 60.0 / 25, SIDE_LENGTH * 77.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[22], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 93.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[23], SIDE_LENGTH * 83.0 / 25, SIDE_LENGTH * 93.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendLine(
[0m[31m^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					x1: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					x2: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					y1: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					y2: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const line = document.createElementNS(SVG_NS, 'line') as SVGLineElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('x1', `${x1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('x2', `${x2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('y1', `${y1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('y2', `${y2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					line.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.appendChild(line);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendCircle(
[0m[31m^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					cx: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					cy: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					radius: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const circle = document.createElementNS(SVG_NS, 'circle') as SVGCircleElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('cx', `${cx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('cy', `${cy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('r', `${radius}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('fill', '#ffffff');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, cx - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, cx + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, cy - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, cy + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					circle.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.appendChild(circle);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendTspan(
[0m[31m^^^^^^^^^^^^^^^^[0m
					text: SVGTextElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					CHAR: string,
[0m[31m^^^^^^^^^^^^^^^^^^[0m
					dx: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					dy: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const tspan = document.createElementNS(SVG_NS, 'tspan') as SVGTSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('dx', `${dx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('dy', `${dy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						'style',
[0m[31m^^^^^^^^^^^^^^[0m
						STYLE.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							'dominant-baseline:middle;text-anchor:middle;',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CHAR === '6' || CHAR === '9' ? 'text-decoration:underline;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CHAR === 'ü' ? 'opacity:0.85;font-size:0.9em;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						),
[0m[31m^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					tspan.innerHTML = CHAR;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.appendChild(tspan);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendText(
[0m[31m^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					CONTENT: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					x: number,
[0m[31m^^^^^^^^^^^^^^^[0m
					y: number,
[0m[31m^^^^^^^^^^^^^^^[0m
					rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const g = document.createElementNS(SVG_NS, 'g') as SVGGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('style', 'display:flex;justify-content:center;align-items:center;overflow:hidden;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (rotate) {
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						g.setAttribute('style', `transform: rotate(${rotate}deg);transform-origin: 50% 50%;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					svg.appendChild(g);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const text = document.createElementNS(SVG_NS, 'text') as SVGTextElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('style', 'dominant-baseline:middle;text-anchor:middle;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('dx', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('dy', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (CONTENT.indexOf('<') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.innerHTML = CONTENT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					} else {
[0m[31m^^^^^^^^^^^^^[0m
						CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendTspan(text, '', char, 0, 0, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					g.appendChild(text);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						// left/top/right/bottom/width/height
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const clientRects = text.getClientRects();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const { left: x1, right: x2, top: y1, bottom: y2 } =
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							(clientRects.length ? clientRects.item(0) : text.getBoundingClientRect()) as DOMRect;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					text.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				setSvgTextInfo(info: SvgTextInfo, x: number, y: number, rotate: RotateType) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					info.x = x;
[0m[31m^^^^^^^^^^^^^^^^[0m
					info.y = y;
[0m[31m^^^^^^^^^^^^^^^^[0m
					info.rotate = rotate;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
	}
[0m[31m^^[0m
}
[0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m6[0m:[0m[33m0[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
	export namespace sonya {
        [0m[31m^^^^^^^^^^^^^^^^^[0m
		export namespace cc {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export enum DiceKind {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>None</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>无</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>無</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				none = 0,
[0m[31m^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>4-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>4面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>4面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				four = 1,
[0m[31m^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>6-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>6面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>6面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				six = 2,
[0m[31m^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>8-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>8面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>8面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				eight = 4,
[0m[31m^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>12-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>12面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>12面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twelve = 8,
[0m[31m^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>20-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>20面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>20面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twenty = 16,
[0m[31m^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>24-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>24面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>24面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twentyFour = 32,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Count of Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型数量</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型數量</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export const DiceKindCount = 8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Default Value of Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型默认值</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型默認值</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export const DefaultDiceKind = 63;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generation Parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export interface DiceParameter {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>id</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>id</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				id: string;
[0m[31m^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>骰子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				diceKind: DiceKind;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Side Length</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>边长</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>邊長</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				sideLength: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Contents of all sides</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>各面内容</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>各面內容</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				contents: Array<I18nable | string>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Outside Boundary Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>外边界线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>外邊界線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				outerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Interior Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>内部线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>內部線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				innerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Text Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>文本样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>文字樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				textStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Other parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>其它参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>其它參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				options: object;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			type ViewBoxType = { left: number; right: number; top: number; bottom: number };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			type RotateType = 'auto' | 'auto-reverse' | number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			type SvgTextInfo = { content: I18nable | string; x: number; y: number; rotate: RotateType };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generation Result</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成结果</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成結果</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export interface DiceResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Svg Element Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>svg元素编号</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>svg元素編號</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				id: string;
[0m[31m^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Svg Element</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>svg元素</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>svg元素</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				svg: SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>css</en>
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>样式表</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>樣式表</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				css: string;
[0m[31m^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generator</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成器</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成器</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export class DiceGenerator {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Generate dice in batch</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>批量生成骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>批量生成骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @param createParameters
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <en>Arrays: creating parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>数组：创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>數組：創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @returns
[0m[31m^^^^^^^^^^^^^^^[0m
				 * <en>Generate results in array format, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成结果，为数组格式，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成結果，為數組格式，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				public batchCreate(createParameters: Array<DiceParameter>): Array<DiceResult> {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					createParameters.forEach((createParameter, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (createParameter.id.length === 0) createParameter.id = `svg_index`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					});
[0m[31m^^^^^^^^[0m

					return createParameters.map((createParameter) => this.create(createParameter));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Generate a single dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成单个骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成單個骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @param param0
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
				 * <en>Deconstructed creation parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>已解构的创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>已解構的創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @returns
[0m[31m^^^^^^^^^^^^^^^[0m
				 * <en>Generate results, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成结果，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成結果，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				public create({
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					id,
[0m[31m^^^^^^^^[0m
					diceKind,
[0m[31m^^^^^^^^^^^^^^[0m
					sideLength: SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					contents: CONTENTS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerLineStyle: OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					innerLineStyle: INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					textStyle: TEXT_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					options: OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
				}: DiceParameter): DiceResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (id.length === 0) id = 'svg_0';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let FIXED_SIDE_LENGTH = SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let nested = false;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							FIXED_SIDE_LENGTH = 25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							nested = true;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const svg = this.createSvg();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('id', id);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const viewBox = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						left: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						right: 0,
[0m[31m^^^^^^^^^^^^^^^[0m
						top: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						bottom: 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
					const infos = [] as Array<SvgTextInfo>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								for (let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}
[0m[31m^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						// case DiceKind.six:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.eight:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twelve:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twenty:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const mmToPxScale = (new DPIHelper()).getMmToPxScale();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfFourSidedDice(infos, FIXED_SIDE_LENGTH, CONTENTS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.six:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfSixSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.eight:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfEightSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twelve:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwelveSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twenty:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwentySidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwentyFourSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
					infos.forEach(({ content, x, y, rotate }) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendText(svg, TEXT_STYLE, content, x, y, rotate, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					});
[0m[31m^^^^^^^^[0m

					const width = `${viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const height = `${viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('width', width);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('height', height);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// svg.setAttribute('style', `width:${width};height:${height};`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// const outerSvg = nested && (FIXED_SIDE_LENGTH !== SIDE_LENGTH) ? this.createSvg(): null;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const outerSvg = createElement('wrap'); // as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerSvg.appendChild(svg);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerSvg.setAttribute('id', id.concat('_wrapper'));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (FIXED_SIDE_LENGTH !== SIDE_LENGTH) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const scale = SIDE_LENGTH / FIXED_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const widthOuterSvg = `${scale * viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const heightOuterSvg = `${scale * viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const transformScale = mmToPxScale * (scale - 1) / 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'style',
[0m[31m^^^^^^^^^^^^^^^[0m
							`width:${widthOuterSvg};height:${heightOuterSvg};display:inline-block;`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							'transform',
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							`translate(${viewBox.right * transformScale}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox.bottom * transformScale
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}) scale(${scale}, ${scale})`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.setAttribute('transform-origin', 'center');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const css = 'page,wrap{page-break-inside:avoid;}wrap{display:inline-flex;}';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return { id, svg: nested ? outerSvg : svg, css };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private createSvg = (): SVGElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const svg = document.createElementNS(SVG_NS, 'svg') as SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('version', '1.1');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('xmlns', SVG_NS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('xmlns:xlink', SVG_XLINKNS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return svg;
[0m[31m^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m

				drawGraphsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const HEIGHT_OF_ONE = SIDE_LENGTH * 1.732 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HEIGHT_OF_TWO = HEIGHT_OF_ONE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部横线
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH * 0.5, x2 = x1 + SIDE_LENGTH, y1 = HEIGHT_OF_ONE, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = x1 + SIDE_LENGTH, y1 += HEIGHT_OF_ONE, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部左下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH, x2 = SIDE_LENGTH * 0.5, y1 = 0, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 += SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x2 += SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 += HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部右下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH * 0.5, x2 = SIDE_LENGTH, y1 = HEIGHT_OF_ONE, y2 = HEIGHT_OF_TWO;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const EXTNED_SCALE = 0.15;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const EXTNED_LENGTH = EXTNED_SCALE * SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = EXTNED_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_Y = EXTNED_LENGTH * Math.cos(30 / 180 * Math.PI);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 外部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = SIDE_LENGTH * 0.5, y1 = HEIGHT_OF_TWO, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 -= OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH * 1 - EXTNED_LENGTH, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5, y1 = y2, y2 += HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH * 2 + OFFSET_X, y1 = y2, y2 = HEIGHT_OF_TWO - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH, y1 = y2, y2 -= 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = OFFSET_X, y1 = y2, y2 -= 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = 0, y1 = y2, y2 = HEIGHT_OF_TWO;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					CONTENTS: any[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 12 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 25.0 / 25, SIDE_LENGTH * 18.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 21.0 / 25, SIDE_LENGTH * 9.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 31.0 / 25, SIDE_LENGTH * 11.5 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 40.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 19.0 / 25, SIDE_LENGTH * 33.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 31.5 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 40.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.5 / 25, SIDE_LENGTH * 32.0 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[8], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 30.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[9], SIDE_LENGTH * 27.0 / 25, SIDE_LENGTH * 22.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[10], SIDE_LENGTH * 9.5 / 25, SIDE_LENGTH * 31.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[11], SIDE_LENGTH * 42.0 / 25, SIDE_LENGTH * 33.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (CONTENTS.join(',') === 'ˉ,ˊ,ˇ,ˋ') {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[0], SIDE_LENGTH * 24.5 / 25, SIDE_LENGTH * 22.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[1], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 13.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[2], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 15.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 44.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[4], SIDE_LENGTH * 18.5 / 25, SIDE_LENGTH * 36.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 34.0 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 44.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.0 / 25, SIDE_LENGTH * 35.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[8], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 33.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[9], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 25.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[10], SIDE_LENGTH * 8.0 / 25, SIDE_LENGTH * 35.0 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[11], SIDE_LENGTH * 42.0 / 25, SIDE_LENGTH * 36.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					} else {
[0m[31m^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[0], SIDE_LENGTH * 24.5 / 25, SIDE_LENGTH * 19.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[1], SIDE_LENGTH * 21.0 / 25, SIDE_LENGTH * 10.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[2], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 12.5 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 41.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[4], SIDE_LENGTH * 18.5 / 25, SIDE_LENGTH * 34.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 32.5 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 41.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.5 / 25, SIDE_LENGTH * 32.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[8], SIDE_LENGTH * 19.5 / 25, SIDE_LENGTH * 31.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[9], SIDE_LENGTH * 26.5 / 25, SIDE_LENGTH * 23.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[10], SIDE_LENGTH * 8.5 / 25, SIDE_LENGTH * 32.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[11], SIDE_LENGTH * 41.0 / 25, SIDE_LENGTH * 34.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawGraphsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const SIDE_LENGTH_PX = SIDE_LENGTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const duckTongueHeightPx = SIDE_LENGTH_PX * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const duckTongueHeight = SIDE_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionScale = 0.75;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionHeightPx = SIDE_LENGTH_PX * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionHeight = SIDE_LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const offsetScale = 0.1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const offsetX = SIDE_LENGTH_PX * offsetScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionWidth = SIDE_LENGTH_PX - offsetX * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					console.log(SIDE_LENGTH, mmToPxScale, SIDE_LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const path = document.createElementNS(SVG_NS, 'path') as SVGPathElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						'd',
[0m[31m^^^^^^^^^^[0m
						`M 0, ${duckTongueHeightPx + SIDE_LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							.concat(
[0m[31m^^^^^^^^^^^^^^^[0m
								`h ${SIDE_LENGTH_PX * 2} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v -${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// `h ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${SIDE_LENGTH_PX * 2} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v -${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								' z',
[0m[31m^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let X1 = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						X2 = SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X3 = SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X4 = SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X5 = SIDE_LENGTH * 4,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X6 = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let Y1 = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						Y2 = duckTongueHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y4 = Y2 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y5 = Y4 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y7 = Y5 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y8 = Y7 + duckTongueHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y3 = Y4 - pasteRegionHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y6 = Y5 + pasteRegionHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 内部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X3, X4, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X2, X5, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.appendLine(svg, INNER_LINE_STYLE, X4, X5, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X3, X6, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.left = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.top = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.right = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = SIDE_LENGTH * 3 + SIDE_LENGTH * duckTongueScale * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				private drawTextsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// // font-size: 5mm;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 61.0 / 25, SIDE_LENGTH * 75.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 113.5 / 25, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 36.0 / 25, SIDE_LENGTH * 52.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 61.0 / 25, SIDE_LENGTH * 52.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 72.5 / 25, SIDE_LENGTH * 40.0 / 25, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 36.0 / 25, SIDE_LENGTH * 77.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 77.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 62.5 / 25, SIDE_LENGTH * 100.0 / 25, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 52.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 62.5 / 25, SIDE_LENGTH * 52.5 / 25, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 77.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private drawGraphsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const HEIGHT_OF_ONE = SIDE_LENGTH * 1.732 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HEIGHT_OF_TWO = HEIGHT_OF_ONE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const BOTTOM = HEIGHT_OF_ONE * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部横线
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						0,
[0m[31m^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					// 内部左下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						BOTTOM,
[0m[31m^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					// 内部右下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						0,
[0m[31m^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					const EXTNED_SCALE = 0.15;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const EXTNED_LENGTH = EXTNED_SCALE * SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = EXTNED_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_Y = EXTNED_LENGTH * Math.cos(30 / 180 * Math.PI);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 外部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = OFFSET_X, y1 = HEIGHT_OF_ONE, y2 = HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH - OFFSET_X, y1 = y2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH, y1 = y2, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5 - OFFSET_X, y1 = y2, y2 = HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH + EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2,
[0m[31m^^^^^^^^^^^^^[0m
						x2 += SIDE_LENGTH * 0.5 - EXTNED_LENGTH + OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 = y2,
[0m[31m^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2,
[0m[31m^^^^^^^^^^^^^[0m
						x2 += EXTNED_LENGTH - SIDE_LENGTH * 0.5 - OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 = y2,
[0m[31m^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH * 0.5, y1 = y2, y2 -= HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH - OFFSET_X * 2, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X + SIDE_LENGTH * 0.5, y1 = y2, y2 -= OFFSET_Y + HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.right = SIDE_LENGTH * 3.5 + EXTNED_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = BOTTOM;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private drawTextsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 8 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 78.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 25.5 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 50.0 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 28.5 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 39.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 41.5 / 25, SIDE_LENGTH * 17.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 78.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 25.5 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 50.0 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 28.5 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 39.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 41.5 / 25, SIDE_LENGTH * 17.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawGraphsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const QUARTER_SIDE_LENGTH = SIDE_LENGTH * 0.25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const RADIUS = SIDE_LENGTH * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const ANGLE18 = Math.PI * 18 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE36 = Math.PI * 36 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE54 = Math.PI * 54 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE72 = Math.PI * 72 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18 = Math.sin(ANGLE18);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36 = Math.sin(ANGLE36);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54 = Math.sin(ANGLE54);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72 = Math.sin(ANGLE72);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const HALF_SIDE_LENGTH = SIDE_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const LONG_SIDE_LENGTH = SIDE_LENGTH * 0.5 / SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HALF_LONG_SIDE_LENGTH = LONG_SIDE_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN72_MULTIPLY_LONG_SIDE_LENGTH = LONG_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SECOND_GROUP_OFFSET = SIDE_LENGTH * 2 + LONG_SIDE_LENGTH +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const TOP = SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					for (let groupIndex = 0; groupIndex < 2; ++groupIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LEFT = (groupIndex === 0 ? 0 : SECOND_GROUP_OFFSET) +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let A1x = 0, A1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A2x = 0, A2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A3x = 0, A3y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A4x = 0, A4y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A5x = 0, A5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B1x = 0, B1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B2x = 0, B2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B5x = 0, B5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C1x = 0, C1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C2x = 0, C2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C5x = 0, C5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D1x = 0, D1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D2x = 0, D2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D5x = 0, D5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E1x = 0, E1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E2x = 0, E2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E5x = 0, E5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F1x = 0, F1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F2x = 0, F2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F5x = 0, F5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A1x = LEFT + SIN18 * (SIDE_LENGTH + SIN18_MULTIPLY_SIDE_LENGTH * 2) +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2x = A1x + SIN54_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5x = A1x - SIN54_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3x = A2x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4x = A5x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B1x = A5x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B2x = A5x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5x = A1x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							C1x = A2x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C5x = A2x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C2x = A1x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D1x = A3x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D2x = A3x + HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5x = A2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E1x = A4x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E2x = A4x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5x = A3x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1x = A4x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F5x = A4x - HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F2x = A5x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							A1y = TOP + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2y = A1y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							A3y = A2y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B1y = TOP;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B2y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B5y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C1y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C5y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C2y = B5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							D1y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							D2y = A3y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E2y = A4y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5y = E2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E1y = E2y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1y = A4y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F2y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F5y = D2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							A1x = LEFT + LONG_SIDE_LENGTH + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2x = A1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3x = A1x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5x = A1x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4x = A5x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B1x = A5x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B2x = A1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5x = A5x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							C2x = A2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C1x = A1x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C5x = A1x + HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D2x = A3x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D1x = D2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5x = D1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E2x = A3x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E1x = E2x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5x = E1x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1x = A5x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F2x = A5x - HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F5x = A4x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							A1y = TOP + SIN72_MULTIPLY_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2y = A1y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3y = A1y + SIN72_MULTIPLY_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							A5y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B1y = TOP;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B2y = A5y - SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5y = B2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C1y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C2y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C5y = A1y - SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D5y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							D1y = D5y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D2y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E1y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E2y = D5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E5y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							F1y = C1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F2y = C5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F5y = A4y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const LINE_STYLE = groupIndex === 0 ? INNER_LINE_STYLE : OUTER_LINE_STYLE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, A1x, A2x, A1y, A2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, A3x, A2y, A3y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, A4x, A3y, A4y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, A5x, A4y, A5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, A1x, A5y, A1y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, A1x, B2x, A1y, B2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A1x, C5x, A1y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, C2x, A2y, C2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, D5x, A2y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, D2x, A3y, D2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, E5x, A3y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, E2x, A4y, E2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, F5x, A4y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, F2x, A5y, F2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, B5x, A5y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, B1x, B2x, B1y, B2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, B1x, B5x, B1y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, C1x, C2x, C1y, C2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, C1x, C5x, C1y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, D1x, D2x, D1y, D2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, D1x, D5x, D1y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, E1x, E2x, E1y, E2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, E1x, E5x, E1y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, F1x, F2x, F1y, F2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, F1x, F5x, F1y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let B6x = 0, B6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B7x = 0, B7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B8x = 0, B8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B9x = 0, B9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let C6x = 0, C6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C7x = 0, C7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C8x = 0, C8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C9x = 0, C9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let D6x = 0, D6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D7x = 0, D7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D8x = 0, D8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D9x = 0, D9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let E6x = 0, E6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E7x = 0, E7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E8x = 0, E8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E9x = 0, E9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let F6x = 0, F6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F7x = 0, F7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F8x = 0, F8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F9x = 0, F9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN18_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN36_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN54_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN72_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B6x = B5x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B6y = B5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B7x = B1x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C8x = C1x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B7y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C8y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B8x = B1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B9x = B2x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C6x = C5x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C7x = C1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B8y = B1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B9y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C6y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C7y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C9x = C2x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C9y = C2y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// 无D6和D7
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							D8x = D1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D8y = D1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D9x = D2x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D9y = D2y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E6x = E5x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E6y = E5y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E7x = E1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E8x = E1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E7y = E1y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E8y = E7y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E9x = E2x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E9y = E2y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F6x = F5x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F6y = F5y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F7x = F1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F7y = F1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F8x = F1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F8y = F1y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F9x = F2x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F9y = F2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							// } else {
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							//   B6x = B5x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B6y = B5y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   B7x = B1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B8x = B1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B7y = B1y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B8y = B7y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   B9x = B2x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B9y = B2y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C6x = C5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C6y = C5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C7x = C1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C7y = C1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C8x = C1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C8y = C1y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C9x = C2x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C9y = C2y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D6x = D5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D6y = D5y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D7x = D1x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D7y = D1y - 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D8x = D1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D8y = D1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D9x = D2x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D9y = D2y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E6x = E5x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E6y = E5y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E7x = E1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E7y = E1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E8x = E1x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E8y = E1y + 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E9x = E2x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E9y = E2y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   // F6x = F5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   // F6y = F5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   // F7x = F1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   // F7y = F1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   F8x = F1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   F8y = F1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   F9x = F2x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   F9y = F2y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B5x, B6x, B5y, B6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B1x, B7x, B1y, B7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B1x, B8x, B1y, B8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B2x, B9x, B2y, B9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, C5x, C6x, C5y, C6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C1x, C7x, C1y, C7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C1x, C8x, C1y, C8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C2x, C9x, C2y, C9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D1x, D8x, D1y, D8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, D2x, D9x, D2y, D9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, E5x, E6x, E5y, E6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E1x, E7x, E1y, E7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E1x, E8x, E1y, E8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E2x, E9x, E2y, E9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F5x, F6x, F5y, F6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F1x, F7x, F1y, F7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F1x, F8x, F1y, F8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F2x, F9x, F2y, F9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, B6x, B7x, B6y, B7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B8x, B9x, B8y, B9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C6x, C7x, C6y, C7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C8x, C9x, C8y, C9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D6x, D7x, D6y, D7y, viewBox); //
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D8x, D9x, D8y, D9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E6x, E7x, E6y, E7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E8x, E9x, E8y, E9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F6x, F7x, F6y, F7y, viewBox); //
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F8x, F9x, F8y, F9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, B2x, C5x, B2y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C2x, D5x, C2y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, D2x, E5x, D2y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E2x, F5x, E2y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F2x, B5x, F2y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if ((OPTIONS as unknown as { withHole: boolean }).withHole) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC1x = (A1x + A2x + A3x + A4x + A5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC1y = (A1y + A2y + A3y + A4y + A5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC2x = (A1x + A5x + B1x + B2x + B5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC2y = (A1y + A5y + B1y + B2y + B5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC3x = (A1x + A2x + C1x + C2x + C5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC3y = (A1y + A2y + C1y + C2y + C5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC4x = (A2x + A3x + D1x + D2x + D5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC4y = (A2y + A3y + D1y + D2y + D5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC5x = (A3x + A4x + E1x + E2x + E5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC5y = (A3y + A4y + E1y + E2y + E5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC6x = (A4x + A5x + F1x + F2x + F5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC6y = (A4y + A5y + F1y + F2y + F5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendCircle(svg, INNER_LINE_STYLE, CC1x, CC1y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC2x, CC2y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC3x, CC3y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC4x, CC4y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC5x, CC5y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC6x, CC6y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 12 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 58.5 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 130.0 / 25, SIDE_LENGTH * 90.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 170.0 / 25, SIDE_LENGTH * 90.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 118.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 185.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 150.5 / 25, SIDE_LENGTH * 25.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 157.5 / 25, SIDE_LENGTH * 30.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 125.0 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 190.0 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 136.5 / 25, SIDE_LENGTH * 90.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 177.0 / 25, SIDE_LENGTH * 90.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 52.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				drawGraphsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const pasteRegionScale = 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegion = SIDE_LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionPx = pasteRegion * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const ANGLE60 = Math.PI * 60 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN60 = Math.sin(ANGLE60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const COS60 = Math.cos(ANGLE60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const OneX = SIDE_LENGTH * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OneY = SIDE_LENGTH * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionShortBiasX = pasteRegion * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasY = pasteRegion * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionLongBias = SIDE_LENGTH * (1 - pasteRegionScale);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasX = pasteRegionLongBias * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasY = pasteRegionLongBias * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const TwoY = OneY * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ThreeY = OneY * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let FIVE_SIDE = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = pasteRegionLongBiasX + pasteRegion, x2 = x1 + FIVE_SIDE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x1 - OneX, x2 = x1 + FIVE_SIDE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 += OneY, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 -= OneX, x2 = x1 - OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = TwoY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					for (let i = 0; i < 5; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					x1 = pasteRegionShortBiasX, x2 = x1 + OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = TwoY, y2 = ThreeY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 += OneX, x2 += OneX * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = y1 + TwoY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 -= OneX;
[0m[31m^^^^^^^^^^^^^^^^[0m
					y1 = 0;
[0m[31m^^^^^^^^^^^^[0m
					for (let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					x1 += SIDE_LENGTH, x2 += OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y2 = TwoY;
[0m[31m^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 += SIDE_LENGTH, x2 += OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y2 = OneY;
[0m[31m^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const OneXPx = OneX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OneYPx = OneY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasXPx = pasteRegionShortBiasX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasYPx = pasteRegionShortBiasY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionLongBiasXPx = pasteRegionLongBiasX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasYPx = pasteRegionLongBiasY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const path = document.createElementNS(SVG_NS, 'path') as SVGPathElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						'd',
[0m[31m^^^^^^^^^^[0m
						`M 0, ${OneYPx + pasteRegionLongBiasYPx} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							.concat(
[0m[31m^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx + OneXPx * 2}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									pasteRegionShortBiasYPx + OneYPx * 2
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}`,
[0m[31m^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								' z',
[0m[31m^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.right = SIDE_LENGTH * 5 + OneX + pasteRegion;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = OneY * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				drawTextsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 20 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 52.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 77.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 102.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 127.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 15.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 40.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 65.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 90.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 90.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[12], SIDE_LENGTH * 65.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[13], SIDE_LENGTH * 40.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[14], SIDE_LENGTH * 15.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[15], SIDE_LENGTH * 127.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[16], SIDE_LENGTH * 102.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[17], SIDE_LENGTH * 77.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[18], SIDE_LENGTH * 52.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[19], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				getSinByAngle(angle) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return Math.sin(angle * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				getCosByAngle(angle) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return Math.cos(angle * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				// fixContent(content)  { return content.toString().replace(/([69])/gi, '<font style="text-decoration:underline;">$1</font>'); }
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				drawGraphsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const ANGLE = 48.275;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const { getSinByAngle, getCosByAngle } = this;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const TEXT_OFFSET_SCALE = 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const BIGER_ANGLE = 180 - ANGLE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SMALL_ANGLE_COS = Math.cos(ANGLE * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HALF_LONG_SIDE_LENGTH = 50 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SHORT_SIDE_LENGTH = HALF_LONG_SIDE_LENGTH / SMALL_ANGLE_COS;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let ax = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						ay = 0,
[0m[31m^^^^^^^^^^^^^[0m
						bx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						by = 0,
[0m[31m^^^^^^^^^^^^^[0m
						cx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						cy = 0,
[0m[31m^^^^^^^^^^^^^[0m
						dx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						dy = 0,
[0m[31m^^^^^^^^^^^^^[0m
						ex = 0,
[0m[31m^^^^^^^^^^^^^[0m
						ey = 0,
[0m[31m^^^^^^^^^^^^^[0m
						fx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						fy = 0;
[0m[31m^^^^^^^^^^^^^[0m
					let aax = 0,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						aay = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						bbx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						bby = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ddx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ddy = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						eex = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						eey = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ffx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ffy = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						fffx = 0,
[0m[31m^^^^^^^^^^^^^^^[0m
						fffy = 0;
[0m[31m^^^^^^^^^^^^^^^[0m

					let content_offset_top = -3, content_offset_left = -2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					content_offset_top *= 1.5, content_offset_left *= 1.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = -23.0805019730301175;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 080501973030115 1.7763568394002505e-14mm
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 08050197303012 -1.0658141036401503e-14mm
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const X_VALUE = 150;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// const ax1 = 150, ay1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax1 = X_VALUE + OFFSET_X, ay1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx1 = ax1 + 50, by1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const cx1 = ax1 + HALF_LONG_SIDE_LENGTH, cy1 = SHORT_SIDE_LENGTH * getSinByAngle(ANGLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd1 = BIGER_ANGLE - ANGLE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx1 = cx1 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						dy1 = cy1 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce1 = 180 - BIGER_ANGLE - angle_cd1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex1 = cx1 + SHORT_SIDE_LENGTH * getCosByAngle(angle_ce1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ey1 = cy1 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ce1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf1 = BIGER_ANGLE - angle_ce1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx1 = cx1 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fy1 = cy1 - SHORT_SIDE_LENGTH * getSinByAngle(angle_cf1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_x1 = X_VALUE + dx1 - cx1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_y1 = 0 + dy1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax1 = X_VALUE + (c_mirror_ad_x1 - X_VALUE) * 0.3 + OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay1 = 0 + (c_mirror_ad_y1 - 0) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx1 = 0, bby1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx1 = dx1 + (c_mirror_ad_x1 - dx1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy1 = dy1 + (c_mirror_ad_y1 - dy1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx1 = bx1 + (cx1 - bx1) * 0.3, ffy1 = 0 + (cy1 - 0) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_x1 = ex1 + fx1 - cx1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_y1 = ey1 + fy1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex1 = ex1 + (c_mirror_ef_x1 - ex1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey1 = ey1 + (c_mirror_ef_y1 - ey1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fffx1 = fx1 + (c_mirror_ef_x1 - fx1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fffy1 = fy1 + (c_mirror_ef_y1 - fy1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax1,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay1,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by1,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy1,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy1,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex1,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey1,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy1;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax1,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bbx = bbx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bby = bby1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						fffx = fffx1,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						fffy = fffy1;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, ddx, aay, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, eex, fffx, eey, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, fffx, fy, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx4 = dx1 + ex1 - cx1, cy4 = dy1 + ey1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax4 = ex1, ay4 = ey1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx4 = dx1, dy4 = dy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd4 = Math.atan((cy4 - dy4) / (cx4 - dx4)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce4 = BIGER_ANGLE - angle_cd4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf4 = BIGER_ANGLE - (90 - angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca4 = BIGER_ANGLE - (90 - angle_cd4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb4 = BIGER_ANGLE - (90 - angle_ca4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex4 = cx4 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ey4 = cy4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx4 = cx4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy4 = cy4 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx4 = cx4 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by4 = cy4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx4 = bx4 + (cx4 - bx4) * 0.3, ffy4 = by4 + (cy4 - by4) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax4,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay4,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by4,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy4,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy4,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex4,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey4,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy4;
[0m[31m^^^^^^^^^^^^^^^[0m
					ffx = ffx4, ffy = ffy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx5 = ax4 + bx4 - cx4, cy5 = ay4 + by4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx5 = ax4, dy5 = ay4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex5 = bx4, ey5 = by4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd5 = Math.atan((cy5 - dy5) / (cx5 - dx5)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce5 = BIGER_ANGLE - angle_cd5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf5 = BIGER_ANGLE - (90 - angle_ce5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca5 = BIGER_ANGLE - (90 - angle_cd5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb5 = BIGER_ANGLE - (90 - angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax5 = cx5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay5 = cy5 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx5 = cx5 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by5 = cy5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx5 = cx5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy5 = cy5 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx5 = bx5 + (cx5 - bx5) * 0.3, ffy5 = by5 + (cy5 - by5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ab_x5 = ax5 + bx5 - cx5, c_mirror_ab_y5 = ay5 + by5 - cy5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax5 = ax5 + (c_mirror_ab_x5 - ax5) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay5 = ay5 + (c_mirror_ab_y5 - ay5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx5 = bx5 + (c_mirror_ab_x5 - bx5) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						bby5 = by5 + (c_mirror_ab_y5 - by5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax5,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay5,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by5,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy5,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy5,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex5,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey5,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy5;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax5, aay = aay5, bbx = bbx5, bby = bby5, ffx = ffx5, ffy = ffy5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, bbx, by, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, bbx, aay, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx6 = ex4 + fx4 - cx4, cy6 = ey4 + fy4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx6 = fx4, dy6 = fy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex6 = ex4, ey6 = ey4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd6 = Math.atan((cy6 - dy6) / (dx6 - cx6)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce6 = Math.atan((cy6 - ey6) / (cx6 - ex6)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca6 = BIGER_ANGLE - angle_cd6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf6 = BIGER_ANGLE - angle_ce6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb6 = BIGER_ANGLE - (90 - angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax6 = cx6 + SHORT_SIDE_LENGTH * getCosByAngle(angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay6 = cy6 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx6 = cx6 - SHORT_SIDE_LENGTH * getSinByAngle(angle_cb6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by6 = cy6 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx6 = cx6 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cf6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy6 = cy6 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx6 = bx6 + (cx6 - bx6) * 0.3, ffy6 = by6 + (cy6 - by6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_x6 = ax6 + dx6 - cx6, c_mirror_ad_y6 = ay6 + dy6 - cy6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax6 = ax6 + (c_mirror_ad_x6 - ax6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay6 = ay6 + (c_mirror_ad_y6 - ay6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx6 = dx6 + (c_mirror_ad_x6 - dx6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy6 = dy6 + (c_mirror_ad_y6 - dy6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_x6 = ex6 + fx6 - cx6, c_mirror_ef_y6 = ey6 + fy6 - cy6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex6 = ex6 + (c_mirror_ef_x6 - ex6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey6 = ey6 + (c_mirror_ef_y6 - ey6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fffx6 = fx6 + (c_mirror_ef_x6 - fx6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fffy6 = fy6 + (c_mirror_ef_y6 - fy6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax6,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay6,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by6,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy6,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy6,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex6,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey6,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy6;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax6,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						fffx = fffx6,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						fffy = fffy6;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, ddx, aay, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, eex, fffx, eey, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, fffx, fy, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx3 = dx4 + ex4 - cx4, cy3 = dy4 + ey4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx3 = dx4, fy3 = dy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex3 = ex4, ey3 = ey4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf3 = Math.atan((cy3 - fy3) / (fx3 - cx3)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce3 = BIGER_ANGLE - angle_cf3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd3 = 180 - BIGER_ANGLE - angle_ce3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca3 = BIGER_ANGLE - angle_cd3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb3 = BIGER_ANGLE - (90 - angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax3 = cx3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay3 = cy3 - SHORT_SIDE_LENGTH * getSinByAngle(angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx3 = cx3 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by3 = cy3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cb3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx3 = cx3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dy3 = cy3 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx3 = bx3 + (cx3 - bx3) * 0.3, ffy3 = by3 + (cy3 - by3) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax3,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay3,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by3,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy3,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy3,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex3,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey3,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy3;
[0m[31m^^^^^^^^^^^^^^^[0m
					ffx = ffx3, ffy = ffy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx2 = ax3 + dx3 - cx3, cy2 = ay3 + dy3 - cy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx2 = ax3, fy2 = ay3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex2 = dx3, ey2 = dy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf2 = Math.atan((cy2 - fy2) / (fx2 - cx2)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce2 = BIGER_ANGLE - angle_cf2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd2 = 180 - BIGER_ANGLE - angle_ce2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca2 = BIGER_ANGLE - angle_cd2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb2 = BIGER_ANGLE - (90 - angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax2 = cx2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay2 = cy2 - SHORT_SIDE_LENGTH * getSinByAngle(angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx2 = cx2 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by2 = cy2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cb2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx2 = cx2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dy2 = cy2 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx2 = bx2 + (cx2 - bx2) * 0.3, ffy2 = by2 + (cy2 - by2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ab_x2 = ax2 + bx2 - cx2, c_mirror_ab_y2 = ay2 + by2 - cy2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax2 = ax2 + (c_mirror_ab_x2 - ax2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay2 = ay2 + (c_mirror_ab_y2 - ay2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx2 = bx2 + (c_mirror_ab_x2 - bx2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						bby2 = by2 + (c_mirror_ab_y2 - by2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_de_x2 = dx2 + ex2 - cx2, c_mirror_de_y2 = dy2 + ey2 - cy2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx2 = dx2 + (c_mirror_de_x2 - dx2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy2 = dy2 + (c_mirror_de_y2 - dy2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex2 = ex2 + (c_mirror_de_x2 - ex2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey2 = ey2 + (c_mirror_de_y2 - ey2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax2,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay2,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by2,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy2,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy2,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex2,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey2,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy2;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax2,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bbx = bbx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bby = bby2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy2;
[0m[31m^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, bbx, by, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, bbx, aay, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ddx, eex, ddy, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 36.5 / 25, SIDE_LENGTH * 100.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 125.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 84.0 / 25, SIDE_LENGTH * 132.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 194.0 / 25, SIDE_LENGTH * 132.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 132.5 / 25, SIDE_LENGTH * 140.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 175.0 / 25, 83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 147.5 / 25, 166.9);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 115.0 / 25, 193.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[8], SIDE_LENGTH * 162.0 / 25, SIDE_LENGTH * 40.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[9], SIDE_LENGTH * 97.5 / 25, SIDE_LENGTH * 66.0 / 25, 206.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[10], SIDE_LENGTH * 140.0 / 25, SIDE_LENGTH * 82.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[11], SIDE_LENGTH * 122.5 / 25, SIDE_LENGTH * 15.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[12], SIDE_LENGTH * 111.0 / 25, SIDE_LENGTH * 127.5 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[13], SIDE_LENGTH * 110.0 / 25, SIDE_LENGTH * 195.0 / 25, 263.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[14], SIDE_LENGTH * 80.0 / 25, SIDE_LENGTH * 160.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[15], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 150.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[16], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 80.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[17], SIDE_LENGTH * 157.5 / 25, SIDE_LENGTH * 91.0 / 25, 26.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[18], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 71.0 / 25, 109.65);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[19], SIDE_LENGTH * 145.0 / 25, SIDE_LENGTH * 30.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[20], SIDE_LENGTH * 167.5 / 25, SIDE_LENGTH * 71.0 / 25, 122.75);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[21], SIDE_LENGTH * 69.0 / 25, SIDE_LENGTH * 65.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[22], SIDE_LENGTH * 218.0 / 25, SIDE_LENGTH * 92.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[23], SIDE_LENGTH * 105.0 / 25, SIDE_LENGTH * 92.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 2022-11-18
[0m[31m^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 36.5 / 25, SIDE_LENGTH * 100.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 125.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 70.0 / 25, SIDE_LENGTH * 120.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 180.0 / 25, SIDE_LENGTH * 120.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 120.0 / 25, SIDE_LENGTH * 128.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 82.5 / 25, SIDE_LENGTH * 188.0 / 25, 83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 147.5 / 25, 166.9);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 110.0 / 25, 193.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 139.0 / 25, SIDE_LENGTH * 44.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 97.5 / 25, SIDE_LENGTH * 58.0 / 25, 206.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 125.0 / 25, SIDE_LENGTH * 70.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 114.0 / 25, SIDE_LENGTH * 27.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[12], SIDE_LENGTH * 102.0 / 25, SIDE_LENGTH * 138.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						infos[13],
[0m[31m^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 102.0 / 25,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 183.0 / 25,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						263.45,
[0m[31m^^^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.setSvgTextInfo(infos[14], SIDE_LENGTH * 80.0 / 25, SIDE_LENGTH * 160.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[15], SIDE_LENGTH * 126.0 / 25, SIDE_LENGTH * 154.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[16], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 78.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[17], SIDE_LENGTH * 137.0 / 25, SIDE_LENGTH * 95.0 / 25, 26.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[18], SIDE_LENGTH * 110.0 / 25, SIDE_LENGTH * 84.0 / 25, 109.65);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[19], SIDE_LENGTH * 130.0 / 25, SIDE_LENGTH * 16.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[20], SIDE_LENGTH * 160.0 / 25, SIDE_LENGTH * 80.0 / 25, 122.75);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[21], SIDE_LENGTH * 60.0 / 25, SIDE_LENGTH * 77.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[22], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 93.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[23], SIDE_LENGTH * 83.0 / 25, SIDE_LENGTH * 93.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendLine(
[0m[31m^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					x1: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					x2: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					y1: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					y2: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const line = document.createElementNS(SVG_NS, 'line') as SVGLineElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('x1', `${x1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('x2', `${x2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('y1', `${y1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('y2', `${y2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					line.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.appendChild(line);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendCircle(
[0m[31m^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					cx: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					cy: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					radius: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const circle = document.createElementNS(SVG_NS, 'circle') as SVGCircleElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('cx', `${cx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('cy', `${cy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('r', `${radius}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('fill', '#ffffff');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, cx - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, cx + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, cy - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, cy + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					circle.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.appendChild(circle);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendTspan(
[0m[31m^^^^^^^^^^^^^^^^[0m
					text: SVGTextElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					CHAR: string,
[0m[31m^^^^^^^^^^^^^^^^^^[0m
					dx: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					dy: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const tspan = document.createElementNS(SVG_NS, 'tspan') as SVGTSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('dx', `${dx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('dy', `${dy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						'style',
[0m[31m^^^^^^^^^^^^^^[0m
						STYLE.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							'dominant-baseline:middle;text-anchor:middle;',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CHAR === '6' || CHAR === '9' ? 'text-decoration:underline;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CHAR === 'ü' ? 'opacity:0.85;font-size:0.9em;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						),
[0m[31m^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					tspan.innerHTML = CHAR;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.appendChild(tspan);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendText(
[0m[31m^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					CONTENT: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					x: number,
[0m[31m^^^^^^^^^^^^^^^[0m
					y: number,
[0m[31m^^^^^^^^^^^^^^^[0m
					rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const g = document.createElementNS(SVG_NS, 'g') as SVGGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('style', 'display:flex;justify-content:center;align-items:center;overflow:hidden;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (rotate) {
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						g.setAttribute('style', `transform: rotate(${rotate}deg);transform-origin: 50% 50%;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					svg.appendChild(g);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const text = document.createElementNS(SVG_NS, 'text') as SVGTextElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('style', 'dominant-baseline:middle;text-anchor:middle;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('dx', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('dy', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (CONTENT.indexOf('<') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.innerHTML = CONTENT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					} else {
[0m[31m^^^^^^^^^^^^^[0m
						CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendTspan(text, '', char, 0, 0, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					g.appendChild(text);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						// left/top/right/bottom/width/height
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const clientRects = text.getClientRects();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const { left: x1, right: x2, top: y1, bottom: y2 } =
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							(clientRects.length ? clientRects.item(0) : text.getBoundingClientRect()) as DOMRect;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					text.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				setSvgTextInfo(info: SvgTextInfo, x: number, y: number, rotate: RotateType) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					info.x = x;
[0m[31m^^^^^^^^^^^^^^^^[0m
					info.y = y;
[0m[31m^^^^^^^^^^^^^^^^[0m
					info.rotate = rotate;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
	}
[0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m7[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mno-namespace[0m) TypeScript's `module` and `namespace` are discouraged to
use
		export namespace cc {
         [0m[31m^^^^^^^^^^^^^^[0m
			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export enum DiceKind {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>None</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>无</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>無</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				none = 0,
[0m[31m^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>4-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>4面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>4面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				four = 1,
[0m[31m^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>6-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>6面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>6面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				six = 2,
[0m[31m^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>8-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>8面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>8面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				eight = 4,
[0m[31m^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>12-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>12面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>12面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twelve = 8,
[0m[31m^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>20-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>20面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>20面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twenty = 16,
[0m[31m^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>24-sided dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>24面骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>24面骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				twentyFour = 32,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Count of Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型数量</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型數量</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export const DiceKindCount = 8;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Default Value of Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子类型默认值</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子類型默認值</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export const DefaultDiceKind = 63;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generation Parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export interface DiceParameter {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>id</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>id</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				id: string;
[0m[31m^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Dice Type</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>骰子类型</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>骰子類型</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				diceKind: DiceKind;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Side Length</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>边长</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>邊長</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				sideLength: number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Contents of all sides</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>各面内容</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>各面內容</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				contents: Array<I18nable | string>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Outside Boundary Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>外边界线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>外邊界線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				outerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Interior Line Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>内部线样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>內部線樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				innerLineStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Text Style</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>文本样式</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>文字樣式</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				textStyle: string;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Other parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>其它参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>其它參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				options: object;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			type ViewBoxType = { left: number; right: number; top: number; bottom: number };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			type RotateType = 'auto' | 'auto-reverse' | number;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			type SvgTextInfo = { content: I18nable | string; x: number; y: number; rotate: RotateType };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generation Result</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成结果</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成結果</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export interface DiceResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Svg Element Id</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>svg元素编号</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>svg元素編號</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				id: string;
[0m[31m^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Svg Element</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>svg元素</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>svg元素</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				svg: SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>css</en>
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>样式表</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>樣式表</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				css: string;
[0m[31m^^^^^^^^^^^^^^^^[0m
			}
[0m[31m^^^^[0m

			// https://blog.csdn.net/yiyueqinghui/article/details/108004272
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			const SVG_NS = 'http://www.w3.org/2000/svg';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			const SVG_XLINKNS = 'http://www.w3.org/1999/xlink';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

			/**
[0m[31m^^^^^^[0m
			 * <en>Dice Generator</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_cn>骰子生成器</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 * <zh_tw>骰子生成器</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
			 */
[0m[31m^^^^^^[0m
			export class DiceGenerator {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				/**
[0m[31m^^^^^^^[0m
				 * <en>Generate dice in batch</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>批量生成骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>批量生成骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @param createParameters
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <en>Arrays: creating parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>数组：创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>數組：創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @returns
[0m[31m^^^^^^^^^^^^^^^[0m
				 * <en>Generate results in array format, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成结果，为数组格式，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成結果，為數組格式，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				public batchCreate(createParameters: Array<DiceParameter>): Array<DiceResult> {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					createParameters.forEach((createParameter, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (createParameter.id.length === 0) createParameter.id = `svg_index`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					});
[0m[31m^^^^^^^^[0m

					return createParameters.map((createParameter) => this.create(createParameter));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				/**
[0m[31m^^^^^^^[0m
				 * <en>Generate a single dice</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成单个骰子</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成單個骰子</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @param param0
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
				 * <en>Deconstructed creation parameters</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>已解构的创建参数</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>已解構的創建參數</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * @returns
[0m[31m^^^^^^^^^^^^^^^[0m
				 * <en>Generate results, used to combine complete html</en>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_cn>生成结果，用于组合完整的html</zh_cn>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 * <zh_tw>生成結果，用於組合完整的html</zh_tw>
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				 */
[0m[31m^^^^^^^[0m
				public create({
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					id,
[0m[31m^^^^^^^^[0m
					diceKind,
[0m[31m^^^^^^^^^^^^^^[0m
					sideLength: SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					contents: CONTENTS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerLineStyle: OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					innerLineStyle: INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					textStyle: TEXT_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					options: OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
				}: DiceParameter): DiceResult {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (id.length === 0) id = 'svg_0';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let FIXED_SIDE_LENGTH = SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let nested = false;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							FIXED_SIDE_LENGTH = 25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							nested = true;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const svg = this.createSvg();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('id', id);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const viewBox = {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						left: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						right: 0,
[0m[31m^^^^^^^^^^^^^^^[0m
						top: 999999,
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						bottom: 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
					};
[0m[31m^^^^^^^[0m
					const infos = [] as Array<SvgTextInfo>;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								for (let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}
[0m[31m^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						// case DiceKind.six:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.eight:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twelve:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twenty:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						// case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						//   break;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							CONTENTS.forEach((content: I18nable | string) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								infos.push({ content, x: 0, y: 0, rotate: 0 });
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							});
[0m[31m^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const mmToPxScale = (new DPIHelper()).getMmToPxScale();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					switch (diceKind) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						case DiceKind.four:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfFourSidedDice(infos, FIXED_SIDE_LENGTH, CONTENTS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.six:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfSixSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.eight:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfEightSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twelve:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwelveSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twenty:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwentySidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						case DiceKind.twentyFour:
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.drawGraphsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								svg,
[0m[31m^^^^^^^^^^^^[0m
								FIXED_SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								OUTER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox,
[0m[31m^^^^^^^^^^^^^^^^[0m
								OPTIONS,
[0m[31m^^^^^^^^^^^^^^^^[0m
								mmToPxScale,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							);
[0m[31m^^^^^^^^^[0m
							this.drawTextsOfTwentyFourSidedDice(infos, FIXED_SIDE_LENGTH);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
						default:
[0m[31m^^^^^^^^^^^^^^[0m
							break;
[0m[31m^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
					infos.forEach(({ content, x, y, rotate }) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendText(svg, TEXT_STYLE, content, x, y, rotate, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					});
[0m[31m^^^^^^^^[0m

					const width = `${viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const height = `${viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('width', width);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('height', height);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// svg.setAttribute('style', `width:${width};height:${height};`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// const outerSvg = nested && (FIXED_SIDE_LENGTH !== SIDE_LENGTH) ? this.createSvg(): null;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const outerSvg = createElement('wrap'); // as HTMLDivElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerSvg.appendChild(svg);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					outerSvg.setAttribute('id', id.concat('_wrapper'));
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (FIXED_SIDE_LENGTH !== SIDE_LENGTH) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const scale = SIDE_LENGTH / FIXED_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const widthOuterSvg = `${scale * viewBox.right}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const heightOuterSvg = `${scale * viewBox.bottom}mm`;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						const transformScale = mmToPxScale * (scale - 1) / 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						outerSvg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							'style',
[0m[31m^^^^^^^^^^^^^^^[0m
							`width:${widthOuterSvg};height:${heightOuterSvg};display:inline-block;`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
							'transform',
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							`translate(${viewBox.right * transformScale}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								viewBox.bottom * transformScale
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							}) scale(${scale}, ${scale})`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						);
[0m[31m^^^^^^^^[0m
						svg.setAttribute('transform-origin', 'center');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					const css = 'page,wrap{page-break-inside:avoid;}wrap{display:inline-flex;}';
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return { id, svg: nested ? outerSvg : svg, css };
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private createSvg = (): SVGElement => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const svg = document.createElementNS(SVG_NS, 'svg') as SVGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('version', '1.1');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('xmlns', SVG_NS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.setAttribute('xmlns:xlink', SVG_XLINKNS);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return svg;
[0m[31m^^^^^^^^^^^^^^^^[0m
				};
[0m[31m^^^^^^[0m

				drawGraphsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const HEIGHT_OF_ONE = SIDE_LENGTH * 1.732 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HEIGHT_OF_TWO = HEIGHT_OF_ONE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部横线
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH * 0.5, x2 = x1 + SIDE_LENGTH, y1 = HEIGHT_OF_ONE, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = x1 + SIDE_LENGTH, y1 += HEIGHT_OF_ONE, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部左下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH, x2 = SIDE_LENGTH * 0.5, y1 = 0, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 += SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x2 += SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 += HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部右下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = SIDE_LENGTH * 0.5, x2 = SIDE_LENGTH, y1 = HEIGHT_OF_ONE, y2 = HEIGHT_OF_TWO;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const EXTNED_SCALE = 0.15;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const EXTNED_LENGTH = EXTNED_SCALE * SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = EXTNED_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_Y = EXTNED_LENGTH * Math.cos(30 / 180 * Math.PI);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 外部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = SIDE_LENGTH * 0.5, y1 = HEIGHT_OF_TWO, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 -= OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH * 1 - EXTNED_LENGTH, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5, y1 = y2, y2 += HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH * 2 + OFFSET_X, y1 = y2, y2 = HEIGHT_OF_TWO - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH, y1 = y2, y2 -= 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = OFFSET_X, y1 = y2, y2 -= 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = 0, y1 = y2, y2 = HEIGHT_OF_TWO;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					CONTENTS: any[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 12 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 25.0 / 25, SIDE_LENGTH * 18.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 21.0 / 25, SIDE_LENGTH * 9.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 31.0 / 25, SIDE_LENGTH * 11.5 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 40.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 19.0 / 25, SIDE_LENGTH * 33.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 31.5 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 40.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.5 / 25, SIDE_LENGTH * 32.0 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[8], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 30.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[9], SIDE_LENGTH * 27.0 / 25, SIDE_LENGTH * 22.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[10], SIDE_LENGTH * 9.5 / 25, SIDE_LENGTH * 31.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[11], SIDE_LENGTH * 42.0 / 25, SIDE_LENGTH * 33.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (CONTENTS.join(',') === 'ˉ,ˊ,ˇ,ˋ') {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[0], SIDE_LENGTH * 24.5 / 25, SIDE_LENGTH * 22.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[1], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 13.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[2], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 15.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 44.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[4], SIDE_LENGTH * 18.5 / 25, SIDE_LENGTH * 36.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 34.0 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 44.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.0 / 25, SIDE_LENGTH * 35.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[8], SIDE_LENGTH * 20.0 / 25, SIDE_LENGTH * 33.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[9], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 25.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[10], SIDE_LENGTH * 8.0 / 25, SIDE_LENGTH * 35.0 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[11], SIDE_LENGTH * 42.0 / 25, SIDE_LENGTH * 36.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					} else {
[0m[31m^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[0], SIDE_LENGTH * 24.5 / 25, SIDE_LENGTH * 19.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[1], SIDE_LENGTH * 21.0 / 25, SIDE_LENGTH * 10.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[2], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 12.5 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 41.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[4], SIDE_LENGTH * 18.5 / 25, SIDE_LENGTH * 34.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[5], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 32.5 / 25, 60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[6], SIDE_LENGTH * 12.5 / 25, SIDE_LENGTH * 41.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[7], SIDE_LENGTH * 32.5 / 25, SIDE_LENGTH * 32.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[8], SIDE_LENGTH * 19.5 / 25, SIDE_LENGTH * 31.0 / 25, -60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.setSvgTextInfo(infos[9], SIDE_LENGTH * 26.5 / 25, SIDE_LENGTH * 23.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[10], SIDE_LENGTH * 8.5 / 25, SIDE_LENGTH * 32.5 / 25, -120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.setSvgTextInfo(infos[11], SIDE_LENGTH * 41.0 / 25, SIDE_LENGTH * 34.0 / 25, 120);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawGraphsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const SIDE_LENGTH_PX = SIDE_LENGTH * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const duckTongueScale = 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const duckTongueHeightPx = SIDE_LENGTH_PX * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const duckTongueHeight = SIDE_LENGTH * duckTongueScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionScale = 0.75;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionHeightPx = SIDE_LENGTH_PX * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionHeight = SIDE_LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const offsetScale = 0.1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const offsetX = SIDE_LENGTH_PX * offsetScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionWidth = SIDE_LENGTH_PX - offsetX * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					console.log(SIDE_LENGTH, mmToPxScale, SIDE_LENGTH_PX);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const path = document.createElementNS(SVG_NS, 'path') as SVGPathElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						'd',
[0m[31m^^^^^^^^^^[0m
						`M 0, ${duckTongueHeightPx + SIDE_LENGTH_PX} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							.concat(
[0m[31m^^^^^^^^^^^^^^^[0m
								`h ${SIDE_LENGTH_PX * 2} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v -${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								// `h ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${SIDE_LENGTH_PX * 2} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v ${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${duckTongueHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`v -${SIDE_LENGTH_PX} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, ${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionWidth} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${offsetX}, -${pasteRegionHeightPx} `,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								' z',
[0m[31m^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let X1 = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						X2 = SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X3 = SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X4 = SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X5 = SIDE_LENGTH * 4,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						X6 = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let Y1 = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						Y2 = duckTongueHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y4 = Y2 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y5 = Y4 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y7 = Y5 + SIDE_LENGTH,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y8 = Y7 + duckTongueHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y3 = Y4 - pasteRegionHeight,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						Y6 = Y5 + pasteRegionHeight;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 内部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X3, X4, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X2, X5, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.appendLine(svg, INNER_LINE_STYLE, X4, X5, Y2, Y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X3, X6, Y4, Y4, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X1, X4, Y5, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X2, X3, Y7, Y7, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.appendLine(svg, INNER_LINE_STYLE, X2, X2, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X3, X3, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X4, X4, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, X5, X5, Y4, Y5, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.left = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.top = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.right = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = SIDE_LENGTH * 3 + SIDE_LENGTH * duckTongueScale * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				private drawTextsOfSixSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// // font-size: 5mm;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 61.0 / 25, SIDE_LENGTH * 75.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 113.5 / 25, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 36.0 / 25, SIDE_LENGTH * 52.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 61.0 / 25, SIDE_LENGTH * 52.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 72.5 / 25, SIDE_LENGTH * 40.0 / 25, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 36.0 / 25, SIDE_LENGTH * 77.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 77.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 62.5 / 25, SIDE_LENGTH * 100.0 / 25, 90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 52.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 62.5 / 25, SIDE_LENGTH * 52.5 / 25, -90);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 77.5 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private drawGraphsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const HEIGHT_OF_ONE = SIDE_LENGTH * 1.732 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HEIGHT_OF_TWO = HEIGHT_OF_ONE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const BOTTOM = HEIGHT_OF_ONE * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 内部横线
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						0,
[0m[31m^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					// 内部左下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 0.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						BOTTOM,
[0m[31m^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					// 内部右下斜线
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 1.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 2.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						0,
[0m[31m^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.appendLine(
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
						svg,
[0m[31m^^^^^^^^^^[0m
						INNER_LINE_STYLE,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 3.5,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_ONE,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						HEIGHT_OF_TWO,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
						null,
[0m[31m^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					const EXTNED_SCALE = 0.15;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const EXTNED_LENGTH = EXTNED_SCALE * SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = EXTNED_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_Y = EXTNED_LENGTH * Math.cos(30 / 180 * Math.PI);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 外部线
[0m[31m^^^^^^^^^^^^^^^^^[0m
					x1 = 0, x2 = OFFSET_X, y1 = HEIGHT_OF_ONE, y2 = HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH - OFFSET_X, y1 = y2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 = SIDE_LENGTH, y1 = y2, y2 = HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += EXTNED_LENGTH, y1 = y2, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH * 0.5 - OFFSET_X, y1 = y2, y2 = HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += SIDE_LENGTH + EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2,
[0m[31m^^^^^^^^^^^^^[0m
						x2 += SIDE_LENGTH * 0.5 - EXTNED_LENGTH + OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 = y2,
[0m[31m^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 += OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2,
[0m[31m^^^^^^^^^^^^^[0m
						x2 += EXTNED_LENGTH - SIDE_LENGTH * 0.5 - OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						y1 = y2,
[0m[31m^^^^^^^^^^^^^^[0m
						y2 += HEIGHT_OF_ONE - OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= EXTNED_LENGTH, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH * 0.5, y1 = y2, y2 -= HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X, y1 = y2, y2 += OFFSET_Y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= SIDE_LENGTH - OFFSET_X * 2, y1 = y2, y2 += 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x2, x2 -= OFFSET_X + SIDE_LENGTH * 0.5, y1 = y2, y2 -= OFFSET_Y + HEIGHT_OF_ONE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, x1, x2, y1, y2, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.right = SIDE_LENGTH * 3.5 + EXTNED_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = BOTTOM;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				private drawTextsOfEightSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 8 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 78.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 25.5 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 50.0 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 28.5 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 39.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 41.5 / 25, SIDE_LENGTH * 17.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 37.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 78.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 25.5 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 50.0 / 25, SIDE_LENGTH * 38.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 28.5 / 25, SIDE_LENGTH * 38.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 75.0 / 25, SIDE_LENGTH * 39.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 41.5 / 25, SIDE_LENGTH * 17.5 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawGraphsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const QUARTER_SIDE_LENGTH = SIDE_LENGTH * 0.25;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const RADIUS = SIDE_LENGTH * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const ANGLE18 = Math.PI * 18 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE36 = Math.PI * 36 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE54 = Math.PI * 54 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ANGLE72 = Math.PI * 72 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18 = Math.sin(ANGLE18);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36 = Math.sin(ANGLE36);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54 = Math.sin(ANGLE54);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72 = Math.sin(ANGLE72);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const HALF_SIDE_LENGTH = SIDE_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const LONG_SIDE_LENGTH = SIDE_LENGTH * 0.5 / SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HALF_LONG_SIDE_LENGTH = LONG_SIDE_LENGTH * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72_MULTIPLY_SIDE_LENGTH = SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN18_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN36_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN54_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN72_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SIN72_MULTIPLY_LONG_SIDE_LENGTH = LONG_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const SECOND_GROUP_OFFSET = SIDE_LENGTH * 2 + LONG_SIDE_LENGTH +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const TOP = SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					for (let groupIndex = 0; groupIndex < 2; ++groupIndex) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const LEFT = (groupIndex === 0 ? 0 : SECOND_GROUP_OFFSET) +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let A1x = 0, A1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A2x = 0, A2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A3x = 0, A3y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A4x = 0, A4y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let A5x = 0, A5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B1x = 0, B1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B2x = 0, B2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B5x = 0, B5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C1x = 0, C1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C2x = 0, C2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C5x = 0, C5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D1x = 0, D1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D2x = 0, D2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D5x = 0, D5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E1x = 0, E1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E2x = 0, E2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E5x = 0, E5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F1x = 0, F1y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F2x = 0, F2y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F5x = 0, F5y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A1x = LEFT + SIN18 * (SIDE_LENGTH + SIN18_MULTIPLY_SIDE_LENGTH * 2) +
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2x = A1x + SIN54_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5x = A1x - SIN54_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3x = A2x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4x = A5x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B1x = A5x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B2x = A5x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5x = A1x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							C1x = A2x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C5x = A2x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C2x = A1x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D1x = A3x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D2x = A3x + HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5x = A2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E1x = A4x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E2x = A4x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5x = A3x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1x = A4x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F5x = A4x - HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F2x = A5x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							A1y = TOP + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2y = A1y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							A3y = A2y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B1y = TOP;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B2y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B5y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C1y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C5y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C2y = B5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							D1y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							D2y = A3y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E2y = A4y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5y = E2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E1y = E2y + SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1y = A4y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F2y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F5y = D2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						} else {
[0m[31m^^^^^^^^^^^^^^[0m
							A1x = LEFT + LONG_SIDE_LENGTH + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2x = A1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3x = A1x - HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A5x = A1x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4x = A5x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B1x = A5x + HALF_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B2x = A1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5x = A5x - SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							C2x = A2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C1x = A1x + LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C5x = A1x + HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D2x = A3x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D1x = D2x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D5x = D1x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E2x = A3x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E1x = E2x + SIN18_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E5x = E1x + SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F1x = A5x - LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F2x = A5x - HALF_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F5x = A4x - SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							A1y = TOP + SIN72_MULTIPLY_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A2y = A1y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A3y = A1y + SIN72_MULTIPLY_LONG_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							A4y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							A5y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B1y = TOP;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							B2y = A5y - SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B5y = B2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C1y = A1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C2y = A2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C5y = A1y - SIN36_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D5y = A3y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							D1y = D5y + SIN72_MULTIPLY_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D2y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E1y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E2y = D5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							E5y = D1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							F1y = C1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F2y = C5y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							F5y = A4y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						const LINE_STYLE = groupIndex === 0 ? INNER_LINE_STYLE : OUTER_LINE_STYLE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, A1x, A2x, A1y, A2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, A3x, A2y, A3y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, A4x, A3y, A4y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, A5x, A4y, A5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, A1x, A5y, A1y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, A1x, B2x, A1y, B2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A1x, C5x, A1y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, C2x, A2y, C2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A2x, D5x, A2y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, D2x, A3y, D2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A3x, E5x, A3y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, E2x, A4y, E2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A4x, F5x, A4y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, F2x, A5y, F2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, A5x, B5x, A5y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						this.appendLine(svg, LINE_STYLE, B1x, B2x, B1y, B2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, B1x, B5x, B1y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, C1x, C2x, C1y, C2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, C1x, C5x, C1y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, D1x, D2x, D1y, D2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, D1x, D5x, D1y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, E1x, E2x, E1y, E2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, E1x, E5x, E1y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, F1x, F2x, F1y, F2y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, LINE_STYLE, F1x, F5x, F1y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let B6x = 0, B6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B7x = 0, B7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B8x = 0, B8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let B9x = 0, B9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let C6x = 0, C6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C7x = 0, C7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C8x = 0, C8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let C9x = 0, C9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let D6x = 0, D6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D7x = 0, D7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D8x = 0, D8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let D9x = 0, D9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let E6x = 0, E6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E7x = 0, E7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E8x = 0, E8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let E9x = 0, E9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

						let F6x = 0, F6y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F7x = 0, F7y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F8x = 0, F8y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						let F9x = 0, F9y = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN18_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN18;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN36_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN36;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN54_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN54;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						// const SIN72_MULTIPLY_QUARTER_SIDE_LENGTH = QUARTER_SIDE_LENGTH * SIN72;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B6x = B5x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B6y = B5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B7x = B1x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C8x = C1x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B7y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C8y = B1y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							B8x = B1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B9x = B2x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C6x = C5x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C7x = C1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							B8y = B1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							B9y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C6y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							C7y = B8y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							C9x = C2x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							C9y = C2y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							// 无D6和D7
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
							D8x = D1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D8y = D1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							D9x = D2x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							D9y = D2y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E6x = E5x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E6y = E5y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							E7x = E1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E8x = E1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E7y = E1y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E8y = E7y;
[0m[31m^^^^^^^^^^^^^^^^^[0m

							E9x = E2x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							E9y = E2y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F6x = F5x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F6y = F5y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F7x = F1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F7y = F1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F8x = F1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F8y = F1y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							F9x = F2x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							F9y = F2y;
[0m[31m^^^^^^^^^^^^^^^^^[0m
							// } else {
[0m[31m^^^^^^^^^^^^^^^^^^[0m
							//   B6x = B5x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B6y = B5y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   B7x = B1x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B8x = B1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B7y = B1y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B8y = B7y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   B9x = B2x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   B9y = B2y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C6x = C5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C6y = C5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C7x = C1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C7y = C1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C8x = C1x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C8y = C1y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   C9x = C2x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   C9y = C2y;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D6x = D5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D6y = D5y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D7x = D1x + QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D7y = D1y - 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D8x = D1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D8y = D1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   D9x = D2x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   D9y = D2y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E6x = E5x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E6y = E5y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E7x = E1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E7y = E1y + SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E8x = E1x - QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E8y = E1y + 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   E9x = E2x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   E9y = E2y + SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   // F6x = F5x + SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   // F6y = F5y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   // F7x = F1x + SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   // F7y = F1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   F8x = F1x - SIN18_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   F8y = F1y - SIN72_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//
[0m[31m^^^^^^^^^[0m
							//   F9x = F2x - SIN54_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							//   F9y = F2y - SIN36_MULTIPLY_QUARTER_SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if (groupIndex === 0) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B5x, B6x, B5y, B6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B1x, B7x, B1y, B7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B1x, B8x, B1y, B8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B2x, B9x, B2y, B9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, C5x, C6x, C5y, C6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C1x, C7x, C1y, C7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C1x, C8x, C1y, C8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C2x, C9x, C2y, C9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D1x, D8x, D1y, D8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, D2x, D9x, D2y, D9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, E5x, E6x, E5y, E6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E1x, E7x, E1y, E7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E1x, E8x, E1y, E8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E2x, E9x, E2y, E9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F5x, F6x, F5y, F6y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F1x, F7x, F1y, F7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F1x, F8x, F1y, F8y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F2x, F9x, F2y, F9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, B6x, B7x, B6y, B7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, B8x, B9x, B8y, B9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C6x, C7x, C6y, C7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C8x, C9x, C8y, C9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D6x, D7x, D6y, D7y, viewBox); //
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, D8x, D9x, D8y, D9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E6x, E7x, E6y, E7y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E8x, E9x, E8y, E9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F6x, F7x, F6y, F7y, viewBox); //
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, F8x, F9x, F8y, F9y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendLine(svg, OUTER_LINE_STYLE, B2x, C5x, B2y, C5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, C2x, D5x, C2y, D5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, D2x, E5x, D2y, E5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, E2x, F5x, E2y, F5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendLine(svg, OUTER_LINE_STYLE, F2x, B5x, F2y, B5y, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m

						if ((OPTIONS as unknown as { withHole: boolean }).withHole) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC1x = (A1x + A2x + A3x + A4x + A5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC1y = (A1y + A2y + A3y + A4y + A5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC2x = (A1x + A5x + B1x + B2x + B5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC2y = (A1y + A5y + B1y + B2y + B5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC3x = (A1x + A2x + C1x + C2x + C5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC3y = (A1y + A2y + C1y + C2y + C5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC4x = (A2x + A3x + D1x + D2x + D5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC4y = (A2y + A3y + D1y + D2y + D5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC5x = (A3x + A4x + E1x + E2x + E5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC5y = (A3y + A4y + E1y + E2y + E5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							let CC6x = (A4x + A5x + F1x + F2x + F5x) * 0.2,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								CC6y = (A4y + A5y + F1y + F2y + F5y) * 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

							this.appendCircle(svg, INNER_LINE_STYLE, CC1x, CC1y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC2x, CC2y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC3x, CC3y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC4x, CC4y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC5x, CC5y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendCircle(svg, INNER_LINE_STYLE, CC6x, CC6y, RADIUS, null);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						}
[0m[31m^^^^^^^[0m
					}
[0m[31m^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfTwelveSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 12 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 58.5 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 130.0 / 25, SIDE_LENGTH * 90.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 170.0 / 25, SIDE_LENGTH * 90.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 118.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 185.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 150.5 / 25, SIDE_LENGTH * 25.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 157.5 / 25, SIDE_LENGTH * 30.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 125.0 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 190.0 / 25, SIDE_LENGTH * 52.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 136.5 / 25, SIDE_LENGTH * 90.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 177.0 / 25, SIDE_LENGTH * 90.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 52.0 / 25, SIDE_LENGTH * 50.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				drawGraphsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const pasteRegionScale = 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegion = SIDE_LENGTH * pasteRegionScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionPx = pasteRegion * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const ANGLE60 = Math.PI * 60 / 180;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SIN60 = Math.sin(ANGLE60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const COS60 = Math.cos(ANGLE60);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const OneX = SIDE_LENGTH * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OneY = SIDE_LENGTH * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionShortBiasX = pasteRegion * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasY = pasteRegion * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionLongBias = SIDE_LENGTH * (1 - pasteRegionScale);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasX = pasteRegionLongBias * COS60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasY = pasteRegionLongBias * SIN60;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const TwoY = OneY * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ThreeY = OneY * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let x1 = 0, x2 = 0, y1 = 0, y2 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					let FIVE_SIDE = SIDE_LENGTH * 5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					x1 = pasteRegionLongBiasX + pasteRegion, x2 = x1 + FIVE_SIDE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 = x1 - OneX, x2 = x1 + FIVE_SIDE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 += OneY, y2 = y1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 -= OneX, x2 = x1 - OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = TwoY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					for (let i = 0; i < 5; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					x1 = pasteRegionShortBiasX, x2 = x1 + OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = TwoY, y2 = ThreeY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 += OneX, x2 += OneX * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y1 = OneY, y2 = y1 + TwoY;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 -= OneX;
[0m[31m^^^^^^^^^^^^^^^^[0m
					y1 = 0;
[0m[31m^^^^^^^^^^^^[0m
					for (let i = 0; i < 3; ++i) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						x1 += SIDE_LENGTH, x2 += SIDE_LENGTH;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					x1 += SIDE_LENGTH, x2 += OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y2 = TwoY;
[0m[31m^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					x1 += SIDE_LENGTH, x2 += OneX;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					y2 = OneY;
[0m[31m^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, x1, x2, y1, y2, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const OneXPx = OneX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OneYPx = OneY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasXPx = pasteRegionShortBiasX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionShortBiasYPx = pasteRegionShortBiasY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const pasteRegionLongBiasXPx = pasteRegionLongBiasX * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const pasteRegionLongBiasYPx = pasteRegionLongBiasY * mmToPxScale;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const path = document.createElementNS(SVG_NS, 'path') as SVGPathElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('fill', 'none');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute('stroke', '#000000');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					path.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
						'd',
[0m[31m^^^^^^^^^^[0m
						`M 0, ${OneYPx + pasteRegionLongBiasYPx} `
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							.concat(
[0m[31m^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx}, ${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${OneXPx}, -${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h ${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionLongBiasXPx}, ${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionShortBiasXPx + OneXPx * 2}, ${
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
									pasteRegionShortBiasYPx + OneYPx * 2
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								}`,
[0m[31m^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${OneXPx}, ${OneYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`h -${pasteRegionPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l -${pasteRegionLongBiasXPx}, -${pasteRegionLongBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								`l ${pasteRegionShortBiasXPx}, -${pasteRegionShortBiasYPx}`,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
								' z',
[0m[31m^^^^^^^^^^^^^[0m
							),
[0m[31m^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					svg.appendChild(path);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					viewBox.right = SIDE_LENGTH * 5 + OneX + pasteRegion;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox.bottom = OneY * 3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				drawTextsOfTwentySidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// 20 text elements.
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 52.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 77.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 102.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 127.5 / 25, SIDE_LENGTH * 15.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 15.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 40.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 65.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 90.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 36.65 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 90.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[12], SIDE_LENGTH * 65.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[13], SIDE_LENGTH * 40.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[14], SIDE_LENGTH * 15.0 / 25, SIDE_LENGTH * 38.75 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[15], SIDE_LENGTH * 127.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[16], SIDE_LENGTH * 102.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[17], SIDE_LENGTH * 77.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[18], SIDE_LENGTH * 52.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[19], SIDE_LENGTH * 27.5 / 25, SIDE_LENGTH * 16.25 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				getSinByAngle(angle) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return Math.sin(angle * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				getCosByAngle(angle) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					return Math.cos(angle * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
				// fixContent(content)  { return content.toString().replace(/([69])/gi, '<font style="text-decoration:underline;">$1</font>'); }
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

				drawGraphsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					INNER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OUTER_LINE_STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: { left: number; right: number; top: number; bottom: number },
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					OPTIONS: object,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					mmToPxScale: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const ANGLE = 48.275;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const { getSinByAngle, getCosByAngle } = this;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const TEXT_OFFSET_SCALE = 0.2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const BIGER_ANGLE = 180 - ANGLE * 2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SMALL_ANGLE_COS = Math.cos(ANGLE * Math.PI / 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const HALF_LONG_SIDE_LENGTH = 50 * 0.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const SHORT_SIDE_LENGTH = HALF_LONG_SIDE_LENGTH / SMALL_ANGLE_COS;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					let ax = 0,
[0m[31m^^^^^^^^^^^^^^^^[0m
						ay = 0,
[0m[31m^^^^^^^^^^^^^[0m
						bx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						by = 0,
[0m[31m^^^^^^^^^^^^^[0m
						cx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						cy = 0,
[0m[31m^^^^^^^^^^^^^[0m
						dx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						dy = 0,
[0m[31m^^^^^^^^^^^^^[0m
						ex = 0,
[0m[31m^^^^^^^^^^^^^[0m
						ey = 0,
[0m[31m^^^^^^^^^^^^^[0m
						fx = 0,
[0m[31m^^^^^^^^^^^^^[0m
						fy = 0;
[0m[31m^^^^^^^^^^^^^[0m
					let aax = 0,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						aay = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						bbx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						bby = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ddx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ddy = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						eex = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						eey = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ffx = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						ffy = 0,
[0m[31m^^^^^^^^^^^^^^[0m
						fffx = 0,
[0m[31m^^^^^^^^^^^^^^^[0m
						fffy = 0;
[0m[31m^^^^^^^^^^^^^^^[0m

					let content_offset_top = -3, content_offset_left = -2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					content_offset_top *= 1.5, content_offset_left *= 1.5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const OFFSET_X = -23.0805019730301175;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 080501973030115 1.7763568394002505e-14mm
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// 08050197303012 -1.0658141036401503e-14mm
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const X_VALUE = 150;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// const ax1 = 150, ay1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax1 = X_VALUE + OFFSET_X, ay1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx1 = ax1 + 50, by1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const cx1 = ax1 + HALF_LONG_SIDE_LENGTH, cy1 = SHORT_SIDE_LENGTH * getSinByAngle(ANGLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd1 = BIGER_ANGLE - ANGLE;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx1 = cx1 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						dy1 = cy1 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce1 = 180 - BIGER_ANGLE - angle_cd1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex1 = cx1 + SHORT_SIDE_LENGTH * getCosByAngle(angle_ce1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ey1 = cy1 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ce1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf1 = BIGER_ANGLE - angle_ce1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx1 = cx1 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf1),
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fy1 = cy1 - SHORT_SIDE_LENGTH * getSinByAngle(angle_cf1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_x1 = X_VALUE + dx1 - cx1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_y1 = 0 + dy1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax1 = X_VALUE + (c_mirror_ad_x1 - X_VALUE) * 0.3 + OFFSET_X,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay1 = 0 + (c_mirror_ad_y1 - 0) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx1 = 0, bby1 = 0;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx1 = dx1 + (c_mirror_ad_x1 - dx1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy1 = dy1 + (c_mirror_ad_y1 - dy1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx1 = bx1 + (cx1 - bx1) * 0.3, ffy1 = 0 + (cy1 - 0) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_x1 = ex1 + fx1 - cx1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_y1 = ey1 + fy1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex1 = ex1 + (c_mirror_ef_x1 - ex1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey1 = ey1 + (c_mirror_ef_y1 - ey1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fffx1 = fx1 + (c_mirror_ef_x1 - fx1) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fffy1 = fy1 + (c_mirror_ef_y1 - fy1) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax1,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay1,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by1,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy1,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy1,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex1,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey1,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx1,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy1;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax1,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bbx = bbx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bby = bby1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy1,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						fffx = fffx1,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						fffy = fffy1;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, ddx, aay, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, eex, fffx, eey, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, fffx, fy, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx4 = dx1 + ex1 - cx1, cy4 = dy1 + ey1 - cy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax4 = ex1, ay4 = ey1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx4 = dx1, dy4 = dy1;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd4 = Math.atan((cy4 - dy4) / (cx4 - dx4)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce4 = BIGER_ANGLE - angle_cd4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf4 = BIGER_ANGLE - (90 - angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca4 = BIGER_ANGLE - (90 - angle_cd4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb4 = BIGER_ANGLE - (90 - angle_ca4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex4 = cx4 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ey4 = cy4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ce4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx4 = cx4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy4 = cy4 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx4 = cx4 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by4 = cy4 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb4);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx4 = bx4 + (cx4 - bx4) * 0.3, ffy4 = by4 + (cy4 - by4) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax4,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay4,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by4,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy4,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy4,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex4,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey4,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx4,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy4;
[0m[31m^^^^^^^^^^^^^^^[0m
					ffx = ffx4, ffy = ffy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx5 = ax4 + bx4 - cx4, cy5 = ay4 + by4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx5 = ax4, dy5 = ay4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex5 = bx4, ey5 = by4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd5 = Math.atan((cy5 - dy5) / (cx5 - dx5)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce5 = BIGER_ANGLE - angle_cd5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf5 = BIGER_ANGLE - (90 - angle_ce5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca5 = BIGER_ANGLE - (90 - angle_cd5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb5 = BIGER_ANGLE - (90 - angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax5 = cx5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay5 = cy5 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx5 = cx5 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by5 = cy5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx5 = cx5 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy5 = cy5 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cf5);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx5 = bx5 + (cx5 - bx5) * 0.3, ffy5 = by5 + (cy5 - by5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ab_x5 = ax5 + bx5 - cx5, c_mirror_ab_y5 = ay5 + by5 - cy5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax5 = ax5 + (c_mirror_ab_x5 - ax5) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay5 = ay5 + (c_mirror_ab_y5 - ay5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx5 = bx5 + (c_mirror_ab_x5 - bx5) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						bby5 = by5 + (c_mirror_ab_y5 - by5) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax5,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay5,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by5,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy5,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy5,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex5,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey5,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx5,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy5;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax5, aay = aay5, bbx = bbx5, bby = bby5, ffx = ffx5, ffy = ffy5;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, bbx, by, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, bbx, aay, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx6 = ex4 + fx4 - cx4, cy6 = ey4 + fy4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx6 = fx4, dy6 = fy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex6 = ex4, ey6 = ey4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd6 = Math.atan((cy6 - dy6) / (dx6 - cx6)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce6 = Math.atan((cy6 - ey6) / (cx6 - ex6)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca6 = BIGER_ANGLE - angle_cd6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf6 = BIGER_ANGLE - angle_ce6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb6 = BIGER_ANGLE - (90 - angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax6 = cx6 + SHORT_SIDE_LENGTH * getCosByAngle(angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay6 = cy6 + SHORT_SIDE_LENGTH * getSinByAngle(angle_ca6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx6 = cx6 - SHORT_SIDE_LENGTH * getSinByAngle(angle_cb6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by6 = cy6 + SHORT_SIDE_LENGTH * getCosByAngle(angle_cb6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx6 = cx6 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cf6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fy6 = cy6 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cf6);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx6 = bx6 + (cx6 - bx6) * 0.3, ffy6 = by6 + (cy6 - by6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ad_x6 = ax6 + dx6 - cx6, c_mirror_ad_y6 = ay6 + dy6 - cy6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax6 = ax6 + (c_mirror_ad_x6 - ax6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay6 = ay6 + (c_mirror_ad_y6 - ay6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx6 = dx6 + (c_mirror_ad_x6 - dx6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy6 = dy6 + (c_mirror_ad_y6 - dy6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ef_x6 = ex6 + fx6 - cx6, c_mirror_ef_y6 = ey6 + fy6 - cy6;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex6 = ex6 + (c_mirror_ef_x6 - ex6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey6 = ey6 + (c_mirror_ef_y6 - ey6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fffx6 = fx6 + (c_mirror_ef_x6 - fx6) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						fffy6 = fy6 + (c_mirror_ef_y6 - fy6) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax6,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay6,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by6,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy6,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy6,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex6,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey6,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx6,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy6;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax6,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy6,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						fffx = fffx6,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						fffy = fffy6;
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, ddx, aay, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, eex, fffx, eey, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, fffx, fy, fffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx3 = dx4 + ex4 - cx4, cy3 = dy4 + ey4 - cy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx3 = dx4, fy3 = dy4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex3 = ex4, ey3 = ey4;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf3 = Math.atan((cy3 - fy3) / (fx3 - cx3)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce3 = BIGER_ANGLE - angle_cf3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd3 = 180 - BIGER_ANGLE - angle_ce3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca3 = BIGER_ANGLE - angle_cd3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb3 = BIGER_ANGLE - (90 - angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax3 = cx3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay3 = cy3 - SHORT_SIDE_LENGTH * getSinByAngle(angle_ca3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx3 = cx3 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by3 = cy3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cb3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx3 = cx3 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dy3 = cy3 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd3);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx3 = bx3 + (cx3 - bx3) * 0.3, ffy3 = by3 + (cy3 - by3) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax3,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay3,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by3,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy3,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy3,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex3,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey3,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx3,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy3;
[0m[31m^^^^^^^^^^^^^^^[0m
					ffx = ffx3, ffy = ffy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const cx2 = ax3 + dx3 - cx3, cy2 = ay3 + dy3 - cy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const fx2 = ax3, fy2 = ay3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ex2 = dx3, ey2 = dy3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cf2 = Math.atan((cy2 - fy2) / (fx2 - cx2)) * 180 / Math.PI;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ce2 = BIGER_ANGLE - angle_cf2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cd2 = 180 - BIGER_ANGLE - angle_ce2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_ca2 = BIGER_ANGLE - angle_cd2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const angle_cb2 = BIGER_ANGLE - (90 - angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ax2 = cx2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ay2 = cy2 - SHORT_SIDE_LENGTH * getSinByAngle(angle_ca2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bx2 = cx2 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cb2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const by2 = cy2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cb2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dx2 = cx2 - SHORT_SIDE_LENGTH * getCosByAngle(angle_cd2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const dy2 = cy2 + SHORT_SIDE_LENGTH * getSinByAngle(angle_cd2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ffx2 = bx2 + (cx2 - bx2) * 0.3, ffy2 = by2 + (cy2 - by2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_ab_x2 = ax2 + bx2 - cx2, c_mirror_ab_y2 = ay2 + by2 - cy2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const aax2 = ax2 + (c_mirror_ab_x2 - ax2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						aay2 = ay2 + (c_mirror_ab_y2 - ay2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const bbx2 = bx2 + (c_mirror_ab_x2 - bx2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						bby2 = by2 + (c_mirror_ab_y2 - by2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const c_mirror_de_x2 = dx2 + ex2 - cx2, c_mirror_de_y2 = dy2 + ey2 - cy2;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const ddx2 = dx2 + (c_mirror_de_x2 - dx2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						ddy2 = dy2 + (c_mirror_de_y2 - dy2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const eex2 = ex2 + (c_mirror_de_x2 - ex2) * 0.3,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						eey2 = ey2 + (c_mirror_de_y2 - ey2) * 0.3;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					ax = ax2,
[0m[31m^^^^^^^^^^^^^^[0m
						ay = ay2,
[0m[31m^^^^^^^^^^^^^^^[0m
						bx = bx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						by = by2,
[0m[31m^^^^^^^^^^^^^^^[0m
						cx = cx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						cy = cy2,
[0m[31m^^^^^^^^^^^^^^^[0m
						dx = dx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						dy = dy2,
[0m[31m^^^^^^^^^^^^^^^[0m
						ex = ex2,
[0m[31m^^^^^^^^^^^^^^^[0m
						ey = ey2,
[0m[31m^^^^^^^^^^^^^^^[0m
						fx = fx2,
[0m[31m^^^^^^^^^^^^^^^[0m
						fy = fy2;
[0m[31m^^^^^^^^^^^^^^^[0m
					aax = aax2,
[0m[31m^^^^^^^^^^^^^^^^[0m
						aay = aay2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bbx = bbx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						bby = bby2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddx = ddx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ddy = ddy2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eex = eex2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						eey = eey2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffx = ffx2,
[0m[31m^^^^^^^^^^^^^^^^^[0m
						ffy = ffy2;
[0m[31m^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, bx, ay, by, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, dx, ay, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ax, cx, ay, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, cx, by, cy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, dx, cy, dy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, ex, cy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, cx, fx, cy, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, dx, ex, dy, ey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, INNER_LINE_STYLE, ex, fx, ey, fy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, fx, ffx, fy, ffy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ax, aax, ay, aay, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, bx, bbx, by, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, aax, bbx, aay, bby, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, dx, ddx, dy, ddy, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ex, eex, ey, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.appendLine(svg, OUTER_LINE_STYLE, ddx, eex, ddy, eey, viewBox);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				drawTextsOfTwentyFourSidedDice(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					SIDE_LENGTH: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// this.setSvgTextInfo(infos[0], SIDE_LENGTH * 36.5 / 25, SIDE_LENGTH * 100.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[1], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 125.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[2], SIDE_LENGTH * 84.0 / 25, SIDE_LENGTH * 132.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[3], SIDE_LENGTH * 194.0 / 25, SIDE_LENGTH * 132.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[4], SIDE_LENGTH * 132.5 / 25, SIDE_LENGTH * 140.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[5], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 175.0 / 25, 83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[6], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 147.5 / 25, 166.9);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[7], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 115.0 / 25, 193.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[8], SIDE_LENGTH * 162.0 / 25, SIDE_LENGTH * 40.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[9], SIDE_LENGTH * 97.5 / 25, SIDE_LENGTH * 66.0 / 25, 206.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[10], SIDE_LENGTH * 140.0 / 25, SIDE_LENGTH * 82.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[11], SIDE_LENGTH * 122.5 / 25, SIDE_LENGTH * 15.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[12], SIDE_LENGTH * 111.0 / 25, SIDE_LENGTH * 127.5 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[13], SIDE_LENGTH * 110.0 / 25, SIDE_LENGTH * 195.0 / 25, 263.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[14], SIDE_LENGTH * 80.0 / 25, SIDE_LENGTH * 160.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[15], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 150.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[16], SIDE_LENGTH * 53.0 / 25, SIDE_LENGTH * 80.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[17], SIDE_LENGTH * 157.5 / 25, SIDE_LENGTH * 91.0 / 25, 26.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[18], SIDE_LENGTH * 115.0 / 25, SIDE_LENGTH * 71.0 / 25, 109.65);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[19], SIDE_LENGTH * 145.0 / 25, SIDE_LENGTH * 30.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[20], SIDE_LENGTH * 167.5 / 25, SIDE_LENGTH * 71.0 / 25, 122.75);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[21], SIDE_LENGTH * 69.0 / 25, SIDE_LENGTH * 65.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[22], SIDE_LENGTH * 218.0 / 25, SIDE_LENGTH * 92.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// this.setSvgTextInfo(infos[23], SIDE_LENGTH * 105.0 / 25, SIDE_LENGTH * 92.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					// 2022-11-18
[0m[31m^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[0], SIDE_LENGTH * 36.5 / 25, SIDE_LENGTH * 100.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[1], SIDE_LENGTH * 147.5 / 25, SIDE_LENGTH * 125.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[2], SIDE_LENGTH * 70.0 / 25, SIDE_LENGTH * 120.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[3], SIDE_LENGTH * 180.0 / 25, SIDE_LENGTH * 120.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[4], SIDE_LENGTH * 120.0 / 25, SIDE_LENGTH * 128.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[5], SIDE_LENGTH * 82.5 / 25, SIDE_LENGTH * 188.0 / 25, 83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[6], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 147.5 / 25, 166.9);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[7], SIDE_LENGTH * 95.0 / 25, SIDE_LENGTH * 110.0 / 25, 193.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[8], SIDE_LENGTH * 139.0 / 25, SIDE_LENGTH * 44.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[9], SIDE_LENGTH * 97.5 / 25, SIDE_LENGTH * 58.0 / 25, 206.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[10], SIDE_LENGTH * 125.0 / 25, SIDE_LENGTH * 70.0 / 25, -70.35);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[11], SIDE_LENGTH * 114.0 / 25, SIDE_LENGTH * 27.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[12], SIDE_LENGTH * 102.0 / 25, SIDE_LENGTH * 138.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						infos[13],
[0m[31m^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 102.0 / 25,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						SIDE_LENGTH * 183.0 / 25,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						263.45,
[0m[31m^^^^^^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m
					this.setSvgTextInfo(infos[14], SIDE_LENGTH * 80.0 / 25, SIDE_LENGTH * 160.0 / 25, 180);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[15], SIDE_LENGTH * 126.0 / 25, SIDE_LENGTH * 154.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[16], SIDE_LENGTH * 30.0 / 25, SIDE_LENGTH * 78.0 / 25, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[17], SIDE_LENGTH * 137.0 / 25, SIDE_LENGTH * 95.0 / 25, 26.2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[18], SIDE_LENGTH * 110.0 / 25, SIDE_LENGTH * 84.0 / 25, 109.65);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[19], SIDE_LENGTH * 130.0 / 25, SIDE_LENGTH * 16.0 / 25, -83.45);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					this.setSvgTextInfo(infos[20], SIDE_LENGTH * 160.0 / 25, SIDE_LENGTH * 80.0 / 25, 122.75);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[21], SIDE_LENGTH * 60.0 / 25, SIDE_LENGTH * 77.0 / 25, 96.55);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[22], SIDE_LENGTH * 195.0 / 25, SIDE_LENGTH * 93.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					this.setSvgTextInfo(infos[23], SIDE_LENGTH * 83.0 / 25, SIDE_LENGTH * 93.0 / 25, 13.1);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendLine(
[0m[31m^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					x1: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					x2: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					y1: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					y2: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const line = document.createElementNS(SVG_NS, 'line') as SVGLineElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('x1', `${x1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('x2', `${x2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('y1', `${y1}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					line.setAttribute('y2', `${y2}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					line.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.appendChild(line);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendCircle(
[0m[31m^^^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					cx: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					cy: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					radius: number,
[0m[31m^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const circle = document.createElementNS(SVG_NS, 'circle') as SVGCircleElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('cx', `${cx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('cy', `${cy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('r', `${radius}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					circle.setAttribute('fill', '#ffffff');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, cx - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, cx + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, cy - radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, cy + radius);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					circle.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					svg.appendChild(circle);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendTspan(
[0m[31m^^^^^^^^^^^^^^^^[0m
					text: SVGTextElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					CHAR: string,
[0m[31m^^^^^^^^^^^^^^^^^^[0m
					dx: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					dy: number,
[0m[31m^^^^^^^^^^^^^^^^[0m
					rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					const tspan = document.createElementNS(SVG_NS, 'tspan') as SVGTSpanElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('dx', `${dx}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('dy', `${dy}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					tspan.setAttribute(
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
						'style',
[0m[31m^^^^^^^^^^^^^^[0m
						STYLE.concat(
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
							'dominant-baseline:middle;text-anchor:middle;',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CHAR === '6' || CHAR === '9' ? 'text-decoration:underline;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							CHAR === 'ü' ? 'opacity:0.85;font-size:0.9em;' : '',
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						),
[0m[31m^^^^^^^^[0m
					);
[0m[31m^^^^^^^[0m

					tspan.innerHTML = CHAR;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.appendChild(tspan);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				appendText(
[0m[31m^^^^^^^^^^^^^^^[0m
					svg: SVGElement,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					STYLE: string,
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
					CONTENT: string,
[0m[31m^^^^^^^^^^^^^^^^^^^^^[0m
					x: number,
[0m[31m^^^^^^^^^^^^^^^[0m
					y: number,
[0m[31m^^^^^^^^^^^^^^^[0m
					rotate: RotateType,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
					viewBox: ViewBoxType | null,
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				) {
[0m[31m^^^^^^^[0m
					const g = document.createElementNS(SVG_NS, 'g') as SVGGElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// g.setAttribute('style', 'display:flex;justify-content:center;align-items:center;overflow:hidden;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					if (rotate) {
[0m[31m^^^^^^^^^^^^^^^^^^[0m
						g.setAttribute('style', `transform: rotate(${rotate}deg);transform-origin: 50% 50%;`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					svg.appendChild(g);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m

					const text = document.createElementNS(SVG_NS, 'text') as SVGTextElement;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('x', `${x}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('y', `${y}mm`);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					text.setAttribute('style', 'dominant-baseline:middle;text-anchor:middle;');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('dx', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('dy', '0');
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					// text.setAttribute('rotate', rotate.toString());
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (CONTENT.indexOf('<') > -1) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						text.innerHTML = CONTENT;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					} else {
[0m[31m^^^^^^^^^^^^^[0m
						CONTENT.split('').forEach((char, index) => {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							this.appendTspan(text, '', char, 0, 0, 0);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						});
[0m[31m^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					g.appendChild(text);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

					if (viewBox) {
[0m[31m^^^^^^^^^^^^^^^^^^^[0m
						// left/top/right/bottom/width/height
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const clientRects = text.getClientRects();
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						const { left: x1, right: x2, top: y1, bottom: y2 } =
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
							(clientRects.length ? clientRects.item(0) : text.getBoundingClientRect()) as DOMRect;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.left = Math.min(viewBox.left, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.right = Math.max(viewBox.right, x1, x2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.top = Math.min(viewBox.top, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
						viewBox.bottom = Math.max(viewBox.bottom, y1, y2);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					}
[0m[31m^^^^^^[0m

					text.setAttribute('style', STYLE);
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m

				setSvgTextInfo(info: SvgTextInfo, x: number, y: number, rotate: RotateType) {
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
					info.x = x;
[0m[31m^^^^^^^^^^^^^^^^[0m
					info.y = y;
[0m[31m^^^^^^^^^^^^^^^^[0m
					info.rotate = rotate;
[0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
				}
[0m[31m^^^^^[0m
			}
[0m[31m^^^^[0m
		}
[0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m8[0m:[0m[33m9[0m

    [0m[36mhint:[0m Use ES2015 module syntax (`import`/`export`) to organize
the code instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-namespace

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
				options: object;
             [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m133[0m:[0m[33m13[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
					OPTIONS: object,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m401[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m474[0m:[0m[33m23[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
					CONTENTS: any[],
               [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m476[0m:[0m[33m15[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
					OPTIONS: object,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m534[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `X1` is never reassigned
					let X1 = 0,
         [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m590[0m:[0m[33m9[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `X2` is never reassigned
						X2 = SIDE_LENGTH * 1,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m591[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `X3` is never reassigned
						X3 = SIDE_LENGTH * 2,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m592[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `X4` is never reassigned
						X4 = SIDE_LENGTH * 3,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m593[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `X5` is never reassigned
						X5 = SIDE_LENGTH * 4,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m594[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `X6` is never reassigned
						X6 = SIDE_LENGTH * 5;
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m595[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `Y1` is never reassigned
					let Y1 = 0,
         [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m596[0m:[0m[33m9[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `Y2` is never reassigned
						Y2 = duckTongueHeight,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m597[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `Y4` is never reassigned
						Y4 = Y2 + SIDE_LENGTH,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m598[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `Y5` is never reassigned
						Y5 = Y4 + SIDE_LENGTH,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m599[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `Y7` is never reassigned
						Y7 = Y5 + SIDE_LENGTH,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m600[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `Y8` is never reassigned
						Y8 = Y7 + duckTongueHeight,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m601[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `Y3` is never reassigned
						Y3 = Y4 - pasteRegionHeight,
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m602[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `Y6` is never reassigned
						Y6 = Y5 + pasteRegionHeight;
      [0m[31m^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m603[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-explicit-any[0m) `any` type is not allowed
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m631[0m:[0m[33m23[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
					OPTIONS: object,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m657[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m815[0m:[0m[33m23[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
					OPTIONS: object,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m845[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `D6x` is never reassigned
						let D6x = 0, D6y = 0;
          [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1053[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `D6y` is never reassigned
						let D6x = 0, D6y = 0;
                   [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1053[0m:[0m[33m19[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `D7x` is never reassigned
						let D7x = 0, D7y = 0;
          [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1054[0m:[0m[33m10[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `D7y` is never reassigned
						let D7x = 0, D7y = 0;
                   [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1054[0m:[0m[33m19[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC1x` is never reassigned
							let CC1x = (A1x + A2x + A3x + A4x + A5x) * 0.2,
           [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1232[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC1y` is never reassigned
								CC1y = (A1y + A2y + A3y + A4y + A5y) * 0.2;
        [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1233[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC2x` is never reassigned
							let CC2x = (A1x + A5x + B1x + B2x + B5x) * 0.2,
           [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1234[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC2y` is never reassigned
								CC2y = (A1y + A5y + B1y + B2y + B5y) * 0.2;
        [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1235[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC3x` is never reassigned
							let CC3x = (A1x + A2x + C1x + C2x + C5x) * 0.2,
           [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1236[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC3y` is never reassigned
								CC3y = (A1y + A2y + C1y + C2y + C5y) * 0.2;
        [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1237[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC4x` is never reassigned
							let CC4x = (A2x + A3x + D1x + D2x + D5x) * 0.2,
           [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1238[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC4y` is never reassigned
								CC4y = (A2y + A3y + D1y + D2y + D5y) * 0.2;
        [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1239[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC5x` is never reassigned
							let CC5x = (A3x + A4x + E1x + E2x + E5x) * 0.2,
           [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1240[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC5y` is never reassigned
								CC5y = (A3y + A4y + E1y + E2y + E5y) * 0.2;
        [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1241[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC6x` is never reassigned
							let CC6x = (A4x + A5x + F1x + F2x + F5x) * 0.2,
           [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1242[0m:[0m[33m11[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `CC6y` is never reassigned
								CC6y = (A4y + A5y + F1y + F2y + F5y) * 0.2;
        [0m[31m^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1243[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-explicit-any[0m) `any` type is not allowed
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1256[0m:[0m[33m23[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
					OPTIONS: object,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1280[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `FIVE_SIDE` is never reassigned
					let FIVE_SIDE = SIDE_LENGTH * 5;
         [0m[31m^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1305[0m:[0m[33m9[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-explicit-any[0m) `any` type is not allowed
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1411[0m:[0m[33m23[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
					OPTIONS: object,
              [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1454[0m:[0m[33m14[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
					infos: { content: any; x: number; y: number; rotate: number | 'auto' | 'auto-reverse' }[],
                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\dice.ts[0m:[0m[33m1817[0m:[0m[33m23[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataLevel3 = (newData: any): void => {
                                             [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m173[0m:[0m[33m45[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mprefer-const[0m) `d` is never reassigned
		let a: number, b: number, c: number, d: number;
                                       [0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1199[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `tensOfBPlusC` is never reassigned
			let tensOfBPlusC = Math.floor(B_C / 10);
       [0m[31m^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1294[0m:[0m[33m7[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `questionElementHtml` is never reassigned
		let questionElementHtml = `<p>${
      [0m[31m^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1559[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-explicit-any[0m) `any` type is not allowed
		onlyMentalArithmetic: any,
                        [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1617[0m:[0m[33m24[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-inferrable-types[0m) inferrable types are not allowed
		withBrackets: boolean = false,
  [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1620[0m:[0m[33m2[0m

    [0m[36mhint:[0m Remove the type, it is easily inferrable
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inferrable-types

([0m[31mprefer-const[0m) `a` is never reassigned
		let a: number, b: number, c: number, d: number;
      [0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1622[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `b` is never reassigned
		let a: number, b: number, c: number, d: number;
                 [0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1622[0m:[0m[33m17[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `c` is never reassigned
		let a: number, b: number, c: number, d: number;
                            [0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1622[0m:[0m[33m28[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `d` is never reassigned
		let a: number, b: number, c: number, d: number;
                                       [0m[31m^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1622[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mno-inferrable-types[0m) inferrable types are not allowed
		withBrackets: boolean = false,
  [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1711[0m:[0m[33m2[0m

    [0m[36mhint:[0m Remove the type, it is easily inferrable
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inferrable-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
		onlyMentalArithmetic: any,
                        [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1872[0m:[0m[33m24[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-inferrable-types[0m) inferrable types are not allowed
		withBrackets: boolean = false,
  [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m1875[0m:[0m[33m2[0m

    [0m[36mhint:[0m Remove the type, it is easily inferrable
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inferrable-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
		onlyMentalArithmetic: any,
                        [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m2060[0m:[0m[33m24[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-inferrable-types[0m) inferrable types are not allowed
		withBrackets: boolean = false,
  [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m2063[0m:[0m[33m2[0m

    [0m[36mhint:[0m Remove the type, it is easily inferrable
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inferrable-types

([0m[31mno-inferrable-types[0m) inferrable types are not allowed
		function doneAPlusBSubstractC(twoOption: boolean = false) {
                                [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m2158[0m:[0m[33m32[0m

    [0m[36mhint:[0m Remove the type, it is easily inferrable
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inferrable-types

([0m[31mno-inferrable-types[0m) inferrable types are not allowed
		function doneBSubstractCThenPlusA(twoOption: boolean = false) {
                                    [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m2181[0m:[0m[33m36[0m

    [0m[36mhint:[0m Remove the type, it is easily inferrable
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-inferrable-types

([0m[31mprefer-const[0m) `questionElementHtml` is never reassigned
				let questionElementHtml: string;
        [0m[31m^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m3150[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mprefer-const[0m) `questionElementHtml` is never reassigned
				let questionElementHtml: string;
        [0m[31m^^^^^^^^^^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m3240[0m:[0m[33m8[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected createTableBodyRow = (item: object): void => {
                                       [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m3431[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	protected getUsableList = (): Array<object> => {
                                     [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m3508[0m:[0m[33m37[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mprefer-const[0m) `strongI18n` is never reassigned
		let strongI18n = getI18nableWithSameContent(label);
      [0m[31m^^^^^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\2.ts[0m:[0m[33m4743[0m:[0m[33m6[0m

    [0m[36mhint:[0m Use `const` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#prefer-const

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	constructor(appendData: object, otherComputedData: object) {
                         [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\copybookBase.ts[0m:[0m[33m44[0m:[0m[33m25[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
	constructor(appendData: object, otherComputedData: object) {
                                                    [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\copybookBase.ts[0m:[0m[33m44[0m:[0m[33m52[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherDataOfCopybook = (_newData: any): void => {};
                                                  [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\copybookBase.ts[0m:[0m[33m69[0m:[0m[33m50[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mno-explicit-any[0m) `any` type is not allowed
	protected updateOtherData = (newData: any): void => {
                                       [0m[31m^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\copybookBase.ts[0m:[0m[33m1105[0m:[0m[33m39[0m

    [0m[36mhint:[0m Use a specific type other than `any`
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#no-explicit-any

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		copybooks.forEach((copybook: object) => this.data.copybooks.push(copybook));
                               [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\copybookBase.ts[0m:[0m[33m1117[0m:[0m[33m31[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

([0m[31mban-types[0m) This type is tricky to use so should be avoided if possible
		selectedCheckboxIndexArray.forEach((selectedCheckboxIndex: object) =>
                                                             [0m[31m^^^^^^[0m
    at [0m[36mP:\ecs_person\websites\sonya.cc\edu_git\src\ts\bricks\copybookBase.ts[0m:[0m[33m1121[0m:[0m[33m61[0m

    [0m[36mhint:[0m Use `Record<string, unknown>` instead
    [0m[36mhelp:[0m for further information visit https://lint.deno.land/#ban-types

Found 353 problems
Checked 99 files
