<html>
  <head>
    <meta charset="utf-8" />
    <!-- It's useless? -->
    <meta http-equiv="Permissions-Policy" content="interest-cohort=()" />
    <meta
      id="viewportMeta"
      name="viewport"
      content="width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1,user-scalable=no,viewport-fit=cover,minimal-ui"
    />
    <title>A3 Dices (body -> svg)</title>
    <style id="style"></style>
  </head>
  <body>
  <script charset="utf-8" src="../js/anqi_utils.js"></script>
  <script charset="utf-8" src="../js/anqi_svg_utils.js"></script>
  <script charset="utf-8" src="../js/anqi_express_box.js"></script>
  <script charset="utf-8" src="../js/anqi_box.js"></script>
  <script charset="utf-8" src="../js/anqi_dice.js"></script>
  <script>
    // ?top=4&left=3.5&landscape=false&a3=true
    function draw() {
      setF1Content('?top=3.5&left=3.5&landscape=false&a3=true');

      const url = window.location.href.replace('?', '&');
      parsePageParamsFromUrl(url);
      parseExpressBoxParamsFromUrl(url);

      // document.getElementById('style').innerHTML = getPageCss();
      document.getElementById('style').innerHTML = getSvgCss();

      const body = document.getElementsByTagName('body')[0];

      // const topElement = createPageElement();
      const topElement = createTopSvgElement();
      body.appendChild(topElement);

      appendDices(topElement);

      // window.print();
    }

    function appendDiceSvgAndG(topElement, info, options) {
      const svgDice = info.svg;
      const svgStyle = svgDice.style;
      const width = parseFloat(svgDice.getAttribute('width').replace('mm', ''));
      const height = parseFloat(svgDice.getAttribute('height').replace('mm', ''));
      appendSvgAndG(
        topElement,
        createSvgAndGElement({ html: svgDice.innerHTML, width, height }),
        options,
      );
    }

    function appendDices(topElement) {
      console.log('call appendDices');
      const diceGenerator = new edu.sonya.cc.DiceGenerator();
      const DiceKind = edu.sonya.cc.DiceKind;

      let svgElement,
        svgStyle,
        svgId = 0,
        contents,
        diceKind,
        sideLength,
        outerLineStyle,
        innerLineStyle,
        textStyle,
        options;

      outerLineStyle = 'stroke:#555;stroke-width:0.2mm;';
      innerLineStyle = 'stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;';
      // textStyle= 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";';
      textStyle = 'font-size:3mm;font-family: "Kaiti";';
      options = {};

      function appendDiceFourFace() {
        console.log('call appendDiceFourFace');

        const diceKind = DiceKind.four;
        const sideLength = 10;
        const contents = '1,2,3,4'.split(',');
        // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),

        // ROW1
        const ROW1_TOP = 290;
        const ROW1_FIRST_LEFT = 35; // 36;
        const ROW1_SECOND_LEFT = ROW1_FIRST_LEFT + 200; // 204;

        [
          {
            top: ROW1_TOP,
            left: ROW1_FIRST_LEFT,
            degree: -17.5,
          },
          {
            top: ROW1_TOP - 4.5,
            left: ROW1_SECOND_LEFT,
            // degree: 0,
          },

          // {
          //   top: 20,
          //   left: 10,
          //   degree: -105,
          // },
          // {
          //   top: 20,
          //   left: ROW1_FIRST_LEFT + 20,
          //   degree: -17.5,
          // },
          // {
          //   top: 40,
          //   left: ROW1_FIRST_LEFT + 40,
          //   degree: 30,
          // },
          // // {
          // //   top: 60,
          // //   left: ROW1_FIRST_LEFT + 60,
          // //   degree: 90,
          // // },
          // // {
          // //   top: 90,
          // //   left: ROW1_FIRST_LEFT + 90,
          // //   degree: 105,
          // // },
        ].forEach(params => {
          console.log('before call appendDiceSvgAndG(), params:', params);
          // { id, svg: nested ? outerSvg : svg, css }
          // svg有属性width与height
          appendDiceSvgAndG(
            topElement,
            diceGenerator.create({
              id: `svg_${svgId++}`,
              diceKind,
              sideLength,
              contents,
              outerLineStyle,
              innerLineStyle,
              // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
              textStyle,
              options,
            }),
            params,
          );
        });
      }

      appendDiceFourFace();
    }

    function appendDicesOld(topElement) {
      const diceGenerator = new edu.sonya.cc.DiceGenerator();
      const DiceKind = edu.sonya.cc.DiceKind;

      let svgElement,
        svgStyle,
        svgId = 0,
        contents,
        diceKind,
        sideLength,
        outerLineStyle,
        innerLineStyle,
        textStyle,
        options;

      diceKind = DiceKind.four;
      sideLength = 10;
      contents = '1,2,3,4'.split(',');
      outerLineStyle = 'stroke:#555;stroke-width:0.2mm;';
      innerLineStyle = 'stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;';
      // textStyle= 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";';
      textStyle = 'font-size:3mm;font-family: "Kaiti";';
      options = {};

      // svgElement = diceGenerator.create({
      //   id: `svg_${svgId++}`,
      //   diceKind: DiceKind.four,
      //   sideLength: 10,
      //   // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
      //   contents,
      //   outerLineStyle: 'stroke:#555;stroke-width:0.2mm;',
      //   innerLineStyle: 'stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;',
      //   // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
      //   textStyle: 'font-size:3mm;font-family: "Kaiti";',
      //   options: {},
      // }).svg;
      for (let i = 0; i < 2; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        topElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = '290mm';
        // svgStyle.left = `${125 + 22 * i}mm`;
        svgStyle.left = `${36 + 204 * i}mm`;
        svgStyle.transform = 'rotate(-17.5deg)';

        if (i === 1) {
          svgStyle.top = '285.5mm';
          svgStyle.transform = '';
          // svgStyle.transform = 'rotate(-27.5deg)';
          // svgStyle.transform = 'rotate(-55deg)';
        }
      }
      for (let i = 0; i < 2; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        topElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = '335mm';
        // svgStyle.left = `${125 + 22 * i}mm`;
        svgStyle.left = `${32.5 + 206 * i}mm`;

        if (i === 1) {
          svgStyle.top = '339.5mm';
          svgStyle.transform = 'rotate(-27.5deg)';

          svgStyle.top = '331mm';
          svgStyle.transform = 'rotate(-55deg)';
        }
      }

      sideLength = 5;
      diceKind = DiceKind.six;
      // contents = '1,2,3,4,5,6'.split(',');
      contents = ',,,,,'.split(',');

      svgElement = diceGenerator.create({
        id: `svg_${svgId++}`,
        diceKind,
        sideLength,
        contents,
        outerLineStyle,
        innerLineStyle,
        textStyle,
        options,
      }).svg;
      topElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = '270mm';
      svgStyle.left = '149.5mm';
      svgStyle.transform = 'rotate(90deg)';

      for (let i = 0; i < 4; ++i) {
        for (let j = 0; j < 2; ++j) {
          const index = 2 * i + j;
          let top = 0;
          let left = 0;
          let rotate = 0;
          switch (index) {
            case 0:
              top = 32.5;
              left = 60;
              rotate = 60;
              break;
            case 1:
              top = 32.5;
              left = 212;
              rotate = 160;
              break;

            case 2:
              top = 110;
              left = 60;
              rotate = 150;
              break;
            case 3:
              top = 109.5;
              left = 215.5;
              rotate = 90;
              break;

            case 4:
              top = 222;
              left = 55.5;
              rotate = 90;
              break;
            case 5:
              top = 221;
              left = 268;
              rotate = 90;
              break;

            case 6:
              top = 234;
              left = 0;
              rotate = 102.5;
              break;
            case 7:
              top = 234;
              left = 215.5;
              rotate = 17.5;
              // top = 71;
              // left = 235;
              // rotate = 90;

              top = 218;
              left = 214;
              rotate = 15;

              top = 263;
              left = 76.5;
              rotate = 25; // 17.5;
              break;

            default:
              break;
          }
          svgElement = diceGenerator.create({
            id: `svg_${svgId++}`,
            diceKind,
            sideLength,
            contents,
            outerLineStyle,
            innerLineStyle,
            textStyle,
            options,
          }).svg;
          topElement.appendChild(svgElement);
          svgStyle = svgElement.style;
          svgStyle.position = 'absolute';
          svgStyle.top = `${top}mm`;
          svgStyle.left = `${left}mm`;
          svgStyle.transform = `rotate(${rotate}deg)`;
        }
      }

      // svgElement = diceGenerator.create({
      //   id: `svg_${svgId++}`,
      //   diceKind,
      //   sideLength,
      //   contents,
      //   outerLineStyle,
      //   innerLineStyle,
      //   textStyle,
      //   options,
      // }).svg;
      // topElement.appendChild(svgElement);
      // svgStyle = svgElement.style;
      // svgStyle.position = 'absolute';
      // svgStyle.top = '260mm';
      // svgStyle.left = '190mm';
      // svgStyle.top = '262.5mm';
      // svgStyle.left = '192.5mm';
      // svgStyle.transform = 'rotate(19deg)';
      // // svgStyle.transform = 'rotate(180deg)';

      for (let i = 0; i < 2; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        topElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        // svgStyle.top = '335mm';
        // svgStyle.left = '125mm';
        svgStyle.top = `${334 + 5 * i}mm`;
        svgStyle.left = `${125 + 20 * i}mm`;
      }

      sideLength = 8;
      diceKind = DiceKind.eight;
      // contents = '1,2,3,4,5,6,7,8'.split(',');
      contents = ',,,,,,,'.split(',');
      for (let i = 0; i < 1; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        topElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        // svgStyle.top = '335mm';
        // svgStyle.left = '125mm';
        svgStyle.top = `${340 + 5 * i}mm`;
        // svgStyle.left = `${125 + 20 * i}mm`;
        svgStyle.left = `${3.75 + 20 * i}mm`;
        svgStyle.transform = 'rotate(25deg)';
      }

      // sideLength = 5;
      // diceKind = DiceKind.twelve;
      // // contents = '1,2,3,4,5,6,7,8,9,10,11,12'.split(',');
      // contents = ',,,,,,,,,,,'.split(',');
      // svgElement = diceGenerator.create({
      //   id: `svg_${svgId++}`,
      //   diceKind,
      //   sideLength,
      //   // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
      //   contents,
      //   outerLineStyle,
      //   innerLineStyle,
      //   // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
      //   textStyle,
      //   options,
      // }).svg;
      // topElement.appendChild(svgElement);
      // svgStyle = svgElement.style;
      // svgStyle.position = 'absolute';
      // // svgStyle.top = '335mm';
      // // svgStyle.left = '125mm';
      // // svgStyle.top = `${390 + 5 * i}mm`;
      // // svgStyle.top = `${260 + 5 * i}mm`;
      // // // svgStyle.left = `${125 + 20 * i}mm`;
      // // svgStyle.left = `${128 + 20 * i}mm`;

      // // svgStyle.top = '268mm';
      // // svgStyle.left = '140mm';
      // // svgStyle.transform = 'rotate(82.5deg)';
      // svgStyle.top = '272mm';
      // svgStyle.left = '140mm';
      // svgStyle.transform = 'rotate(80deg)';

      // sideLength = 8;
      // diceKind = DiceKind.twenty;
      // // contents = '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20'.split(',');
      // contents = ',,,,,,,,,,,,,,,,,,,'.split(',');
      // for (let i = 0; i < 1; ++i) {
      //   svgElement = diceGenerator.create({
      //     id: `svg_${svgId++}`,
      //     diceKind,
      //     sideLength,
      //     // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
      //     contents,
      //     outerLineStyle,
      //     innerLineStyle,
      //     // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
      //     textStyle,
      //     options,
      //   }).svg;
      //   topElement.appendChild(svgElement);
      //   svgStyle = svgElement.style;
      //   svgStyle.position = 'absolute';
      //   // svgStyle.top = '335mm';
      //   // svgStyle.left = '125mm';
      //   svgStyle.top = `${390 + 5 * i}mm`;
      //   // svgStyle.left = `${125 + 20 * i}mm`;
      //   svgStyle.left = `${128 + 20 * i}mm`;
      //   // svgStyle.transform = 'rotate(25deg)';
      // }

      sideLength = 5;
      diceKind = DiceKind.twelve;
      // contents = '1,2,3,4,5,6,7,8,9,10,11,12'.split(',');
      contents = ',,,,,,,,,,,'.split(',');
      svgElement = diceGenerator.create({
        id: `svg_${svgId++}`,
        diceKind,
        sideLength,
        // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
        contents,
        outerLineStyle,
        innerLineStyle,
        textStyle,
        options,
      }).svg;
      topElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = `${390}mm`;
      svgStyle.left = `${128}mm`;

      sideLength = 5;
      diceKind = DiceKind.twenty;
      // contents = '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20'.split(',');
      contents = ',,,,,,,,,,,,,,,,,,,'.split(',');
      for (let i = 0; i < 2; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        topElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = '335mm';
        svgStyle.left = '125mm';
        svgStyle.top = '395mm';
        // svgStyle.left = `${125 + 20 * i}mm`;
        // svgStyle.left = `${31 + 202.5 * i}mm`;
        svgStyle.left = `${31 + 205 * i}mm`;
        if (i === 0) {
          svgStyle.transform = 'rotate(71deg)';
        } else {
          svgStyle.top = '393mm';
          // svgStyle.transform = 'rotate(-85deg)';
          // svgStyle.transform = 'rotate(-45deg)';
          svgStyle.transform = 'rotate(-60deg)';
        }
      }
    }

    draw();
  </script>
  </body>
</html>
