function parseExpressBoxParamsFromUrl(t){t=t.replace("?","&").toLowerCase();const{max:n,min:e}=Math;window.THICKESS=n(0,e(1,parseFloat(t.concat("&thickess=1").replace("&thickess=","厶").split("厶")[1].split("&")[0])));window.NO=n(0,parseInt(t.concat("&no=1").replace("&no=","厶").split("厶")[1].split("&")[0]));window.LANG=t.concat("&lang=en").replace("&lang=","厶").split("厶")[1].split("&")[0];if(["en","zh_cn","zh_tw"].indexOf(window.LANG)===-1){window.LANG="en"}}function getExpressBoxSvgHtml(t,n,e,$){const{max:o,min:W}=Math;t=o(1,t||40);n=o(1,n||30);e=o(1,e||20);$=o(2,$||5);const i=t+e*4+$*2;const c=e*3+n*2;const s=t*.5;const a=s+e*2+$*1;const l=mmToPxScale*t;const m=mmToPxScale*n;const h=mmToPxScale*e;const r=mmToPxScale*$;const v=mmToPxScale*THICKESS;const K=e*.5;const N=e*.25;const q=n*.25;const G=n*.5;const d=mmToPxScale*K;const g=mmToPxScale*G;const S=mmToPxScale*N;const x=mmToPxScale*q;const p=mmToPxScale*o(n,e)*.25;const w=h-S*2-v*2;const u=m-x*2-v*2;const I=h-p*2-v*2;const L=m-r*2-v*2;let T="";const O=0;const f=O+e;const H=f+n;const P=H+e;const C=P+n;const B=C+e;const E=P+THICKESS;const z=C-THICKESS;const M=a-s;const V=M-e;const k=V-e;const F=k-$;const y=a+s;const b=y+e;const A=b+e;const _=A+$;T+=`<path fill="none" stroke="#000000" d="M ${mmToPxScale*M},0 h ${l}

v ${v}
a ${d} ${S} 0 0 1 ${d},${S}
v ${w}
a ${d} ${S} 0 0 1 -${d},${S}
v ${v}

v ${v}
a ${h} ${x} 0 0 1 ${h},${x}
v ${u}
a ${h} ${x} 0 0 1 -${h},${x}
v ${v}

v ${v}
a ${g} ${p} 0 0 1 ${g},${p}
v ${I}
a ${g} ${p} 0 0 1 -${g},${p}
v ${v}

h ${h}
v ${v}
h ${h}
a ${r} ${r} 0 0 1 ${r},${r}
v ${L}
a ${r} ${r} 0 0 1 -${r},${r}
h -${h}
v ${v}
h -${h}

v ${v}
a ${g} ${p} 0 0 1 ${g},${p}
v ${I}
a ${g} ${p} 0 0 1 -${g},${p}
v ${v}

h -${l}

v -${v}
a ${g} ${p} 0 0 1 -${g},-${p}
v -${I}
a ${g} ${p} 0 0 1 ${g},-${p}
v -${v}

h -${h}
v -${v}
h -${h}
a ${r} ${r} 0 0 1 -${r},-${r}
v -${L}
a ${r} ${r} 0 0 1 ${r},-${r}
h ${h}
v -${v}
h ${h}

v -${v}
a ${g} ${p} 0 0 1 -${g},-${p}
v -${I}
a ${g} ${p} 0 0 1 ${g},-${p}
v -${v}

v -${v}
a ${h} ${x} 0 0 1 -${h},-${x}
v -${u}
a ${h} ${x} 0 0 1 ${h},-${x}
v -${v}

v -${v}
a ${d} ${S} 0 0 1 -${d},-${S}
v -${w}
a ${d} ${S} 0 0 1 ${d},-${S}
v -${v}

z"></path>

${getInlineVerticalLine(M,0,c)}
${getInlineVerticalLine(y,0,c)}

${getInlineVerticalLine(k,E,z)}
${getInlineVerticalLine(V,E,z)}

${getInlineVerticalLine(b,E,z)}
${getInlineVerticalLine(A,E,z)}

${getInnerHorizontalLine(M,y,f)}
${getInnerHorizontalLine(M,y,H)}
${getInnerHorizontalLine(M,y,P)}
${getInnerHorizontalLine(M,y,C)}

`;return{html:T,width:i,height:c}}function getCuboidWithSquareSectionSvgHtml(t,n,e){const{max:$,min:o}=Math;t=$(1,t||40);width=$(1,n||t*.5);if(width>t){width+=t;t-=width-t;width=width-t}height=width;return getCuboidWithHalfExtend(t,width,height,e)}function getCuboidWithHalfExtend(t,n,e,$){const{max:o,min:i}=Math;t=o(1,t||40);n=o(1,n||40);e=o(1,e||40);$=o(1,$||40);extend=i(n,e)*.5;const c=t*2+e*2+$;const s=n+extend*2;const a=mmToPxScale*t;const l=mmToPxScale*n;const m=mmToPxScale*e;const h=mmToPxScale*extend;const r=mmToPxScale*$;const v=0;const d=v+extend;const g=d+n;const S=0;const x=S+e;const p=x+t;const w=p+e;const u=w+t;const I=`<path fill="none" stroke="#000000"
d="M 0, ${h}

v -${h}
h ${m}
v ${h}

v -${h}
h ${a}
v ${h}

v -${h}
h ${m}
v ${h}

v -${h}
h ${a}
v ${h}

h ${r}

v ${l}
h -${r}

v ${h}
h -${a}
v -${h}

v ${h}
h -${m}
v -${h}

v ${h}
h -${a}
v -${h}

v ${h}
h -${m}
v -${h}
z"></path>

${getInnerHorizontalLine(S,u,d)}
${getInnerHorizontalLine(S,u,g)}

${getInlineVerticalLine(x,d,g)}
${getInlineVerticalLine(p,d,g)}
${getInlineVerticalLine(w,d,g)}
${getInlineVerticalLine(u,d,g)}
`;return{html:I,width:c,height:s}}function getInnerHorizontalLine(t,n,e){return`<line x1="${t}mm" x2="${n}mm" y1="${e}mm" y2="${e}mm" style="stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;"></line>`}function getInlineVerticalLine(t,n,e){return`<line x1="${t}mm" x2="${t}mm" y1="${n}mm" y2="${e}mm" style="stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;"></line>`}function createAndAppendCuboids(n,e,$,o,i){const c=[];for(let t=0;t<i;++t){const{html:s,width:a,height:l}=getCuboidWithSquareSectionSvgHtml(e,$,o);const{svgElement:m}=createSvgElement(s,a,l);n.appendChild(m);m.widthMm=a;m.heightMm=l;c.push(m)}return c}function createAndAppendCuboid(t,n,e,$){const{html:o,width:i,height:c}=getCuboidWithSquareSectionSvgHtml(n,e,$);const{svgElement:s}=createSvgElement(o,i,c);t.appendChild(s);s.widthMm=i;s.heightMm=c;return s}function rotate90(t){const n=t.style;const{heightMm:e}=t;const $=e*.5;n.transform="rotate(90deg)";n.transformOrigin=`${$}mm ${$}mm`}