<html>
  <head>
    <meta charset="utf-8" />
    <!-- It's useless? -->
    <meta http-equiv="Permissions-Policy" content="interest-cohort=()" />
    <meta
      id="viewportMeta"
      name="viewport"
      content="width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1,user-scalable=no,viewport-fit=cover,minimal-ui"
    />
    <title>A3 Express Box (body -> page -> svg)</title>
    <style id="style"></style>
  </head>
  <body></body>
  <script charset="utf-8" src="../js/anqi_utils.js"></script>
  <script charset="utf-8" src="../js/anqi_svg_utils.js"></script>
  <script charset="utf-8" src="../js/anqi_express_box.js"></script>
  <script charset="utf-8" src="../js/anqi_dice.js"></script>
  <script>
    function createSvgElementNew({ html, width, height }) {
      return createSvgElement(html, width, height);
    }

    // ?top=4&left=3.5&landscape=false&a3=true
    function draw() {
      setF1Content('?top=4&left=3.5&landscape=false&a3=true');

      const url = window.location.href.replace('?', '&');
      parsePageParamsFromUrl(url);
      parseExpressBoxParamsFromUrl(url);

      document.getElementById('style').innerHTML = getPageCss(
        A3,
        LANDSCAPE,
        PAGE_PADDING_TOP,
        PAGE_PADDING_LEFT,
      );

      const body = document.getElementsByTagName('body')[0];

      const pageElement = createPageElement();
      body.appendChild(pageElement);

      appendExpressBoxes(pageElement);
      appendDices(pageElement);

      window.print();
    }

    function appendExpressBoxes(pageElement) {
      let svgElementInfo, svgElement, svgWidth, svgHeight, svgStyle;

      let boxLong, boxWidth, boxHeight, boxExtend;

      // boxLong = 80, boxWidth = 60, boxHeight = 50, boxExtend = 5;
      (boxLong = 80), (boxWidth = 60), (boxHeight = 48), (boxExtend = 5);
      svgElementInfo = createSvgElementNew(
        getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
      );
      svgElement = svgElementInfo.svgElement;
      pageElement.appendChild(svgElement);
      // svgWidth = svgElementInfo.width;
      // svgHeight = svgElementInfo.height;
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.left = '7.5mm';
      svgStyle.top = '3.5mm';

      const MIDDLE_BOTTOM = '3.5mm';
      const MIDDLE_FIRST_LEFT = '16mm'; // 3.5  18
      const MIDDLE_SECOND_RIGHT = '13mm'; // 0

      // boxLong = 40, boxWidth = 30, boxHeight = 25, boxExtend = 5;
      (boxLong = 40), (boxWidth = 30), (boxHeight = 24), (boxExtend = 5);
      for (let i = 0; i < 2; ++i) {
        svgElementInfo = createSvgElementNew(
          getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
        );
        svgElement = svgElementInfo.svgElement;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.bottom = MIDDLE_BOTTOM;
        if (i === 0) {
          svgStyle.left = MIDDLE_FIRST_LEFT;
        } else if (i === 1) {
          svgStyle.right = MIDDLE_SECOND_RIGHT;
          svgStyle.transform = 'rotate(180deg)';
        }
      }

      // boxLong = 20, boxWidth = 15, boxHeight = 12.5, boxExtend = 3;
      (boxLong = 20), (boxWidth = 15), (boxHeight = 12), (boxExtend = 3);

      const SMALL_TOP_ROW1 = '3.5mm';
      const SMALL_LEFT_ROW1 = '3.5mm';
      const SMALL_RIGHT_ROW1 = '0mm';
      for (let i = 0; i < 2; ++i) {
        svgElementInfo = createSvgElementNew(
          getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
        );
        svgElement = svgElementInfo.svgElement;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = SMALL_TOP_ROW1;
        if (i === 0) {
          svgStyle.left = SMALL_LEFT_ROW1;
          svgStyle.transform = 'rotate(180deg)';
        } else if (i === 1) {
          svgStyle.right = SMALL_RIGHT_ROW1;
          svgStyle.transform = 'rotate(180deg)';
        }
      }

      const SMALL_TOP_ROW2 = '93mm';
      for (let i = 0; i < 2; ++i) {
        svgElementInfo = createSvgElementNew(
          getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
        );
        svgElement = svgElementInfo.svgElement;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = SMALL_TOP_ROW2;
        if (i === 0) {
          svgStyle.left = SMALL_LEFT_ROW1;
          // svgStyle.transform = 'rotate(180deg)';
        } else if (i === 1) {
          svgStyle.right = SMALL_RIGHT_ROW1;
          // svgStyle.transform = 'rotate(180deg)';
        }
      }

      const SMALL_BOTTOM_ROW3 = '131.5mm';
      const SMALL_LEFT_ROW3 = '3mm';
      const SMALL_RIGHT_ROW3 = '3mm';
      for (let i = 0; i < 2; ++i) {
        svgElementInfo = createSvgElementNew(
          getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
        );
        svgElement = svgElementInfo.svgElement;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.bottom = SMALL_BOTTOM_ROW3;
        if (i === 0) {
          svgStyle.left = SMALL_LEFT_ROW3;
          // svgStyle.transform = 'rotate(180deg)';
        } else if (i === 1) {
          svgStyle.right = SMALL_RIGHT_ROW3;
          // svgStyle.transform = 'rotate(180deg)';
        }
      }

      (boxLong = 10), (boxWidth = 7.5), (boxHeight = 6), (boxExtend = 2);

      const X_SMALL_TOP_ROW1 = '65mm';
      const X_SMALL_LEFT_ROW1 = '0mm';
      const X_SMALL_RIGHT_ROW1 = '0mm';
      for (let i = 0; i < 2; ++i) {
        svgElementInfo = createSvgElementNew(
          getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
        );
        svgElement = svgElementInfo.svgElement;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.zIndex = 1;
        svgStyle.top = X_SMALL_TOP_ROW1;
        if (i === 0) {
          svgStyle.left = X_SMALL_LEFT_ROW1;
          svgStyle.transform = 'rotate(90deg)';
        } else if (i === 1) {
          svgStyle.right = X_SMALL_RIGHT_ROW1;
          svgStyle.transform = 'rotate(-90deg)';
        }
      }

      const X_SMALL_TOP_ROW2 = 282;
      const X_SMALL_LEFT_ROW2 = '3mm';
      const X_SMALL_MIDDLE_ROW2 = '120mm';
      const X_SMALL_RIGHT_ROW2 = '-2mm';
      for (let i = 0; i < 3; ++i) {
        svgElementInfo = createSvgElementNew(
          getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
        );
        svgElement = svgElementInfo.svgElement;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = `${X_SMALL_TOP_ROW2}mm`;
        if (i === 0) {
          svgStyle.left = X_SMALL_LEFT_ROW2;
          svgStyle.transform = 'rotate(90deg)';
        } else if (i === 1) {
          svgStyle.top = `${X_SMALL_TOP_ROW2 - 10}mm`;
          svgStyle.left = X_SMALL_MIDDLE_ROW2;
          svgStyle.transform = 'rotate(90deg)';
        } else if (i === 2) {
          svgStyle.top = `${X_SMALL_TOP_ROW2 - 4.5}mm`;
          svgStyle.right = X_SMALL_RIGHT_ROW2;
          svgStyle.transform = 'rotate(-90deg)';
        }
      }

      const X_SMALL_TOP_ROW3 = '315mm';
      const X_SMALL_LEFT_ROW3 = '3mm';
      svgElementInfo = createSvgElementNew(
        getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
      );
      svgElement = svgElementInfo.svgElement;
      pageElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = X_SMALL_TOP_ROW3;
      svgStyle.left = X_SMALL_LEFT_ROW3;
      svgStyle.transform = 'rotate(-90deg)';

      const X_SMALL_TOP_ROW4 = '328mm';
      const X_SMALL_RIGHT_ROW4 = '-2mm';
      svgElementInfo = createSvgElementNew(
        getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
      );
      svgElement = svgElementInfo.svgElement;
      pageElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = X_SMALL_TOP_ROW4;
      svgStyle.right = X_SMALL_RIGHT_ROW4;
      svgStyle.transform = 'rotate(-90deg)';

      const X_SMALL_TOP_ROW5 = '355mm';
      const X_SMALL_RIGHT_ROW5 = '6mm';
      svgElementInfo = createSvgElementNew(
        getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
      );
      svgElement = svgElementInfo.svgElement;
      pageElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = X_SMALL_TOP_ROW5;
      svgStyle.right = X_SMALL_RIGHT_ROW5;
      svgStyle.transform = 'rotate(90deg)';

      const X_SMALL_TOP_ROW7 = '383mm';
      const X_SMALL_RIGHT_ROW7 = '0mm';
      svgElementInfo = createSvgElementNew(
        getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
      );
      svgElement = svgElementInfo.svgElement;
      pageElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = X_SMALL_TOP_ROW7;
      svgStyle.right = X_SMALL_RIGHT_ROW7;
      // svgStyle.transform = 'rotate(-90deg)';

      // const X_SMALL_TOP_ROW8 = '387.5mm';
      // const X_SMALL_LEFT_ROW8 = '3mm';
      // const X_SMALL_MIDDLE_ROW8 = '120mm';
      // for (let i = 0; i < 2; ++i) {
      //   svgElementInfo = createSvgElementNew(
      //     getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
      //   );
      //   svgElement = svgElementInfo.svgElement;
      //   pageElement.appendChild(svgElement);
      //   svgStyle = svgElement.style;
      //   svgStyle.position = 'absolute';
      //   svgStyle.top = X_SMALL_TOP_ROW8;
      //   if (i === 0) {
      //     svgStyle.left = X_SMALL_LEFT_ROW8;
      //     svgStyle.transform = 'rotate(90deg)';
      //   } else if (i === 1) {
      //     svgStyle.left = X_SMALL_MIDDLE_ROW8;
      //     svgStyle.transform = 'rotate(-90deg)';
      //   }
      // }

      // (boxLong = 5), (boxWidth = 3.75), (boxHeight = 3), (boxExtend = 2);
      (boxLong = 6), (boxWidth = 6), (boxHeight = 6), (boxExtend = 2);

      // const XX_SMALL_TOP_ROW1 = '381.5mm';
      // const XX_SMALL_RIGHT_ROW1 = '30mm';
      // svgElementInfo = createSvgElementNew(getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend));
      // svgElement = svgElementInfo.svgElement;
      // pageElement.appendChild(svgElement);
      // svgStyle = svgElement.style;
      // svgStyle.position = 'absolute';
      // svgStyle.top = XX_SMALL_TOP_ROW1;
      // svgStyle.right = XX_SMALL_RIGHT_ROW1;
      // svgStyle.transform = 'rotate(90deg)';

      const XX_SMALL_TOP_ROW2 = '381.5mm';
      const XX_SMALL_LEFT_ROW2 = '3mm';
      svgElementInfo = createSvgElementNew(
        getExpressBoxSvgHtml(boxLong, boxWidth, boxHeight, boxExtend),
      );
      svgElement = svgElementInfo.svgElement;
      pageElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = XX_SMALL_TOP_ROW2;
      svgStyle.left = XX_SMALL_LEFT_ROW2;
      svgStyle.transform = 'rotate(90deg)';
    }

    function appendDices(pageElement) {
      const diceGenerator = new edu.sonya.cc.DiceGenerator();
      const DiceKind = edu.sonya.cc.DiceKind;

      let svgElement,
        svgStyle,
        svgId = 0,
        contents,
        diceKind,
        sideLength,
        outerLineStyle,
        innerLineStyle,
        textStyle,
        options;

      diceKind = DiceKind.four;
      sideLength = 10;
      contents = '1,2,3,4'.split(',');
      outerLineStyle = 'stroke:#555;stroke-width:0.2mm;';
      innerLineStyle = 'stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;';
      // textStyle= 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";';
      textStyle = 'font-size:3mm;font-family: "Kaiti";';
      options = {};

      // svgElement = diceGenerator.create({
      //   id: `svg_${svgId++}`,
      //   diceKind: DiceKind.four,
      //   sideLength: 10,
      //   // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
      //   contents,
      //   outerLineStyle: 'stroke:#555;stroke-width:0.2mm;',
      //   innerLineStyle: 'stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;',
      //   // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
      //   textStyle: 'font-size:3mm;font-family: "Kaiti";',
      //   options: {},
      // }).svg;
      for (let i = 0; i < 2; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = '290mm';
        // svgStyle.left = `${125 + 22 * i}mm`;
        svgStyle.left = `${36 + 204 * i}mm`;
        svgStyle.transform = 'rotate(-17.5deg)';

        if (i === 1) {
          svgStyle.top = '285.5mm';
          svgStyle.transform = '';
          // svgStyle.transform = 'rotate(-27.5deg)';
          // svgStyle.transform = 'rotate(-55deg)';
        }
      }
      for (let i = 0; i < 2; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = '335mm';
        // svgStyle.left = `${125 + 22 * i}mm`;
        svgStyle.left = `${32.5 + 206 * i}mm`;

        if (i === 1) {
          svgStyle.top = '339.5mm';
          svgStyle.transform = 'rotate(-27.5deg)';

          svgStyle.top = '331mm';
          svgStyle.transform = 'rotate(-55deg)';
        }
      }

      sideLength = 5;
      diceKind = DiceKind.six;
      // contents = '1,2,3,4,5,6'.split(',');
      contents = ',,,,,'.split(',');

      svgElement = diceGenerator.create({
        id: `svg_${svgId++}`,
        diceKind,
        sideLength,
        contents,
        outerLineStyle,
        innerLineStyle,
        textStyle,
        options,
      }).svg;
      pageElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = '270mm';
      svgStyle.left = '149.5mm';
      svgStyle.transform = 'rotate(90deg)';

      for (let i = 0; i < 4; ++i) {
        for (let j = 0; j < 2; ++j) {
          const index = 2 * i + j;
          let top = 0;
          let left = 0;
          let rotate = 0;
          switch (index) {
            case 0:
              top = 32.5;
              left = 60;
              rotate = 60;
              break;
            case 1:
              top = 32.5;
              left = 212;
              rotate = 160;
              break;

            case 2:
              top = 110;
              left = 60;
              rotate = 150;
              break;
            case 3:
              top = 109.5;
              left = 215.5;
              rotate = 90;
              break;

            case 4:
              top = 222;
              left = 55.5;
              rotate = 90;
              break;
            case 5:
              top = 221;
              left = 268;
              rotate = 90;
              break;

            case 6:
              top = 234;
              left = 0;
              rotate = 102.5;
              break;
            case 7:
              top = 234;
              left = 215.5;
              rotate = 17.5;
              // top = 71;
              // left = 235;
              // rotate = 90;

              top = 218;
              left = 214;
              rotate = 15;

              top = 263;
              left = 76.5;
              rotate = 25; // 17.5;
              break;

            default:
              break;
          }
          svgElement = diceGenerator.create({
            id: `svg_${svgId++}`,
            diceKind,
            sideLength,
            contents,
            outerLineStyle,
            innerLineStyle,
            textStyle,
            options,
          }).svg;
          pageElement.appendChild(svgElement);
          svgStyle = svgElement.style;
          svgStyle.position = 'absolute';
          svgStyle.top = `${top}mm`;
          svgStyle.left = `${left}mm`;
          svgStyle.transform = `rotate(${rotate}deg)`;
        }
      }

      // svgElement = diceGenerator.create({
      //   id: `svg_${svgId++}`,
      //   diceKind,
      //   sideLength,
      //   contents,
      //   outerLineStyle,
      //   innerLineStyle,
      //   textStyle,
      //   options,
      // }).svg;
      // pageElement.appendChild(svgElement);
      // svgStyle = svgElement.style;
      // svgStyle.position = 'absolute';
      // svgStyle.top = '260mm';
      // svgStyle.left = '190mm';
      // svgStyle.top = '262.5mm';
      // svgStyle.left = '192.5mm';
      // svgStyle.transform = 'rotate(19deg)';
      // // svgStyle.transform = 'rotate(180deg)';

      for (let i = 0; i < 2; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        // svgStyle.top = '335mm';
        // svgStyle.left = '125mm';
        svgStyle.top = `${334 + 5 * i}mm`;
        svgStyle.left = `${125 + 20 * i}mm`;
      }

      sideLength = 8;
      diceKind = DiceKind.eight;
      // contents = '1,2,3,4,5,6,7,8'.split(',');
      contents = ',,,,,,,'.split(',');
      for (let i = 0; i < 1; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        // svgStyle.top = '335mm';
        // svgStyle.left = '125mm';
        svgStyle.top = `${340 + 5 * i}mm`;
        // svgStyle.left = `${125 + 20 * i}mm`;
        svgStyle.left = `${3.75 + 20 * i}mm`;
        svgStyle.transform = 'rotate(25deg)';
      }

      // sideLength = 5;
      // diceKind = DiceKind.twelve;
      // // contents = '1,2,3,4,5,6,7,8,9,10,11,12'.split(',');
      // contents = ',,,,,,,,,,,'.split(',');
      // svgElement = diceGenerator.create({
      //   id: `svg_${svgId++}`,
      //   diceKind,
      //   sideLength,
      //   // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
      //   contents,
      //   outerLineStyle,
      //   innerLineStyle,
      //   // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
      //   textStyle,
      //   options,
      // }).svg;
      // pageElement.appendChild(svgElement);
      // svgStyle = svgElement.style;
      // svgStyle.position = 'absolute';
      // // svgStyle.top = '335mm';
      // // svgStyle.left = '125mm';
      // // svgStyle.top = `${390 + 5 * i}mm`;
      // // svgStyle.top = `${260 + 5 * i}mm`;
      // // // svgStyle.left = `${125 + 20 * i}mm`;
      // // svgStyle.left = `${128 + 20 * i}mm`;

      // // svgStyle.top = '268mm';
      // // svgStyle.left = '140mm';
      // // svgStyle.transform = 'rotate(82.5deg)';
      // svgStyle.top = '272mm';
      // svgStyle.left = '140mm';
      // svgStyle.transform = 'rotate(80deg)';

      // sideLength = 8;
      // diceKind = DiceKind.twenty;
      // // contents = '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20'.split(',');
      // contents = ',,,,,,,,,,,,,,,,,,,'.split(',');
      // for (let i = 0; i < 1; ++i) {
      //   svgElement = diceGenerator.create({
      //     id: `svg_${svgId++}`,
      //     diceKind,
      //     sideLength,
      //     // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
      //     contents,
      //     outerLineStyle,
      //     innerLineStyle,
      //     // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
      //     textStyle,
      //     options,
      //   }).svg;
      //   pageElement.appendChild(svgElement);
      //   svgStyle = svgElement.style;
      //   svgStyle.position = 'absolute';
      //   // svgStyle.top = '335mm';
      //   // svgStyle.left = '125mm';
      //   svgStyle.top = `${390 + 5 * i}mm`;
      //   // svgStyle.left = `${125 + 20 * i}mm`;
      //   svgStyle.left = `${128 + 20 * i}mm`;
      //   // svgStyle.transform = 'rotate(25deg)';
      // }

      sideLength = 5;
      diceKind = DiceKind.twelve;
      // contents = '1,2,3,4,5,6,7,8,9,10,11,12'.split(',');
      contents = ',,,,,,,,,,,'.split(',');
      svgElement = diceGenerator.create({
        id: `svg_${svgId++}`,
        diceKind,
        sideLength,
        // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
        contents,
        outerLineStyle,
        innerLineStyle,
        textStyle,
        options,
      }).svg;
      pageElement.appendChild(svgElement);
      svgStyle = svgElement.style;
      svgStyle.position = 'absolute';
      svgStyle.top = `${390}mm`;
      svgStyle.left = `${128}mm`;

      sideLength = 5;
      diceKind = DiceKind.twenty;
      contents = '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20'.split(',');
      // contents = ',,,,,,,,,,,,,,,,,,,'.split(',');
      for (let i = 0; i < 2; ++i) {
        svgElement = diceGenerator.create({
          id: `svg_${svgId++}`,
          diceKind,
          sideLength,
          // contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
          contents,
          outerLineStyle,
          innerLineStyle,
          // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
          textStyle,
          options,
        }).svg;
        pageElement.appendChild(svgElement);
        svgStyle = svgElement.style;
        svgStyle.position = 'absolute';
        svgStyle.top = '335mm';
        svgStyle.left = '125mm';
        svgStyle.top = '395mm';
        // svgStyle.left = `${125 + 20 * i}mm`;
        // svgStyle.left = `${31 + 202.5 * i}mm`;
        svgStyle.left = `${31 + 205 * i}mm`;
        if (i === 0) {
          svgStyle.transform = 'rotate(71deg)';
        } else {
          svgStyle.top = '393mm';
          // svgStyle.transform = 'rotate(-85deg)';
          // svgStyle.transform = 'rotate(-45deg)';
          svgStyle.transform = 'rotate(-60deg)';
        }
      }
    }
    // function appendBoxes(pageElement) {
    //   const boxGenerator = new boxSpace.edu.sonya.cc.BoxGenerator();
    //   const DiceKind = boxSpace.edu.sonya.cc.DiceKind;

    //   let svgElement,
    //     svgStyle,
    //     svgId = 0;
    //   svgElement = diceGenerator.create({
    //     id: `svg_${svgId++}`,
    //     diceKind: DiceKind.four,
    //     sideLength: 25,
    //     contents: 'ˉ,ˊ,ˇ,ˋ'.split(','),
    //     outerLineStyle: 'stroke:#555;stroke-width:0.2mm;',
    //     innerLineStyle: 'stroke:#888;stroke-width:0.1mm;stroke-dasharray:3 2;',
    //     // textStyle: 'font-size:8.5mm;font-family:"Times New Roman", "Kaiti";',
    //     textStyle: 'font-size:8.5mm;font-family: "Kaiti";',
    //     options: {},
    //   }).svg;
    //   pageElement.appendChild(svgElement);
    //   svgStyle = svgElement.style;
    //   svgStyle.position = 'absolute';
    //   svgStyle.top = '300mm';
    //   svgStyle.left = '150mm';
    // }

    draw();
  </script>
</html>
